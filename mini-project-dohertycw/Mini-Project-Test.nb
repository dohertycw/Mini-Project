(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1108147,      19734]
NotebookOptionsPosition[   1103207,      19648]
NotebookOutlinePosition[   1103633,      19665]
CellTagsIndexPosition[   1103590,      19662]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ACM30100 - Mini-Project: Support Vectors", "Title",
 CellChangeTimes->{{3.8593073596040144`*^9, 3.859307363201502*^9}, {
  3.8593075301379766`*^9, 
  3.859307544581916*^9}},ExpressionUUID->"d7a1a54d-d6ce-48f0-a9cb-\
6e0bac01d545"],

Cell["\<\
I began by  importing my data into Mathematica. In this case I\
\[CloseCurlyQuote]m analysing the quality of the coffee from 3 South American \
countries as scored by the Coffee Quality Institute.\
\>", "Text",
 CellChangeTimes->{{3.859307553897208*^9, 
  3.8593076320115967`*^9}},ExpressionUUID->"c3cc6317-327e-4201-9ac3-\
88dc46e07339"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\<C:\\\\Users\\\\doher\\\\Documents\\\\GitHub\\\\mini-project-dohertycw\
\\\\merged_data_cleaned.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8591995291646695`*^9, 3.8591995727920175`*^9}, 
   3.8591996028768797`*^9, {3.8592011982978864`*^9, 3.859201239044182*^9}, 
   3.8592013806732197`*^9, {3.859201692121648*^9, 3.8592016970863333`*^9}, {
   3.859201891781228*^9, 3.8592019052540264`*^9}, {3.8592019562056036`*^9, 
   3.859201961544366*^9}, {3.8592020878236723`*^9, 3.8592020879541216`*^9}, {
   3.859278530056311*^9, 3.8592785420407248`*^9}, 3.8592786636335883`*^9, {
   3.8592862486280727`*^9, 3.8592862599120083`*^9}, {3.8592906714124837`*^9, 
   3.8592906918834143`*^9}, {3.859298042388818*^9, 3.859298048774446*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6d1ea80c-02c4-49c0-a03b-1c7e87801e39"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          9615122609458512095999870086144404062734897667785441655112], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "column1"} -> 
            1, {All, "Species"} -> 1, {All, "Owner"} -> 
            1, {All, "Country.of.Origin"} -> 1, {All, "Farm.Name"} -> 
            1, {All, "Lot.Number"} -> 1, {All, "Mill"} -> 
            1, {All, "ICO.Number"} -> 1, {All, "Company"} -> 
            1, {All, "Altitude"} -> 1, {All, "Region"} -> 
            1, {All, "Producer"} -> 1, {All, "Number.of.Bags"} -> 
            1, {All, "Bag.Weight"} -> 1, {All, "In.Country.Partner"} -> 
            1, {All, "Harvest.Year"} -> 1, {All, "Grading.Date"} -> 
            1, {All, "Owner.1"} -> 1, {All, "Variety"} -> 
            1, {All, "Processing.Method"} -> 1, {All, "Aroma"} -> 
            1, {All, "Flavor"} -> 1, {All, "Aftertaste"} -> 
            1, {All, "Acidity"} -> 1, {All, "Body"} -> 1, {All, "Balance"} -> 
            1, {All, "Uniformity"} -> 1, {All, "Clean.Cup"} -> 
            1, {All, "Sweetness"} -> 1, {All, "Cupper.Points"} -> 
            1, {All, "Total.Cup.Points"} -> 1, {All, "Moisture"} -> 
            1, {All, "Category.One.Defects"} -> 1, {All, "Quakers"} -> 
            1, {All, "Color"} -> 1, {All, "Category.Two.Defects"} -> 
            1, {All, "Expiration"} -> 1, {All, "Certification.Body"} -> 
            1, {All, "Certification.Address"} -> 
            1, {All, "Certification.Contact"} -> 
            1, {All, "unit_of_measurement"} -> 
            1, {All, "altitude_low_meters"} -> 
            1, {All, "altitude_high_meters"} -> 
            1, {All, "altitude_mean_meters"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "column1" -> TypeSystem`PackageScope`AtomShape[34], "Species" -> 
                TypeSystem`PackageScope`AtomShape[73.5], "Owner" -> 
                TypeSystem`PackageScope`AtomShape[459.20000000000005`], 
                "Country.of.Origin" -> TypeSystem`PackageScope`AtomShape[90], 
                "Farm.Name" -> TypeSystem`PackageScope`AtomShape[257.6], 
                "Lot.Number" -> TypeSystem`PackageScope`AtomShape[190.4], 
                "Mill" -> TypeSystem`PackageScope`AtomShape[
                 336.00000000000006`], "ICO.Number" -> 
                TypeSystem`PackageScope`AtomShape[168.00000000000003`], 
                "Company" -> TypeSystem`PackageScope`AtomShape[515.2], 
                "Altitude" -> TypeSystem`PackageScope`AtomShape[34], "Region" -> 
                TypeSystem`PackageScope`AtomShape[212.8], "Producer" -> 
                TypeSystem`PackageScope`AtomShape[537.6], "Number.of.Bags" -> 
                TypeSystem`PackageScope`AtomShape[34], "Bag.Weight" -> 
                TypeSystem`PackageScope`AtomShape[75], "In.Country.Partner" -> 
                TypeSystem`PackageScope`AtomShape[481.6], "Harvest.Year" -> 
                TypeSystem`PackageScope`AtomShape[34], "Grading.Date" -> 
                TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
                "Owner.1" -> 
                TypeSystem`PackageScope`AtomShape[459.20000000000005`], 
                "Variety" -> TypeSystem`PackageScope`AtomShape[78.4], 
                "Processing.Method" -> 
                TypeSystem`PackageScope`AtomShape[262.5], "Aroma" -> 
                TypeSystem`PackageScope`AtomShape[60], "Flavor" -> 
                TypeSystem`PackageScope`AtomShape[60], "Aftertaste" -> 
                TypeSystem`PackageScope`AtomShape[60], "Acidity" -> 
                TypeSystem`PackageScope`AtomShape[60], "Body" -> 
                TypeSystem`PackageScope`AtomShape[60], "Balance" -> 
                TypeSystem`PackageScope`AtomShape[60], "Uniformity" -> 
                TypeSystem`PackageScope`AtomShape[60], "Clean.Cup" -> 
                TypeSystem`PackageScope`AtomShape[60], "Sweetness" -> 
                TypeSystem`PackageScope`AtomShape[60], "Cupper.Points" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total.Cup.Points" -> 
                TypeSystem`PackageScope`AtomShape[60], "Moisture" -> 
                TypeSystem`PackageScope`AtomShape[60], "Category.One.Defects" -> 
                TypeSystem`PackageScope`AtomShape[34], "Quakers" -> 
                TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                TypeSystem`PackageScope`AtomShape[126.], 
                "Category.Two.Defects" -> 
                TypeSystem`PackageScope`AtomShape[34], "Expiration" -> 
                TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
                "Certification.Body" -> 
                TypeSystem`PackageScope`AtomShape[481.6], 
                "Certification.Address" -> 
                TypeSystem`PackageScope`AtomShape[448.00000000000006`], 
                "Certification.Contact" -> 
                TypeSystem`PackageScope`AtomShape[448.00000000000006`], 
                "unit_of_measurement" -> 
                TypeSystem`PackageScope`AtomShape[31.5], 
                "altitude_low_meters" -> 
                TypeSystem`PackageScope`AtomShape[60], "altitude_high_meters" -> 
                TypeSystem`PackageScope`AtomShape[60], "altitude_mean_meters" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "column1", "Species", "Owner", "Country.of.Origin", "Farm.Name", 
             "Lot.Number", "Mill", "ICO.Number", "Company", "Altitude", 
             "Region", "Producer", "Number.of.Bags", "Bag.Weight", 
             "In.Country.Partner", "Harvest.Year", "Grading.Date", "Owner.1", 
             "Variety", "Processing.Method", "Aroma", "Flavor", "Aftertaste", 
             "Acidity", "Body", "Balance", "Uniformity", "Clean.Cup", 
             "Sweetness", "Cupper.Points", "Total.Cup.Points", "Moisture", 
             "Category.One.Defects", "Quakers", "Color", 
             "Category.Two.Defects", "Expiration", "Certification.Body", 
             "Certification.Address", "Certification.Contact", 
             "unit_of_measurement", "altitude_low_meters", 
             "altitude_high_meters", "altitude_mean_meters"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["Arabica", "Robusta"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              Entity["Country"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              Quantity[1, "Kilograms"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "", "Natural / Dry", "Other", "Pulped natural / honey", 
               "Semi-washed / Semi-pulped", "Washed / Wet"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "", "Blue-Green", "Bluish-Green", "Green", "None"]], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["ft", "m"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 1339], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "column1"} -> 
            1, {All, "Species"} -> 1, {All, "Owner"} -> 
            1, {All, "Country.of.Origin"} -> 1, {All, "Farm.Name"} -> 
            1, {All, "Lot.Number"} -> 1, {All, "Mill"} -> 
            1, {All, "ICO.Number"} -> 1, {All, "Company"} -> 
            1, {All, "Altitude"} -> 1, {All, "Region"} -> 
            1, {All, "Producer"} -> 1, {All, "Number.of.Bags"} -> 
            1, {All, "Bag.Weight"} -> 1, {All, "In.Country.Partner"} -> 
            1, {All, "Harvest.Year"} -> 1, {All, "Grading.Date"} -> 
            1, {All, "Owner.1"} -> 1, {All, "Variety"} -> 
            1, {All, "Processing.Method"} -> 1, {All, "Aroma"} -> 
            1, {All, "Flavor"} -> 1, {All, "Aftertaste"} -> 
            1, {All, "Acidity"} -> 1, {All, "Body"} -> 1, {All, "Balance"} -> 
            1, {All, "Uniformity"} -> 1, {All, "Clean.Cup"} -> 
            1, {All, "Sweetness"} -> 1, {All, "Cupper.Points"} -> 
            1, {All, "Total.Cup.Points"} -> 1, {All, "Moisture"} -> 
            1, {All, "Category.One.Defects"} -> 1, {All, "Quakers"} -> 
            1, {All, "Color"} -> 1, {All, "Category.Two.Defects"} -> 
            1, {All, "Expiration"} -> 1, {All, "Certification.Body"} -> 
            1, {All, "Certification.Address"} -> 
            1, {All, "Certification.Contact"} -> 
            1, {All, "unit_of_measurement"} -> 
            1, {All, "altitude_low_meters"} -> 
            1, {All, "altitude_high_meters"} -> 
            1, {All, "altitude_mean_meters"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "column1" -> TypeSystem`PackageScope`AtomShape[34], "Species" -> 
                TypeSystem`PackageScope`AtomShape[73.5], "Owner" -> 
                TypeSystem`PackageScope`AtomShape[459.20000000000005`], 
                "Country.of.Origin" -> TypeSystem`PackageScope`AtomShape[90], 
                "Farm.Name" -> TypeSystem`PackageScope`AtomShape[257.6], 
                "Lot.Number" -> TypeSystem`PackageScope`AtomShape[190.4], 
                "Mill" -> TypeSystem`PackageScope`AtomShape[
                 336.00000000000006`], "ICO.Number" -> 
                TypeSystem`PackageScope`AtomShape[168.00000000000003`], 
                "Company" -> TypeSystem`PackageScope`AtomShape[515.2], 
                "Altitude" -> TypeSystem`PackageScope`AtomShape[34], "Region" -> 
                TypeSystem`PackageScope`AtomShape[212.8], "Producer" -> 
                TypeSystem`PackageScope`AtomShape[537.6], "Number.of.Bags" -> 
                TypeSystem`PackageScope`AtomShape[34], "Bag.Weight" -> 
                TypeSystem`PackageScope`AtomShape[75], "In.Country.Partner" -> 
                TypeSystem`PackageScope`AtomShape[481.6], "Harvest.Year" -> 
                TypeSystem`PackageScope`AtomShape[34], "Grading.Date" -> 
                TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
                "Owner.1" -> 
                TypeSystem`PackageScope`AtomShape[459.20000000000005`], 
                "Variety" -> TypeSystem`PackageScope`AtomShape[78.4], 
                "Processing.Method" -> 
                TypeSystem`PackageScope`AtomShape[262.5], "Aroma" -> 
                TypeSystem`PackageScope`AtomShape[60], "Flavor" -> 
                TypeSystem`PackageScope`AtomShape[60], "Aftertaste" -> 
                TypeSystem`PackageScope`AtomShape[60], "Acidity" -> 
                TypeSystem`PackageScope`AtomShape[60], "Body" -> 
                TypeSystem`PackageScope`AtomShape[60], "Balance" -> 
                TypeSystem`PackageScope`AtomShape[60], "Uniformity" -> 
                TypeSystem`PackageScope`AtomShape[60], "Clean.Cup" -> 
                TypeSystem`PackageScope`AtomShape[60], "Sweetness" -> 
                TypeSystem`PackageScope`AtomShape[60], "Cupper.Points" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total.Cup.Points" -> 
                TypeSystem`PackageScope`AtomShape[60], "Moisture" -> 
                TypeSystem`PackageScope`AtomShape[60], "Category.One.Defects" -> 
                TypeSystem`PackageScope`AtomShape[34], "Quakers" -> 
                TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                TypeSystem`PackageScope`AtomShape[126.], 
                "Category.Two.Defects" -> 
                TypeSystem`PackageScope`AtomShape[34], "Expiration" -> 
                TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
                "Certification.Body" -> 
                TypeSystem`PackageScope`AtomShape[481.6], 
                "Certification.Address" -> 
                TypeSystem`PackageScope`AtomShape[448.00000000000006`], 
                "Certification.Contact" -> 
                TypeSystem`PackageScope`AtomShape[448.00000000000006`], 
                "unit_of_measurement" -> 
                TypeSystem`PackageScope`AtomShape[31.5], 
                "altitude_low_meters" -> 
                TypeSystem`PackageScope`AtomShape[60], "altitude_high_meters" -> 
                TypeSystem`PackageScope`AtomShape[60], "altitude_mean_meters" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "column1", "Species", "Owner", "Country.of.Origin", "Farm.Name", 
             "Lot.Number", "Mill", "ICO.Number", "Company", "Altitude", 
             "Region", "Producer", "Number.of.Bags", "Bag.Weight", 
             "In.Country.Partner", "Harvest.Year", "Grading.Date", "Owner.1", 
             "Variety", "Processing.Method", "Aroma", "Flavor", "Aftertaste", 
             "Acidity", "Body", "Balance", "Uniformity", "Clean.Cup", 
             "Sweetness", "Cupper.Points", "Total.Cup.Points", "Moisture", 
             "Category.One.Defects", "Quakers", "Color", 
             "Category.Two.Defects", "Expiration", "Certification.Body", 
             "Certification.Address", "Certification.Contact", 
             "unit_of_measurement", "altitude_low_meters", 
             "altitude_high_meters", "altitude_mean_meters"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["Arabica", "Robusta"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              Entity["Country"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[
              Quantity[1, "Kilograms"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "", "Natural / Dry", "Other", "Pulped natural / honey", 
               "Semi-washed / Semi-pulped", "Washed / Wet"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "", "Blue-Green", "Bluish-Green", "Green", "None"]], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["ft", "m"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 1339], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
         "DataRowCount" -> 1339, "DataColumnCount" -> 44, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["column1", 
                    Style[
                    "column1", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "column1"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "column1"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Species", 
                    Style[
                    "Species", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Species"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Species"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Owner", 
                    Style[
                    "Owner", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Owner"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Owner"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Country.of.Origin", 
                    Style[
                    "Country.of.Origin", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Country.of.Origin"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Country.of.Origin"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Farm.Name", 
                    Style[
                    "Farm.Name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Farm.Name"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Farm.Name"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Lot.Number", 
                    Style[
                    "Lot.Number", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Lot.Number"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Lot.Number"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Mill", 
                    Style[
                    "Mill", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Mill"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Mill"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ICO.Number", 
                    Style[
                    "ICO.Number", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ICO.Number"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ICO.Number"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Company", 
                    Style[
                    "Company", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Company"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Company"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Altitude", 
                    Style[
                    "Altitude", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Altitude"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Altitude"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2014/2015", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad agricultural developmet plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2014/2015", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad agricultural developmet plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["grounds for health admin", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Guatemala\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["san marcos barrancas \"\"san cristobal cuch", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["yidnekachew dabessa", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["yidnekachew dabessa coffee plantation", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["wolensu", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["yidnekachew debessa coffee plantation", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2014/2015", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["metad agricultural developmet plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ji-ae ahn", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Brazil\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["hugo valdivia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Peru\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["hvc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["richmond investment-coffee department", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ethiopia commodity exchange", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["aolme", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["c.p.w.e", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["010/0338", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ethiopia commodity exchange", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["aolme", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["c.p.w.e", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["010/0338", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["diamond enterprise plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["tulla coffee farm", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["tulla coffee farm", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2014/15", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["diamond enterprise plc", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["mohammed lalo", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["fahem coffee plantation", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["fahem coffee plantation", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["cqi q coffee sample representative", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["el filo", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unknown", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["coffee quality institute", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["cqi q coffee sample representative", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["los cedros", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unknown", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["coffee quality institute", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["grounds for health admin", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["arianna farms", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ethiopia commodity exchange", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["aolme", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["c.p.w.e", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["010/0338", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["cqi q coffee sample representative", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["el \[AAcute]guila", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unknown", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["coffee quality institute", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["grounds for health admin", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Indonesia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["toarco jaya", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ethiopia commodity exchange", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["010/0056", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["yunnan coffee exchange", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"China\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["echo coffee", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["YNC-06114", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["echo coffee mill", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["yunnan coffee exchange", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1450"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["19"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["column1"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Arabica", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Species"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{73.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["essencecoffee", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Owner"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{459.20000000000005`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["drima zede", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Farm.Name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{257.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Lot.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{190.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["drima zede", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Mill"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["100181006", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["ICO.Number"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["essence coffee", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Company"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{515.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Altitude"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1339, 1], {1, 1339 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1339, 1], {1, 1339 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1339, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1339, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1339, 1], {1, 1339 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1339, 1], {1, 1339 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 44, 1], {1, 44 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 44, 1], {1, 44 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[44, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[44, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 44, 1], {1, 44 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 44, 1], {1, 44 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {2257., {312.63403309800196`, 318.36596690199804`}},
         TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {2257., {312.63403309800196`, 318.36596690199804`}}],
       BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 9615122609458512095999870086144404062734897667785441655112,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8592906933922887`*^9, 3.8592980515526695`*^9, 
  3.859301319561619*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"51cd36db-43da-459a-b308-14102aefa84e"]
}, Open  ]],

Cell["\<\
I then chose to analyse the data based on three score indexes: Aroma, Flavor \
and the coffee\[CloseCurlyQuote]s total overall score. This was to see how \
they correlated.\
\>", "Text",
 CellChangeTimes->{{3.859307667830432*^9, 
  3.8593077090576677`*^9}},ExpressionUUID->"084cbf5e-8c44-4ff9-b880-\
9ce7d439b9d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataCoffee", "=", 
  RowBox[{"data", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "21", ",", "22", ",", "31"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8592037510656185`*^9, 3.8592037620037727`*^9}, {
  3.8592038293444667`*^9, 3.859203840300238*^9}, {3.8592042508858414`*^9, 
  3.859204261068366*^9}, {3.8592785875940037`*^9, 3.859278673922163*^9}, {
  3.8592906985173254`*^9, 3.8592907617984157`*^9}, {3.8592910444418077`*^9, 
  3.8592910491523376`*^9}, {3.8592917441728525`*^9, 3.8592917443784475`*^9}, {
  3.85929192659333*^9, 3.8592919542685304`*^9}, {3.8592981249997225`*^9, 
  3.859298127416613*^9}, {3.8592981930610847`*^9, 3.85929819317393*^9}, {
  3.8592982269522886`*^9, 3.8592982433368607`*^9}, {3.8593042412909164`*^9, 
  3.859304279867751*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"f3321ad3-b710-4ab3-b7a0-ce74a8e0f904"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          9615122609458512095999870086144404062790237900006569913016], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Country.of.Origin"} -> 
            1, {All, "Aroma"} -> 1, {All, "Flavor"} -> 
            1, {All, "Total.Cup.Points"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Country.of.Origin" -> TypeSystem`PackageScope`AtomShape[90], 
                "Aroma" -> TypeSystem`PackageScope`AtomShape[60], "Flavor" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total.Cup.Points" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 4, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Country.of.Origin", "Aroma", "Flavor", "Total.Cup.Points"}, {
             TypeSystem`Atom[
              Entity["Country"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 1339], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Country.of.Origin"} -> 
            1, {All, "Aroma"} -> 1, {All, "Flavor"} -> 
            1, {All, "Total.Cup.Points"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Country.of.Origin" -> TypeSystem`PackageScope`AtomShape[90], 
                "Aroma" -> TypeSystem`PackageScope`AtomShape[60], "Flavor" -> 
                TypeSystem`PackageScope`AtomShape[60], "Total.Cup.Points" -> 
                TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 4, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Country.of.Origin", "Aroma", "Flavor", "Total.Cup.Points"}, {
             TypeSystem`Atom[
              Entity["Country"]], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 1339], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 4, 
         "DataRowCount" -> 1339, "DataColumnCount" -> 4, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Country.of.Origin", 
                    Style[
                    "Country.of.Origin", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Country.of.Origin"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Country.of.Origin"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Aroma", 
                    Style[
                    "Aroma", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Aroma"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Aroma"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Flavor", 
                    Style[
                    "Flavor", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Flavor"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Flavor"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Total.Cup.Points", 
                    Style[
                    "Total.Cup.Points", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Total.Cup.Points"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Total.Cup.Points"}, "ColumnHeader", True], "Mouse"],
                   ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.83"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["90.58"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.75"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["89.92"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Guatemala\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["89.75"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.58"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["89.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.83"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Brazil\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.58"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.83"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Peru\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.75"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.33"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.08"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.58"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["88.08"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.92"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.08"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.67"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.92"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.33"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.92"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.33"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.83"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.58"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Indonesia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.33"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.33"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.33"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"China\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Ethiopia\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Country.of.Origin"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Aroma"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8.17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Flavor"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["87.25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1339, 1], {1, 1339 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1339, 1], {1, 1339 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1339, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1339, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1339, 1], {1, 1339 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1339, 1], {1, 1339 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {372., {302.63403309800196`, 308.36596690199804`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {372., {302.63403309800196`, 308.36596690199804`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 9615122609458512095999870086144404062790237900006569913016,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.859278661015581*^9, 3.8592786745596595`*^9}, {
   3.8592907398218393`*^9, 3.859290762382411*^9}, {3.8592910450068536`*^9, 
   3.859291049535883*^9}, 3.8592917447415733`*^9, {3.859291927578732*^9, 
   3.859291954824293*^9}, 3.8592982443673105`*^9, {3.859301331225289*^9, 
   3.8593013466129885`*^9}, {3.8593042677593517`*^9, 3.85930428067456*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"b0ab5855-18cf-4f55-b922-7de5596031a5"]
}, Open  ]],

Cell["\<\
I then grouped by Country of Origin to enable me to extract the countries I \
wanted - in this case Brazil, Guatemala and Mexico. I chose these three for \
sample size.\
\>", "Text",
 CellChangeTimes->{{3.859307725020906*^9, 
  3.8593077757829103`*^9}},ExpressionUUID->"56b9e81b-e09a-4963-8f3f-\
c4c12bd416e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gdata", " ", "=", " ", 
  RowBox[{"GroupBy", "[", 
   RowBox[{"dataCoffee", ",", 
    RowBox[{
     RowBox[{"Key", "[", "\"\<Country.of.Origin\>\"", "]"}], "->", 
     RowBox[{"KeyTake", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Aroma\>\"", ",", "\"\<Flavor\>\"", ",", 
        "\"\<Total.Cup.Points\>\""}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/S+jQfbmgTeObRLh8iA61f1u338gfSWSZRKIjjlv
/R1Eq7jFg2k5x1gZhoNvHJdvTlME0S/u6ReB6OO/J5SA6EV/gqpBtN1bhRoQ
7W2luQhEPxPdvxhEPzh3uYwJSD/R/g+mqy4dqQbRYquE20C008tPnSB62dS5
XSD6nI90P4heUxw/BUQftjgQzAykt/DkhIPoNiWFIhC9iFe9GER7T1I+DaLn
ivmA6ZWvfO+C6N74hfdAdOyG549B9InJcU9AdIFbtDQ7kD65OVcRREstcHUA
0TXLxNxB9D8OhUYOID0vfEoriAYAAIicFQ==
  "],
 CellLabel->"In[8]:=",ExpressionUUID->"d0492792-cf10-4780-b9ef-3778e24dfa40"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["Country", "Ethiopia"] -> {<|
         "Aroma" -> 8.67, "Flavor" -> 8.83, "Total.Cup.Points" -> 90.58|>, <|
         "Aroma" -> 8.75, "Flavor" -> 8.67, "Total.Cup.Points" -> 89.92|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.58, "Total.Cup.Points" -> 89.|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8.5, "Total.Cup.Points" -> 88.83|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8.33, "Total.Cup.Points" -> 88.67|>, <|
         "Aroma" -> 8.67, "Flavor" -> 8.67, "Total.Cup.Points" -> 88.42|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.58, "Total.Cup.Points" -> 88.25|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.67, "Total.Cup.Points" -> 88.08|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8.33, "Total.Cup.Points" -> 87.83|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.33, "Total.Cup.Points" -> 87.33|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.17, "Total.Cup.Points" -> 87.25|>, <|
         "Aroma" -> 8.42, "Flavor" -> 8.17, "Total.Cup.Points" -> 87.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8.25, "Total.Cup.Points" -> 86.92|>, <|
         "Aroma" -> 8., "Flavor" -> 8.08, "Total.Cup.Points" -> 86.25|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 86.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8.08, "Total.Cup.Points" -> 86.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8., "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 8.42, "Flavor" -> 8., "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.83|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8., "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.|>}, 
       Entity["Country", "Guatemala"] -> {<|
         "Aroma" -> 8.42, "Flavor" -> 8.5, "Total.Cup.Points" -> 89.75|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.83|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.83|>, <|
         "Aroma" -> 8., "Flavor" -> 7.83, "Total.Cup.Points" -> 85.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 85.25|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8., "Total.Cup.Points" -> 85.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8., "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 8., "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.17, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8.17, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7., "Flavor" -> 7.33, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7., "Flavor" -> 7.5, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7., "Flavor" -> 7.17, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.42|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.5, "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.5, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.08, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7., "Flavor" -> 6.83, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.17, "Total.Cup.Points" -> 77.92|>, <|
         "Aroma" -> 7., "Flavor" -> 6.83, "Total.Cup.Points" -> 77.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.92, "Total.Cup.Points" -> 77.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 77.33|>, <|
         "Aroma" -> 6.42, "Flavor" -> 6.5, "Total.Cup.Points" -> 76.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 76.33|>, <|
         "Aroma" -> 6.17, "Flavor" -> 6.5, "Total.Cup.Points" -> 76.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 75.58|>, <|
         "Aroma" -> 6.67, "Flavor" -> 6.5, "Total.Cup.Points" -> 75.58|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.5, "Total.Cup.Points" -> 74.75|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.67, "Total.Cup.Points" -> 74.75|>, <|
         "Aroma" -> 6.5, "Flavor" -> 6.33, "Total.Cup.Points" -> 74.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 6.67, "Total.Cup.Points" -> 59.83|>}, 
       Entity["Country", "Brazil"] -> {<|
         "Aroma" -> 8.58, "Flavor" -> 8.42, "Total.Cup.Points" -> 88.83|>, <|
         "Aroma" -> 8.5, "Flavor" -> 8.5, "Total.Cup.Points" -> 86.92|>, <|
         "Aroma" -> 8.5, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.42|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.92, "Total.Cup.Points" -> 86.17|>, <|
         "Aroma" -> 8.42, "Flavor" -> 7.92, "Total.Cup.Points" -> 86.17|>, <|
         "Aroma" -> 8.33, "Flavor" -> 8., "Total.Cup.Points" -> 86.08|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.42|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8.5, "Flavor" -> 8., "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.81, "Flavor" -> 7.81, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8., "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 8.25, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8.08, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7., "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 6.83, "Flavor" -> 7., "Total.Cup.Points" -> 78.42|>, <|
         "Aroma" -> 7., "Flavor" -> 6.75, "Total.Cup.Points" -> 77.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 77.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7., "Total.Cup.Points" -> 75.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.58, "Total.Cup.Points" -> 73.5|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 70.67|>}, 
       Entity["Country", "Peru"] -> {<|
         "Aroma" -> 8.42, "Flavor" -> 8.5, "Total.Cup.Points" -> 88.75|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7., "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.75, "Total.Cup.Points" -> 77.|>}, 
       Entity["Country", "UnitedStates"] -> {<|
         "Aroma" -> 8.25, "Flavor" -> 8.42, "Total.Cup.Points" -> 87.92|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.67, "Total.Cup.Points" -> 87.92|>, <|
         "Aroma" -> 8., "Flavor" -> 8.5, "Total.Cup.Points" -> 87.58|>, <|
         "Aroma" -> 8., "Flavor" -> 8.25, "Total.Cup.Points" -> 87.25|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8.33, "Total.Cup.Points" -> 87.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 77.17|>}, 
       Missing["Unrecognized", "United States (Hawaii)"] -> {<|
         "Aroma" -> 8.33, "Flavor" -> 8.42, "Total.Cup.Points" -> 87.92|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.25|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8.42, "Total.Cup.Points" -> 86.25|>, <|
         "Aroma" -> 8.33, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.58|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.17, "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.83|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8., "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.92, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7., "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 6.92, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.92, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 78.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 78.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 77.58|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.92, "Total.Cup.Points" -> 77.25|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 76.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 76.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 74.42|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 73.67|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.92, "Total.Cup.Points" -> 72.58|>}, 
       Entity["Country", "Indonesia"] -> {<|
         "Aroma" -> 8.33, "Flavor" -> 8.25, "Total.Cup.Points" -> 87.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.81, "Flavor" -> 7.88, "Total.Cup.Points" -> 84.13|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 76.17|>}, 
       Entity["Country", "China"] -> {<|
         "Aroma" -> 8.42, "Flavor" -> 8.25, "Total.Cup.Points" -> 87.25|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7., "Flavor" -> 6.92, "Total.Cup.Points" -> 78.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.|>}, 
       Entity["Country", "CostaRica"] -> {<|
         "Aroma" -> 8.08, "Flavor" -> 8.25, "Total.Cup.Points" -> 87.17|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 86.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 8., "Flavor" -> 7.58, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8., "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8., "Flavor" -> 7.58, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.33, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 77.92|>, <|
         "Aroma" -> 6.33, "Flavor" -> 6.5, "Total.Cup.Points" -> 71.75|>}, 
       Entity["Country", "Mexico"] -> {<|
         "Aroma" -> 8.17, "Flavor" -> 8.25, "Total.Cup.Points" -> 87.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.17, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8., "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.88, "Total.Cup.Points" -> 83.38|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.17, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7., "Flavor" -> 7.67, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.83, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.92, "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7., "Flavor" -> 6.83, "Total.Cup.Points" -> 79.42|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 79.25|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.92, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.75, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 6.75, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.83, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 78.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 78.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.92, "Total.Cup.Points" -> 78.67|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.75, "Total.Cup.Points" -> 78.5|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 77.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.75, "Total.Cup.Points" -> 77.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 77.33|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 77.17|>, <|
         "Aroma" -> 6.67, "Flavor" -> 6.33, "Total.Cup.Points" -> 76.75|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.58, "Total.Cup.Points" -> 76.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7., "Total.Cup.Points" -> 76.17|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 76.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 75.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.92, "Total.Cup.Points" -> 75.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.83, "Total.Cup.Points" -> 75.17|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 75.17|>, <|
         "Aroma" -> 7., "Flavor" -> 6.92, "Total.Cup.Points" -> 75.|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.75, "Total.Cup.Points" -> 74.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 6.75, "Total.Cup.Points" -> 74.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 74.67|>, <|
         "Aroma" -> 7., "Flavor" -> 6.58, "Total.Cup.Points" -> 74.33|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.42, "Total.Cup.Points" -> 74.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7., "Total.Cup.Points" -> 73.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.08, "Total.Cup.Points" -> 72.92|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.92, "Total.Cup.Points" -> 71.08|>, <|
         "Aroma" -> 6.5, "Flavor" -> 6.67, "Total.Cup.Points" -> 71.|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7., "Total.Cup.Points" -> 70.75|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 68.33|>}, 
       Entity["Country", "Uganda"] -> {<|
         "Aroma" -> 8.42, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.83|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.08, "Total.Cup.Points" -> 86.|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8., "Total.Cup.Points" -> 86.|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.17, "Total.Cup.Points" -> 85.92|>, <|
         "Aroma" -> 8.33, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.5|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8., "Total.Cup.Points" -> 85.42|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.83|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 8., "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 8., "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 6.92, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8.08, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 8.33, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.92, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 8., "Flavor" -> 7.67, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.5|>}, 
       Entity["Country", "Honduras"] -> {<|
         "Aroma" -> 8.17, "Flavor" -> 8.08, "Total.Cup.Points" -> 86.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.75|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8., "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7., "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 6.83, "Flavor" -> 7., "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 6.83, "Flavor" -> 6.83, "Total.Cup.Points" -> 76.|>, <|
         "Aroma" -> 7., "Flavor" -> 7.17, "Total.Cup.Points" -> 73.42|>, <|
         "Aroma" -> 6.67, "Flavor" -> 6.5, "Total.Cup.Points" -> 69.33|>, <|
         "Aroma" -> 7., "Flavor" -> 6.17, "Total.Cup.Points" -> 69.17|>, <|
         "Aroma" -> 7., "Flavor" -> 6.33, "Total.Cup.Points" -> 69.17|>, <|
         "Aroma" -> 0., "Flavor" -> 0., "Total.Cup.Points" -> 0.|>}, 
       Entity["Country", "Taiwan"] -> {<|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 86.58|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.83|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.92, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.92, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 8., "Flavor" -> 7.83, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7., "Flavor" -> 7.08, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 6.92, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7., "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 79.25|>, <|
         "Aroma" -> 6.83, "Flavor" -> 6.75, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.08, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.75, "Total.Cup.Points" -> 77.67|>}, 
       Entity["Country", "Nicaragua"] -> {<|
         "Aroma" -> 7.92, "Flavor" -> 8.25, "Total.Cup.Points" -> 86.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.92, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 6.83, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.83|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.92, "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7., "Total.Cup.Points" -> 78.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 6.83, "Flavor" -> 7.08, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7., "Total.Cup.Points" -> 77.83|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.58, "Total.Cup.Points" -> 63.08|>}, 
       Entity["Country", "Tanzania"] -> {<|
         "Aroma" -> 8.42, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.5|>, <|
         "Aroma" -> 8., "Flavor" -> 7.83, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7., "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.33|>}, 
       Entity["Country", "Kenya"] -> {<|
         "Aroma" -> 8.08, "Flavor" -> 8., "Total.Cup.Points" -> 86.25|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.08, "Total.Cup.Points" -> 86.08|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 8., "Flavor" -> 7.67, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.58, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7., "Flavor" -> 7.08, "Total.Cup.Points" -> 79.83|>}, 
       Entity[
        "Country", "Thailand"] -> {<|
         "Aroma" -> 7.83, "Flavor" -> 8.33, "Total.Cup.Points" -> 86.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.17, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.25, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 6.83, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 6.67, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.67|>}, 
       Entity["Country", "Colombia"] -> {<|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 86.|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.92|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.92, "Total.Cup.Points" -> 85.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.25|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.08|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 8., "Flavor" -> 7.5, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 8., "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 8., "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 5.08, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 8., "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 8., "Flavor" -> 7.33, "Total.Cup.Points" -> 72.83|>}, 
       Entity["Country", "Panama"] -> {<|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.83|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 85.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>}, 
       Entity["Country", "PapuaNewGuinea"] -> {<|
         "Aroma" -> 8.33, "Flavor" -> 8.42, "Total.Cup.Points" -> 85.75|>}, 
       Entity["Country", "ElSalvador"] -> {<|
         "Aroma" -> 7.92, "Flavor" -> 8.17, "Total.Cup.Points" -> 85.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.58|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.83, "Total.Cup.Points" -> 85.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8., "Total.Cup.Points" -> 84.75|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8.42, "Flavor" -> 8.08, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8., "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.08, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.67|>}, 
       Entity["Country", "Japan"] -> {<|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.67|>}, 
       Entity["Country", "Ecuador"] -> {<|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 78.08|>}, 
       Missing["Unrecognized", "United States (Puerto Rico)"] -> {<|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.08|>}, 
       Entity["Country", "Haiti"] -> {<|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7., "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 6.83, "Flavor" -> 6.83, "Total.Cup.Points" -> 77.25|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.75, "Total.Cup.Points" -> 72.33|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.58, "Total.Cup.Points" -> 67.92|>}, 
       Entity["Country", "Burundi"] -> {<|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.33|>}, 
       Entity["Country", "Vietnam"] -> {<|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7., "Flavor" -> 7.08, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.67, "Total.Cup.Points" -> 73.75|>}, 
       Entity["Country", "Philippines"] -> {<|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 8.08, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 6.83, "Flavor" -> 6.5, "Total.Cup.Points" -> 75.83|>}, 
       Entity["Country", "Rwanda"] -> {<|
         "Aroma" -> 7.83, "Flavor" -> 7.92, "Total.Cup.Points" -> 82.83|>}, 
       Entity[
        "Country", "Malawi"] -> {<|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.67|>}, 
       Entity["Country", "Laos"] -> {<|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.83|>}, 
       Entity["Country", "Zambia"] -> {<|
         "Aroma" -> 7.67, "Flavor" -> 7.08, "Total.Cup.Points" -> 81.92|>}, 
       Entity["Country", "Myanmar"] -> {<|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 8., "Flavor" -> 7.08, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7., "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.|>}, 
       Entity["Country", "Mauritius"] -> {<|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.5|>}, 
       Missing["Unrecognized", "Cote d?Ivoire"] -> {<|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.33|>}, 
       Missing[
        "Empty"] -> {<|
         "Aroma" -> 6.75, "Flavor" -> 6.75, "Total.Cup.Points" -> 79.08|>}, 
       Entity["Country", "India"] -> {<|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 76.83|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 6.83, "Total.Cup.Points" -> 75.08|>}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`UnknownShape[True], 
              TypeSystem`PackageScope`AtomShape[60]]], 2, 
            DirectedInfinity[1], {All, All}]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Country"]], 
       TypeSystem`Vector[
        TypeSystem`Assoc[TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 3], TypeSystem`AnyLength], 37], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`UnknownShape[True], 
              TypeSystem`PackageScope`AtomShape[60]]], 2, 
            DirectedInfinity[1], {All, All}]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Country"]], 
       TypeSystem`Vector[
        TypeSystem`Assoc[TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 3], TypeSystem`AnyLength], 37], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     37, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Ethiopia\""], 
                  Style[
                   RawBoxes["\"Ethiopia\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Ethiopia"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Ethiopia"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["44 total \:203a ", ""], 
                  Style[
                   Superscript["44 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Ethiopia"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Ethiopia"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Guatemala\""], 
                  Style[
                   RawBoxes["\"Guatemala\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Guatemala"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Guatemala"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["181 total \:203a ", ""], 
                  Style[
                   Superscript["181 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Guatemala"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Guatemala"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Brazil\""], 
                  Style[
                   RawBoxes["\"Brazil\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Brazil"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Brazil"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["132 total \:203a ", ""], 
                  Style[
                   Superscript["132 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Brazil"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Brazil"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Peru\""], 
                  Style[
                   RawBoxes["\"Peru\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Peru"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Peru"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["10 total \:203a ", ""], 
                  Style[
                   Superscript["10 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Peru"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Peru"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"United States\""], 
                  Style[
                   RawBoxes["\"United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "UnitedStates"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "UnitedStates"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["10 total \:203a ", ""], 
                  Style[
                   Superscript["10 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "UnitedStates"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "UnitedStates"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Missing["Unrecognized", "United States (Hawaii)"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Missing["Unrecognized", "United States (Hawaii)"]], 1}, 
                   2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]], 1}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["73 total \:203a ", ""], 
                  Style[
                   Superscript["73 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Missing["Unrecognized", "United States (Hawaii)"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Missing["Unrecognized", "United States (Hawaii)"]]}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Indonesia\""], 
                  Style[
                   RawBoxes["\"Indonesia\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Indonesia"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Indonesia"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["20 total \:203a ", ""], 
                  Style[
                   Superscript["20 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Indonesia"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Indonesia"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"China\""], 
                  Style[
                   RawBoxes["\"China\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "China"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "China"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["16 total \:203a ", ""], 
                  Style[
                   Superscript["16 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "China"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "China"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Costa Rica\""], 
                  Style[
                   RawBoxes["\"Costa Rica\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "CostaRica"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "CostaRica"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["51 total \:203a ", ""], 
                  Style[
                   Superscript["51 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "CostaRica"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "CostaRica"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Mexico\""], 
                  Style[
                   RawBoxes["\"Mexico\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Mexico"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aroma", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Flavor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Mexico"]], 1}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["236 total \:203a ", ""], 
                  Style[
                   Superscript["236 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "e6527dc4-e660-4600-b0a7-91345788b0f5"]][{
                    Key[
                    Entity["Country", "Mexico"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e6527dc4-e660-4600-b0a7-91345788b0f5"][{
                 Key[
                  Entity["Country", "Mexico"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 37, 1], {1, 37 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 37, 1], {1, 37 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[37, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[37, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 37, 1], {1, 37 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 37, 1], {1, 37 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "e6527dc4-e660-4600-b0a7-91345788b0f5", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "remove"]]
                    , MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "e6527dc4-e660-4600-b0a7-91345788b0f5"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "e6527dc4-e660-4600-b0a7-91345788b0f5"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{261., {486.13403309800196`, 491.86596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{261., {486.13403309800196`, 491.86596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.859204347874872*^9, 3.859204365490243*^9}, {
   3.8592830603653975`*^9, 3.8592830884822445`*^9}, 3.859283899300481*^9, {
   3.8592842166317625`*^9, 3.8592842357815943`*^9}, {3.8592848839688196`*^9, 
   3.8592849008655043`*^9}, {3.859284956511698*^9, 3.859284961463011*^9}, {
   3.8592852667492633`*^9, 3.8592852784049573`*^9}, 3.85928901636257*^9, {
   3.8592890731998787`*^9, 3.859289137107428*^9}, 3.8592892516412735`*^9, {
   3.8592908030498037`*^9, 3.859290811913184*^9}, {3.859291033613886*^9, 
   3.8592910525449824`*^9}, {3.859291738722742*^9, 3.859291749453479*^9}, 
   3.859291893459917*^9, {3.859291939363384*^9, 3.8592919582862697`*^9}, 
   3.8592921190435004`*^9, 3.8592921776435223`*^9, {3.8592985462310925`*^9, 
   3.8592985728975677`*^9}, {3.8592988473229723`*^9, 3.8592988743445024`*^9}, 
   3.8593013501039057`*^9, {3.859301401860758*^9, 3.859301421305314*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"7fa44a49-9d7c-4c41-80cf-2831c3548062"]
}, Open  ]],

Cell["Here I extracted my 3 country choices.", "Text",
 CellChangeTimes->{{3.859307786323843*^9, 
  3.85930779628944*^9}},ExpressionUUID->"95de23fc-9159-4b25-845c-\
58d0e2ce8cae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GdataSA", " ", "=", " ", 
  RowBox[{"Gdata", "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "10"}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.859304494251486*^9, 3.859304503341366*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"cb2b8942-e34c-47ef-a4d7-2dcdcaf46d2f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["Country", "Guatemala"] -> {<|
         "Aroma" -> 8.42, "Flavor" -> 8.5, "Total.Cup.Points" -> 89.75|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.83|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.83|>, <|
         "Aroma" -> 8., "Flavor" -> 7.83, "Total.Cup.Points" -> 85.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 85.33|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 85.25|>, <|
         "Aroma" -> 8.25, "Flavor" -> 8., "Total.Cup.Points" -> 85.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8.08, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8., "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 8., "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8.17, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8.17, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.75, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7., "Flavor" -> 7.33, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7., "Flavor" -> 7.5, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7., "Flavor" -> 7.17, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.42|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.5, "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.5, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.08, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7., "Flavor" -> 6.83, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.17, "Total.Cup.Points" -> 77.92|>, <|
         "Aroma" -> 7., "Flavor" -> 6.83, "Total.Cup.Points" -> 77.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.92, "Total.Cup.Points" -> 77.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 77.33|>, <|
         "Aroma" -> 6.42, "Flavor" -> 6.5, "Total.Cup.Points" -> 76.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 76.33|>, <|
         "Aroma" -> 6.17, "Flavor" -> 6.5, "Total.Cup.Points" -> 76.33|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 75.58|>, <|
         "Aroma" -> 6.67, "Flavor" -> 6.5, "Total.Cup.Points" -> 75.58|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.5, "Total.Cup.Points" -> 74.75|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.67, "Total.Cup.Points" -> 74.75|>, <|
         "Aroma" -> 6.5, "Flavor" -> 6.33, "Total.Cup.Points" -> 74.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 6.67, "Total.Cup.Points" -> 59.83|>}, 
       Entity["Country", "Brazil"] -> {<|
         "Aroma" -> 8.58, "Flavor" -> 8.42, "Total.Cup.Points" -> 88.83|>, <|
         "Aroma" -> 8.5, "Flavor" -> 8.5, "Total.Cup.Points" -> 86.92|>, <|
         "Aroma" -> 8.5, "Flavor" -> 8.17, "Total.Cup.Points" -> 86.42|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.92, "Total.Cup.Points" -> 86.17|>, <|
         "Aroma" -> 8.42, "Flavor" -> 7.92, "Total.Cup.Points" -> 86.17|>, <|
         "Aroma" -> 8.33, "Flavor" -> 8., "Total.Cup.Points" -> 86.08|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.42|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 8.5, "Flavor" -> 8., "Total.Cup.Points" -> 84.58|>, <|
         "Aroma" -> 7.81, "Flavor" -> 7.81, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 8.17, "Flavor" -> 7.67, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 8.17, "Flavor" -> 8., "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 8., "Flavor" -> 8., "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 8.25, "Flavor" -> 7.83, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8.08, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7., "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 6.83, "Flavor" -> 7., "Total.Cup.Points" -> 78.42|>, <|
         "Aroma" -> 7., "Flavor" -> 6.75, "Total.Cup.Points" -> 77.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 77.33|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7., "Total.Cup.Points" -> 75.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.58, "Total.Cup.Points" -> 73.5|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 70.67|>}, 
       Entity["Country", "Mexico"] -> {<|
         "Aroma" -> 8.17, "Flavor" -> 8.25, "Total.Cup.Points" -> 87.17|>, <|
         "Aroma" -> 7.83, "Flavor" -> 8., "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.92, "Flavor" -> 8.17, "Total.Cup.Points" -> 85.|>, <|
         "Aroma" -> 7.75, "Flavor" -> 8., "Total.Cup.Points" -> 84.92|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 84.67|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.42|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 84.33|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.92, "Total.Cup.Points" -> 84.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 84.08|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.92, "Total.Cup.Points" -> 83.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 8., "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.58|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.88, "Total.Cup.Points" -> 83.38|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.5, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.75, "Total.Cup.Points" -> 83.17|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.83, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 83.|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 8., "Flavor" -> 7.92, "Total.Cup.Points" -> 82.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 8.08, "Flavor" -> 8.17, "Total.Cup.Points" -> 82.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.58|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.42|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 8., "Flavor" -> 7.75, "Total.Cup.Points" -> 82.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.25|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.67, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7., "Flavor" -> 7.67, "Total.Cup.Points" -> 82.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.58, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 82.08|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 82.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.83, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.67|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.58|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.5, "Total.Cup.Points" -> 81.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.42|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.25|>, <|
         "Aroma" -> 7.75, "Flavor" -> 7.58, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.42, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.08|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.67, "Total.Cup.Points" -> 81.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.67|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.5|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.33|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.25|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.42, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 80.08|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.75, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.33, "Total.Cup.Points" -> 80.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.83|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.83, "Total.Cup.Points" -> 79.75|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.67|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.92, "Total.Cup.Points" -> 79.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 79.5|>, <|
         "Aroma" -> 7., "Flavor" -> 6.83, "Total.Cup.Points" -> 79.42|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.33|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 79.25|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.92, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 6.75, "Flavor" -> 6.75, "Total.Cup.Points" -> 79.17|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.25, "Total.Cup.Points" -> 79.08|>, <|
         "Aroma" -> 6.75, "Flavor" -> 7.08, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.17, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.83, "Total.Cup.Points" -> 79.|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 78.92|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7., "Total.Cup.Points" -> 78.92|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.75|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.92, "Total.Cup.Points" -> 78.67|>, <|
         "Aroma" -> 7., "Flavor" -> 7., "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.92, "Flavor" -> 7.58, "Total.Cup.Points" -> 78.58|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.75, "Total.Cup.Points" -> 78.5|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.5|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.5|>, <|
         "Aroma" -> 7.58, "Flavor" -> 7.17, "Total.Cup.Points" -> 78.42|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.25, "Total.Cup.Points" -> 78.33|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 78.08|>, <|
         "Aroma" -> 7.25, "Flavor" -> 7.33, "Total.Cup.Points" -> 78.|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7.25, "Total.Cup.Points" -> 77.92|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.75, "Total.Cup.Points" -> 77.5|>, <|
         "Aroma" -> 7.33, "Flavor" -> 7., "Total.Cup.Points" -> 77.33|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 77.17|>, <|
         "Aroma" -> 6.67, "Flavor" -> 6.33, "Total.Cup.Points" -> 76.75|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.58, "Total.Cup.Points" -> 76.42|>, <|
         "Aroma" -> 7.42, "Flavor" -> 7., "Total.Cup.Points" -> 76.17|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 76.08|>, <|
         "Aroma" -> 7.5, "Flavor" -> 7.25, "Total.Cup.Points" -> 75.5|>, <|
         "Aroma" -> 7.17, "Flavor" -> 6.92, "Total.Cup.Points" -> 75.17|>, <|
         "Aroma" -> 7.25, "Flavor" -> 6.83, "Total.Cup.Points" -> 75.17|>, <|
         "Aroma" -> 7.17, "Flavor" -> 7.17, "Total.Cup.Points" -> 75.17|>, <|
         "Aroma" -> 7., "Flavor" -> 6.92, "Total.Cup.Points" -> 75.|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.75, "Total.Cup.Points" -> 74.92|>, <|
         "Aroma" -> 7.33, "Flavor" -> 6.75, "Total.Cup.Points" -> 74.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7., "Total.Cup.Points" -> 74.67|>, <|
         "Aroma" -> 7., "Flavor" -> 6.58, "Total.Cup.Points" -> 74.33|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.42, "Total.Cup.Points" -> 74.|>, <|
         "Aroma" -> 7.67, "Flavor" -> 7., "Total.Cup.Points" -> 73.83|>, <|
         "Aroma" -> 7.08, "Flavor" -> 7.08, "Total.Cup.Points" -> 72.92|>, <|
         "Aroma" -> 6.92, "Flavor" -> 6.92, "Total.Cup.Points" -> 71.08|>, <|
         "Aroma" -> 6.5, "Flavor" -> 6.67, "Total.Cup.Points" -> 71.|>, <|
         "Aroma" -> 6.92, "Flavor" -> 7., "Total.Cup.Points" -> 70.75|>, <|
         "Aroma" -> 7.08, "Flavor" -> 6.83, "Total.Cup.Points" -> 68.33|>}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, All, "Aroma"} -> 
        1, {All, All, "Flavor"} -> 1, {All, All, "Total.Cup.Points"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[<|
              "Aroma" -> TypeSystem`PackageScope`AtomShape[60], "Flavor" -> 
               TypeSystem`PackageScope`AtomShape[60], "Total.Cup.Points" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 3, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Country"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"Aroma", "Flavor", "Total.Cup.Points"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 3], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, All, "Aroma"} -> 
        1, {All, All, "Flavor"} -> 1, {All, All, "Total.Cup.Points"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Aroma" -> TypeSystem`PackageScope`AtomShape[60], "Flavor" -> 
               TypeSystem`PackageScope`AtomShape[60], "Total.Cup.Points" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 3, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Country"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"Aroma", "Flavor", "Total.Cup.Points"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aroma", 
                  Style[
                  "Aroma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Aroma"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Aroma"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Flavor", 
                  Style[
                  "Flavor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Flavor"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Flavor"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total.Cup.Points", 
                  Style[
                  "Total.Cup.Points", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Total.Cup.Points"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Total.Cup.Points"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Guatemala\""], 
                  Style[
                   RawBoxes["\"Guatemala\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["89.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 1, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 2, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 2, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 2, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 3, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 3, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 3, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 4, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 4, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 4, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 5, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 5, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 5, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["181 total \:203a ", ""], 
                  Style[
                   Superscript["181 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Brazil\""], 
                  Style[
                   RawBoxes["\"Brazil\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 1, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 2, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 2, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 2, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 3, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 3, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 3, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 4, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 4, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 4, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 5, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 5, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["86.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 5, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["132 total \:203a ", ""], 
                  Style[
                   Superscript["132 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Mexico\""], 
                  Style[
                   RawBoxes["\"Mexico\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["87.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 1, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 2, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 2, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 2, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 3, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 3, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 3, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 4, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 4, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 4, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 5, 
                 Key["Aroma"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 5, 
                 Key["Flavor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 5, 
                 Key["Total.Cup.Points"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["236 total \:203a ", ""], 
                  Style[
                   Superscript["236 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{342., {251.63403309800196`, 257.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{342., {251.63403309800196`, 257.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.859304503835477*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"620c2c4d-885b-4eb8-98b9-140d7605e60f"]
}, Open  ]],

Cell["\<\
I then converted this data to a form most easily readable by mathematica and \
extracted values such that I could plot the different points.\
\>", "Text",
 CellChangeTimes->{{3.859307802761105*^9, 
  3.859307841018963*^9}},ExpressionUUID->"9691006a-ef6d-4a6c-a1b2-\
c6088eb68a16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NdataCoffee", " ", "=", " ", 
   RowBox[{"Normal", "[", "GdataSA", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.85930511000498*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"cbcfd91e-9c08-4206-bd95-d13c9b4f97f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoffeeDataSA", " ", "=", " ", 
   RowBox[{"Values", "[", "NdataCoffee", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8593036531384907`*^9, 3.8593037835168734`*^9}, {
   3.8593038707286167`*^9, 3.859303871995179*^9}, {3.8593039377140303`*^9, 
   3.859304056242856*^9}, 3.8593047552280054`*^9, 3.859304894666525*^9, 
   3.859305068882942*^9, {3.859305114489072*^9, 3.8593051227124743`*^9}, {
   3.8593065669340315`*^9, 3.8593065872754765`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"1ac51717-cc9a-4fde-9d79-2987b9dfad55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoffeeDataSA2", " ", "=", " ", "NdataCoffee"}], ";"}]], "Input",
 CellChangeTimes->{{3.859304403611112*^9, 3.8593044194175262`*^9}, {
   3.8593047343235598`*^9, 3.8593047409289227`*^9}, 3.8593051304668717`*^9, {
   3.859306571958701*^9, 3.8593065744015317`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"3e2c1268-ed34-4c29-b572-e63d3ff71df7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"CoffeeDataSA", ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.859284239526989*^9, 3.8592842495264826`*^9}, {
   3.8592844041973915`*^9, 3.8592844747813606`*^9}, {3.8592845059112434`*^9, 
   3.8592846140248523`*^9}, {3.859284781470202*^9, 3.8592848695969048`*^9}, {
   3.8592853827259808`*^9, 3.8592853951346245`*^9}, 3.859287253387912*^9, {
   3.859289304014248*^9, 3.859289311698763*^9}, {3.8592894118877387`*^9, 
   3.8592894163867846`*^9}, {3.85929092380198*^9, 3.8592909498358827`*^9}, {
   3.8592919075345216`*^9, 3.8592919084599895`*^9}, {3.8592919714259796`*^9, 
   3.859291973513769*^9}, {3.8592986190908937`*^9, 3.859298698360731*^9}, {
   3.8592987427761736`*^9, 3.859298803809913*^9}, {3.8592988994396515`*^9, 
   3.8592989003178444`*^9}, {3.8593040842319593`*^9, 3.859304085371827*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"c7b525c1-024a-46db-9a40-9a0269e27d21"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], 
      Point3DBox[{8.42, 8.5, 89.75}], Point3DBox[{7.92, 8.08, 85.92}], 
      Point3DBox[{7.83, 8., 85.83}], Point3DBox[{8., 8., 85.83}], 
      Point3DBox[{8., 7.83, 85.5}], Point3DBox[{7.83, 7.75, 85.33}], 
      Point3DBox[{8., 7.92, 85.25}], Point3DBox[{8.25, 8., 85.17}], 
      Point3DBox[{7.83, 8.08, 85.}], Point3DBox[{7.75, 7.83, 84.67}], 
      Point3DBox[{8., 7.83, 84.67}], Point3DBox[{7.67, 7.83, 84.67}], 
      Point3DBox[{7.75, 7.83, 84.58}], Point3DBox[{8., 7.92, 84.58}], 
      Point3DBox[{8.17, 7.83, 84.5}], Point3DBox[{7.67, 8., 84.5}], 
      Point3DBox[{7.5, 7.67, 84.33}], Point3DBox[{7.75, 7.75, 84.25}], 
      Point3DBox[{7.75, 7.92, 84.25}], Point3DBox[{7.83, 7.83, 84.25}], 
      Point3DBox[{7.75, 7.83, 84.17}], Point3DBox[{7.75, 7.75, 84.17}], 
      Point3DBox[{7.75, 7.92, 84.17}], Point3DBox[{7.58, 7.83, 84.17}], 
      Point3DBox[{7.67, 7.75, 84.17}], Point3DBox[{7.92, 7.75, 84.17}], 
      Point3DBox[{7.83, 7.5, 84.17}], Point3DBox[{8., 7.75, 84.08}], 
      Point3DBox[{7.58, 7.75, 84.08}], Point3DBox[{7.67, 7.83, 84.}], 
      Point3DBox[{7.92, 7.67, 84.}], Point3DBox[{7.75, 7.83, 84.}], 
      Point3DBox[{7.75, 7.75, 83.83}], Point3DBox[{7.58, 7.83, 83.83}], 
      Point3DBox[{7.5, 7.83, 83.83}], Point3DBox[{7.67, 7.58, 83.75}], 
      Point3DBox[{8., 7.5, 83.67}], Point3DBox[{7.67, 7.67, 83.67}], 
      Point3DBox[{7.83, 7.67, 83.67}], Point3DBox[{8.17, 8.17, 83.67}], 
      Point3DBox[{7.67, 8.17, 83.67}], Point3DBox[{7.67, 7.5, 83.67}], 
      Point3DBox[{7.75, 7.75, 83.58}], Point3DBox[{7.67, 7.75, 83.5}], 
      Point3DBox[{7.58, 7.75, 83.5}], Point3DBox[{7.83, 7.5, 83.5}], 
      Point3DBox[{7.5, 7.5, 83.5}], Point3DBox[{7.67, 7.75, 83.42}], 
      Point3DBox[{7.75, 7.83, 83.42}], Point3DBox[{7.67, 7.75, 83.42}], 
      Point3DBox[{7.67, 7.5, 83.42}], Point3DBox[{7.83, 7.67, 83.33}], 
      Point3DBox[{7.5, 7.58, 83.25}], Point3DBox[{7.5, 7.67, 83.25}], 
      Point3DBox[{7.83, 7.58, 83.25}], Point3DBox[{7.58, 7.58, 83.17}], 
      Point3DBox[{7.67, 7.75, 83.17}], Point3DBox[{7.5, 7.75, 83.17}], 
      Point3DBox[{7.92, 7.67, 83.17}], Point3DBox[{7.33, 7.83, 83.17}], 
      Point3DBox[{7.67, 7.83, 83.17}], Point3DBox[{7.75, 7.5, 83.17}], 
      Point3DBox[{7.92, 7.67, 83.08}], Point3DBox[{7.67, 7.75, 83.}], 
      Point3DBox[{7.75, 7.67, 83.}], Point3DBox[{7.83, 7.67, 83.}], 
      Point3DBox[{7.67, 7.67, 83.}], Point3DBox[{7.5, 7.67, 83.}], 
      Point3DBox[{7.75, 7.5, 82.92}], Point3DBox[{7.67, 7.83, 82.92}], 
      Point3DBox[{7.58, 7.58, 82.92}], Point3DBox[{7.83, 7.75, 82.92}], 
      Point3DBox[{7.5, 7.58, 82.83}], Point3DBox[{7.58, 7.58, 82.83}], 
      Point3DBox[{7.67, 7.67, 82.83}], Point3DBox[{7.67, 7.67, 82.83}], 
      Point3DBox[{7.5, 7.58, 82.75}], Point3DBox[{7.58, 7.67, 82.75}], 
      Point3DBox[{7.5, 7.67, 82.75}], Point3DBox[{7.5, 7.5, 82.75}], 
      Point3DBox[{7.42, 7.58, 82.75}], Point3DBox[{7.58, 7.58, 82.75}], 
      Point3DBox[{7.75, 7.42, 82.75}], Point3DBox[{7.67, 7.67, 82.67}], 
      Point3DBox[{7.5, 7.42, 82.58}], Point3DBox[{7.5, 7.58, 82.58}], 
      Point3DBox[{7.5, 7.5, 82.5}], Point3DBox[{7.83, 7.42, 82.5}], 
      Point3DBox[{7.83, 7.67, 82.5}], Point3DBox[{7.67, 7.33, 82.5}], 
      Point3DBox[{7.75, 7.58, 82.5}], Point3DBox[{7.58, 7.5, 82.42}], 
      Point3DBox[{7.67, 7.58, 82.42}], Point3DBox[{7.58, 7.5, 82.42}], 
      Point3DBox[{7.5, 7.42, 82.42}], Point3DBox[{7.5, 7.5, 82.42}], 
      Point3DBox[{7.5, 7.42, 82.33}], Point3DBox[{7.58, 7.67, 82.33}], 
      Point3DBox[{7.5, 7.42, 82.33}], Point3DBox[{7.67, 7.5, 82.33}], 
      Point3DBox[{7.5, 7.67, 82.33}], Point3DBox[{7.67, 7.5, 82.25}], 
      Point3DBox[{7.5, 7.5, 82.25}], Point3DBox[{7.42, 7.42, 82.17}], 
      Point3DBox[{7.25, 7.75, 82.17}], Point3DBox[{7.33, 7.33, 82.}], 
      Point3DBox[{7.75, 7.33, 82.}], Point3DBox[{7.58, 7.5, 81.92}], 
      Point3DBox[{7.5, 7.5, 81.92}], Point3DBox[{7.58, 7.58, 81.92}], 
      Point3DBox[{7.42, 7.5, 81.83}], Point3DBox[{7.58, 7.5, 81.83}], 
      Point3DBox[{7.83, 7.67, 81.83}], Point3DBox[{7.5, 7.5, 81.75}], 
      Point3DBox[{7.42, 7.42, 81.67}], Point3DBox[{7.42, 7.33, 81.67}], 
      Point3DBox[{7.5, 7.67, 81.67}], Point3DBox[{7.42, 7.42, 81.58}], 
      Point3DBox[{7.42, 7.33, 81.58}], Point3DBox[{7.67, 7.58, 81.5}], 
      Point3DBox[{7.5, 7.42, 81.5}], Point3DBox[{7.5, 7.42, 81.5}], 
      Point3DBox[{7.33, 7.5, 81.5}], Point3DBox[{7.42, 7.33, 81.42}], 
      Point3DBox[{7.42, 7.5, 81.42}], Point3DBox[{7.42, 7.33, 81.42}], 
      Point3DBox[{7.33, 7.42, 81.25}], Point3DBox[{7.5, 7.33, 81.25}], 
      Point3DBox[{7.42, 7.25, 81.17}], Point3DBox[{7.42, 7.25, 81.}], 
      Point3DBox[{7.5, 7.25, 81.}], Point3DBox[{7.67, 7.67, 80.92}], 
      Point3DBox[{7.58, 7.42, 80.92}], Point3DBox[{7.67, 7.25, 80.83}], 
      Point3DBox[{7.5, 7.33, 80.75}], Point3DBox[{7.67, 7.42, 80.67}], 
      Point3DBox[{7.67, 7.17, 80.67}], Point3DBox[{7., 7.33, 80.67}], 
      Point3DBox[{7., 7.5, 80.67}], Point3DBox[{7.17, 7.42, 80.58}], 
      Point3DBox[{7.33, 7.25, 80.5}], Point3DBox[{7.5, 7.17, 80.5}], 
      Point3DBox[{7.5, 7.5, 80.5}], Point3DBox[{7.33, 7.33, 80.33}], 
      Point3DBox[{7., 7.17, 80.25}], Point3DBox[{7.33, 7.33, 80.17}], 
      Point3DBox[{7.33, 7.33, 80.17}], Point3DBox[{7.33, 7.25, 79.83}], 
      Point3DBox[{7.5, 7.42, 79.75}], Point3DBox[{7.58, 7.33, 79.75}], 
      Point3DBox[{7.42, 7.42, 79.67}], Point3DBox[{7.5, 7., 79.67}], 
      Point3DBox[{7.08, 7., 79.58}], Point3DBox[{7.08, 7.33, 79.42}], 
      Point3DBox[{7.25, 7.33, 79.42}], Point3DBox[{7.17, 6.5, 79.33}], 
      Point3DBox[{7.33, 7.42, 79.17}], Point3DBox[{7.08, 7., 79.17}], 
      Point3DBox[{7.25, 7.17, 79.17}], Point3DBox[{7.58, 7.67, 79.08}], 
      Point3DBox[{7.33, 7.17, 79.}], Point3DBox[{7.33, 7.08, 78.75}], 
      Point3DBox[{7.33, 7.17, 78.58}], Point3DBox[{7.17, 6.5, 78.33}], 
      Point3DBox[{7.17, 7.17, 78.33}], Point3DBox[{7.17, 6.08, 78.33}], 
      Point3DBox[{7.42, 7.25, 78.}], Point3DBox[{7., 6.83, 78.}], 
      Point3DBox[{7.17, 6.17, 77.92}], Point3DBox[{7., 6.83, 77.83}], 
      Point3DBox[{7.08, 6.92, 77.42}], Point3DBox[{7.33, 7., 77.33}], 
      Point3DBox[{6.42, 6.5, 76.5}], Point3DBox[{7.5, 7., 76.33}], 
      Point3DBox[{6.17, 6.5, 76.33}], Point3DBox[{7.92, 7.58, 75.58}], 
      Point3DBox[{6.67, 6.5, 75.58}], Point3DBox[{6.75, 6.5, 74.75}], 
      Point3DBox[{6.75, 6.67, 74.75}], Point3DBox[{6.5, 6.33, 74.33}], 
      Point3DBox[{7.5, 6.67, 59.83}]}, 
     {RGBColor[0.7926498, 0.5499369, 0.1278459], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], 
      Point3DBox[{8.58, 8.42, 88.83}], Point3DBox[{8.5, 8.5, 86.92}], 
      Point3DBox[{8.5, 8.17, 86.42}], Point3DBox[{8.17, 7.92, 86.17}], 
      Point3DBox[{8.42, 7.92, 86.17}], Point3DBox[{8.33, 8., 86.08}], 
      Point3DBox[{8., 8., 85.42}], Point3DBox[{8., 8., 85.}], 
      Point3DBox[{8., 7.92, 84.92}], Point3DBox[{8., 8., 84.92}], 
      Point3DBox[{8., 8., 84.58}], Point3DBox[{8.5, 8., 84.58}], 
      Point3DBox[{7.81, 7.81, 84.5}], Point3DBox[{8.17, 7.67, 84.5}], 
      Point3DBox[{8.17, 8., 84.33}], Point3DBox[{8., 8., 84.33}], 
      Point3DBox[{7.67, 7.75, 84.17}], Point3DBox[{7.58, 7.83, 84.17}], 
      Point3DBox[{7.58, 7.83, 84.}], Point3DBox[{7.5, 7.75, 83.92}], 
      Point3DBox[{7.58, 7.67, 83.92}], Point3DBox[{7.25, 7.58, 83.83}], 
      Point3DBox[{7.67, 7.67, 83.83}], Point3DBox[{7.92, 7.5, 83.83}], 
      Point3DBox[{7.83, 7.83, 83.83}], Point3DBox[{7.67, 7.67, 83.75}], 
      Point3DBox[{7.67, 7.83, 83.67}], Point3DBox[{7.58, 7.75, 83.67}], 
      Point3DBox[{7.58, 7.67, 83.58}], Point3DBox[{7.83, 7.75, 83.58}], 
      Point3DBox[{7.33, 7.83, 83.42}], Point3DBox[{7.5, 7.83, 83.33}], 
      Point3DBox[{7.58, 7.67, 83.25}], Point3DBox[{7.75, 7.67, 83.25}], 
      Point3DBox[{7.67, 7.42, 83.17}], Point3DBox[{7.75, 7.67, 83.17}], 
      Point3DBox[{7.92, 7.58, 83.17}], Point3DBox[{7.75, 7.5, 83.17}], 
      Point3DBox[{7.58, 7.75, 83.17}], Point3DBox[{7.58, 7.58, 83.08}], 
      Point3DBox[{7.33, 7.67, 83.08}], Point3DBox[{7.42, 7.67, 83.08}], 
      Point3DBox[{7.58, 7.83, 83.08}], Point3DBox[{7.58, 7.5, 83.}], 
      Point3DBox[{7.5, 7.58, 83.}], Point3DBox[{7.5, 7.67, 83.}], 
      Point3DBox[{7.67, 7.67, 83.}], Point3DBox[{7.75, 7.58, 83.}], 
      Point3DBox[{7.67, 7.58, 82.92}], Point3DBox[{7.08, 7.5, 82.92}], 
      Point3DBox[{7.67, 7.58, 82.83}], Point3DBox[{7.58, 7.83, 82.83}], 
      Point3DBox[{7.5, 7.5, 82.75}], Point3DBox[{7.5, 7.58, 82.67}], 
      Point3DBox[{7.5, 7.58, 82.67}], Point3DBox[{7.58, 7.5, 82.67}], 
      Point3DBox[{7.33, 7.5, 82.67}], Point3DBox[{7.5, 7.58, 82.58}], 
      Point3DBox[{7.42, 7.42, 82.58}], Point3DBox[{7.58, 7.5, 82.58}], 
      Point3DBox[{7.5, 7.5, 82.5}], Point3DBox[{7.42, 7.5, 82.5}], 
      Point3DBox[{7.67, 7.42, 82.5}], Point3DBox[{7.42, 7.5, 82.42}], 
      Point3DBox[{7.17, 7.83, 82.42}], Point3DBox[{7.58, 7.67, 82.42}], 
      Point3DBox[{7.25, 7.33, 82.42}], Point3DBox[{7.75, 7.5, 82.42}], 
      Point3DBox[{7.33, 7.5, 82.33}], Point3DBox[{7.42, 7.42, 82.33}], 
      Point3DBox[{7.5, 7.5, 82.33}], Point3DBox[{8.25, 7.83, 82.33}], 
      Point3DBox[{7.42, 7.5, 82.33}], Point3DBox[{7.75, 8.08, 82.33}], 
      Point3DBox[{7.58, 7.5, 82.33}], Point3DBox[{7.58, 7.58, 82.33}], 
      Point3DBox[{7.58, 7.5, 82.25}], Point3DBox[{7.42, 7.67, 82.25}], 
      Point3DBox[{7.75, 7.58, 82.25}], Point3DBox[{7.67, 7.58, 82.25}], 
      Point3DBox[{7.42, 7.42, 82.17}], Point3DBox[{6.92, 7.58, 82.17}], 
      Point3DBox[{7.58, 7.5, 82.17}], Point3DBox[{7.42, 7.58, 82.08}], 
      Point3DBox[{7.25, 7.25, 82.08}], Point3DBox[{7.5, 7.33, 82.}], 
      Point3DBox[{7.33, 7.67, 82.}], Point3DBox[{7.42, 7.5, 82.}], 
      Point3DBox[{7.42, 7.5, 82.}], Point3DBox[{7.58, 7.5, 82.}], 
      Point3DBox[{7.42, 7.33, 81.92}], Point3DBox[{7.42, 7.58, 81.92}], 
      Point3DBox[{7.42, 7.5, 81.83}], Point3DBox[{7.17, 7.58, 81.83}], 
      Point3DBox[{7.58, 7., 81.83}], Point3DBox[{7.33, 7.58, 81.83}], 
      Point3DBox[{7.75, 7.75, 81.83}], Point3DBox[{7.33, 7.67, 81.83}], 
      Point3DBox[{7.17, 7.25, 81.75}], Point3DBox[{7.42, 7.5, 81.67}], 
      Point3DBox[{7.25, 7.75, 81.67}], Point3DBox[{7.25, 7.42, 81.67}], 
      Point3DBox[{7.42, 7.42, 81.58}], Point3DBox[{7.58, 7.5, 81.5}], 
      Point3DBox[{7.5, 7.42, 81.5}], Point3DBox[{7.33, 7.5, 81.42}], 
      Point3DBox[{7.25, 7.5, 81.42}], Point3DBox[{7.25, 7.33, 81.33}], 
      Point3DBox[{7.17, 7.33, 81.33}], Point3DBox[{7.5, 7.58, 81.33}], 
      Point3DBox[{7.17, 7.42, 81.25}], Point3DBox[{7.42, 7.42, 81.17}], 
      Point3DBox[{7.42, 7.33, 81.17}], Point3DBox[{7.58, 7.42, 81.08}], 
      Point3DBox[{7.25, 7.25, 81.}], Point3DBox[{7.33, 7.17, 81.}], 
      Point3DBox[{7.67, 7.75, 81.}], Point3DBox[{7.25, 7.33, 80.92}], 
      Point3DBox[{7.17, 7.42, 80.92}], Point3DBox[{7.17, 7.25, 80.75}], 
      Point3DBox[{7.33, 7.25, 80.58}], Point3DBox[{7.42, 7.25, 80.58}], 
      Point3DBox[{7.25, 7.33, 80.5}], Point3DBox[{7.42, 7.42, 80.5}], 
      Point3DBox[{7.17, 7.33, 80.25}], Point3DBox[{7.17, 7.17, 80.08}], 
      Point3DBox[{6.83, 7., 78.42}], Point3DBox[{7., 6.75, 77.83}], 
      Point3DBox[{7.5, 7.33, 77.33}], Point3DBox[{7.17, 7., 75.67}], 
      Point3DBox[{7.25, 6.58, 73.5}], Point3DBox[{7., 7., 70.67}]}, 
     {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], 
      Point3DBox[{8.17, 8.25, 87.17}], Point3DBox[{7.83, 8., 85.}], 
      Point3DBox[{7.92, 8.17, 85.}], Point3DBox[{7.75, 8., 84.92}], 
      Point3DBox[{7.83, 7.58, 84.67}], Point3DBox[{8., 7.92, 84.5}], 
      Point3DBox[{7.92, 7.83, 84.5}], Point3DBox[{7.75, 7.92, 84.42}], 
      Point3DBox[{8., 7.75, 84.33}], Point3DBox[{7.83, 7.92, 84.25}], 
      Point3DBox[{7.83, 7.83, 84.25}], Point3DBox[{7.83, 7.92, 84.25}], 
      Point3DBox[{7.67, 7.75, 84.08}], Point3DBox[{7.83, 7.83, 83.92}], 
      Point3DBox[{7.67, 7.75, 83.92}], Point3DBox[{7.5, 7.67, 83.92}], 
      Point3DBox[{7.75, 7.92, 83.92}], Point3DBox[{7.67, 8., 83.83}], 
      Point3DBox[{7.67, 7.58, 83.83}], Point3DBox[{7.83, 7.58, 83.75}], 
      Point3DBox[{7.67, 7.5, 83.67}], Point3DBox[{7.75, 7.75, 83.58}], 
      Point3DBox[{7.83, 7.67, 83.58}], Point3DBox[{7.83, 7.58, 83.5}], 
      Point3DBox[{7.67, 7.75, 83.5}], Point3DBox[{7.75, 7.67, 83.5}], 
      Point3DBox[{7.25, 7.88, 83.38}], Point3DBox[{7.75, 7.75, 83.33}], 
      Point3DBox[{7.67, 7.67, 83.33}], Point3DBox[{7.67, 7.83, 83.25}], 
      Point3DBox[{7.83, 7.75, 83.25}], Point3DBox[{7.58, 7.75, 83.25}], 
      Point3DBox[{7.75, 7.58, 83.25}], Point3DBox[{7.75, 7.75, 83.25}], 
      Point3DBox[{7.75, 7.58, 83.17}], Point3DBox[{7.75, 7.67, 83.17}], 
      Point3DBox[{7.58, 7.75, 83.17}], Point3DBox[{7.75, 7.5, 83.17}], 
      Point3DBox[{7.5, 7.75, 83.17}], Point3DBox[{7.75, 7.67, 83.08}], 
      Point3DBox[{7.67, 7.58, 83.}], Point3DBox[{7.67, 7.83, 83.}], 
      Point3DBox[{7.5, 7.67, 83.}], Point3DBox[{7.83, 7.67, 82.92}], 
      Point3DBox[{7.75, 7.67, 82.92}], Point3DBox[{7.58, 7.58, 82.92}], 
      Point3DBox[{8., 7.92, 82.92}], Point3DBox[{7.58, 7.67, 82.83}], 
      Point3DBox[{7.67, 7.58, 82.83}], Point3DBox[{7.58, 7.58, 82.83}], 
      Point3DBox[{7.58, 7.58, 82.75}], Point3DBox[{7.58, 7.58, 82.75}], 
      Point3DBox[{8.08, 8.17, 82.75}], Point3DBox[{7.5, 7.67, 82.67}], 
      Point3DBox[{7.67, 7.58, 82.67}], Point3DBox[{7.58, 7.58, 82.67}], 
      Point3DBox[{7.5, 7.58, 82.67}], Point3DBox[{7.75, 7.58, 82.67}], 
      Point3DBox[{7.58, 7.58, 82.58}], Point3DBox[{7.5, 7.58, 82.58}], 
      Point3DBox[{7.67, 7.58, 82.58}], Point3DBox[{7.42, 7.58, 82.5}], 
      Point3DBox[{7.5, 7.58, 82.5}], Point3DBox[{7.67, 7.5, 82.5}], 
      Point3DBox[{7.92, 7.5, 82.5}], Point3DBox[{7.42, 7.5, 82.42}], 
      Point3DBox[{7.5, 7.58, 82.42}], Point3DBox[{7.5, 7.42, 82.42}], 
      Point3DBox[{7.42, 7.58, 82.42}], Point3DBox[{7.42, 7.58, 82.42}], 
      Point3DBox[{7.75, 7.33, 82.42}], Point3DBox[{7.5, 7.58, 82.42}], 
      Point3DBox[{7.58, 7.58, 82.42}], Point3DBox[{7.58, 7.33, 82.42}], 
      Point3DBox[{7.67, 7.58, 82.42}], Point3DBox[{7.83, 7.5, 82.42}], 
      Point3DBox[{7.33, 7.58, 82.33}], Point3DBox[{7.67, 7.5, 82.33}], 
      Point3DBox[{7.58, 7.67, 82.33}], Point3DBox[{7.67, 7.58, 82.33}], 
      Point3DBox[{8., 7.75, 82.33}], Point3DBox[{7.58, 7.58, 82.25}], 
      Point3DBox[{7.58, 7.58, 82.25}], Point3DBox[{7.5, 7.58, 82.25}], 
      Point3DBox[{7.67, 7.58, 82.25}], Point3DBox[{7.33, 7.58, 82.25}], 
      Point3DBox[{7.42, 7.5, 82.25}], Point3DBox[{7.42, 7.33, 82.17}], 
      Point3DBox[{7.5, 7.5, 82.17}], Point3DBox[{7.5, 7.67, 82.17}], 
      Point3DBox[{7.5, 7.58, 82.17}], Point3DBox[{7., 7.67, 82.17}], 
      Point3DBox[{7.42, 7.58, 82.08}], Point3DBox[{7.5, 7.42, 82.08}], 
      Point3DBox[{7.67, 7.5, 82.08}], Point3DBox[{7.58, 7.42, 82.08}], 
      Point3DBox[{7.67, 7.33, 82.}], Point3DBox[{7.58, 7.5, 81.92}], 
      Point3DBox[{7.5, 7.5, 81.92}], Point3DBox[{7.5, 7.42, 81.92}], 
      Point3DBox[{7.33, 7.58, 81.92}], Point3DBox[{7.67, 7.42, 81.92}], 
      Point3DBox[{7.58, 7.5, 81.83}], Point3DBox[{7.42, 7.42, 81.83}], 
      Point3DBox[{7.83, 7.33, 81.83}], Point3DBox[{7.33, 7.33, 81.83}], 
      Point3DBox[{7.5, 7.5, 81.75}], Point3DBox[{7.42, 7.5, 81.75}], 
      Point3DBox[{7.42, 7.5, 81.75}], Point3DBox[{7.33, 7.42, 81.75}], 
      Point3DBox[{7.5, 7.42, 81.75}], Point3DBox[{7.42, 7.42, 81.67}], 
      Point3DBox[{7.5, 7.42, 81.67}], Point3DBox[{7.25, 7.67, 81.67}], 
      Point3DBox[{7.67, 7.25, 81.67}], Point3DBox[{7.5, 7.42, 81.67}], 
      Point3DBox[{7.58, 7.42, 81.67}], Point3DBox[{7.75, 7.58, 81.67}], 
      Point3DBox[{7.67, 7.5, 81.58}], Point3DBox[{7.33, 7.5, 81.58}], 
      Point3DBox[{7.67, 7.58, 81.58}], Point3DBox[{7.33, 7.33, 81.5}], 
      Point3DBox[{7.58, 7.42, 81.5}], Point3DBox[{7.42, 7.25, 81.5}], 
      Point3DBox[{7.33, 7.5, 81.5}], Point3DBox[{7.42, 7.42, 81.5}], 
      Point3DBox[{7.5, 7.5, 81.5}], Point3DBox[{7.58, 7.33, 81.42}], 
      Point3DBox[{7.67, 7.33, 81.42}], Point3DBox[{7.42, 7.33, 81.42}], 
      Point3DBox[{7.42, 7.42, 81.42}], Point3DBox[{7.67, 7.42, 81.33}], 
      Point3DBox[{7.58, 7.42, 81.33}], Point3DBox[{7.33, 7.25, 81.33}], 
      Point3DBox[{7.42, 7.42, 81.25}], Point3DBox[{7.75, 7.58, 81.17}], 
      Point3DBox[{7.42, 7.25, 81.17}], Point3DBox[{7.25, 7.42, 81.08}], 
      Point3DBox[{7.33, 7.25, 81.08}], Point3DBox[{7.33, 7.33, 81.08}], 
      Point3DBox[{7.42, 7.33, 81.08}], Point3DBox[{7.08, 7.33, 81.}], 
      Point3DBox[{7.58, 7.67, 81.}], Point3DBox[{7.5, 7.33, 80.92}], 
      Point3DBox[{7.58, 7.33, 80.92}], Point3DBox[{7.17, 7.08, 80.83}], 
      Point3DBox[{7.33, 7.25, 80.83}], Point3DBox[{7.5, 7.17, 80.83}], 
      Point3DBox[{7.58, 7.33, 80.75}], Point3DBox[{7.25, 7.17, 80.67}], 
      Point3DBox[{7.25, 7.25, 80.5}], Point3DBox[{6.92, 7.17, 80.42}], 
      Point3DBox[{7.42, 7.08, 80.42}], Point3DBox[{7.25, 7.08, 80.33}], 
      Point3DBox[{7.25, 7.17, 80.25}], Point3DBox[{7.58, 7.33, 80.25}], 
      Point3DBox[{7.33, 7.08, 80.17}], Point3DBox[{7.58, 7.42, 80.17}], 
      Point3DBox[{7.33, 7.33, 80.17}], Point3DBox[{7.33, 7.17, 80.08}], 
      Point3DBox[{7.25, 7.08, 80.08}], Point3DBox[{7.58, 7.75, 80.}], 
      Point3DBox[{7.25, 7.25, 80.}], Point3DBox[{7.08, 7.33, 80.}], 
      Point3DBox[{7.33, 7.08, 79.92}], Point3DBox[{7.17, 7.17, 79.92}], 
      Point3DBox[{7.5, 7.17, 79.92}], Point3DBox[{7.17, 7.08, 79.92}], 
      Point3DBox[{7.33, 7.25, 79.92}], Point3DBox[{7.17, 7.33, 79.92}], 
      Point3DBox[{7.17, 7.08, 79.83}], Point3DBox[{7.58, 7.08, 79.75}], 
      Point3DBox[{7.58, 7.08, 79.75}], Point3DBox[{7.25, 7.08, 79.75}], 
      Point3DBox[{7.25, 7.17, 79.75}], Point3DBox[{7.33, 7.25, 79.75}], 
      Point3DBox[{7.25, 6.83, 79.75}], Point3DBox[{7.42, 7.25, 79.67}], 
      Point3DBox[{7.33, 7.17, 79.67}], Point3DBox[{6.92, 7.17, 79.67}], 
      Point3DBox[{7.08, 7., 79.58}], Point3DBox[{7.25, 6.92, 79.58}], 
      Point3DBox[{7.25, 7.08, 79.5}], Point3DBox[{7.25, 7.33, 79.5}], 
      Point3DBox[{7., 6.83, 79.42}], Point3DBox[{7., 7., 79.33}], 
      Point3DBox[{7.42, 7.17, 79.33}], Point3DBox[{7., 7., 79.25}], 
      Point3DBox[{7.25, 7.08, 79.17}], Point3DBox[{7.17, 6.92, 79.17}], 
      Point3DBox[{6.75, 6.75, 79.17}], Point3DBox[{7.33, 7., 79.08}], 
      Point3DBox[{7.25, 7.08, 79.08}], Point3DBox[{7.17, 7.25, 79.08}], 
      Point3DBox[{6.75, 7.08, 79.}], Point3DBox[{7.5, 7.17, 79.}], 
      Point3DBox[{7.17, 6.83, 79.}], Point3DBox[{7.33, 7., 78.92}], 
      Point3DBox[{7.5, 7., 78.92}], Point3DBox[{7.25, 6.83, 78.75}], 
      Point3DBox[{7.25, 7.33, 78.75}], Point3DBox[{7.67, 7.17, 78.75}], 
      Point3DBox[{6.92, 6.92, 78.67}], Point3DBox[{7., 7., 78.58}], 
      Point3DBox[{7.92, 7.58, 78.58}], Point3DBox[{7.25, 6.75, 78.5}], 
      Point3DBox[{7.08, 6.83, 78.5}], Point3DBox[{7.25, 7.17, 78.5}], 
      Point3DBox[{7.58, 7.17, 78.42}], Point3DBox[{7.25, 7.25, 78.33}], 
      Point3DBox[{7.08, 6.83, 78.08}], Point3DBox[{7.25, 7.33, 78.}], 
      Point3DBox[{7.42, 7.25, 77.92}], Point3DBox[{7.17, 6.75, 77.5}], 
      Point3DBox[{7.33, 7., 77.33}], Point3DBox[{7.08, 7., 77.17}], 
      Point3DBox[{6.67, 6.33, 76.75}], Point3DBox[{7.17, 6.58, 76.42}], 
      Point3DBox[{7.42, 7., 76.17}], Point3DBox[{7.08, 6.83, 76.08}], 
      Point3DBox[{7.5, 7.25, 75.5}], Point3DBox[{7.17, 6.92, 75.17}], 
      Point3DBox[{7.25, 6.83, 75.17}], Point3DBox[{7.17, 7.17, 75.17}], 
      Point3DBox[{7., 6.92, 75.}], Point3DBox[{7.08, 6.75, 74.92}], 
      Point3DBox[{7.33, 6.75, 74.83}], Point3DBox[{7.08, 7., 74.67}], 
      Point3DBox[{7., 6.58, 74.33}], Point3DBox[{6.92, 6.42, 74.}], 
      Point3DBox[{7.67, 7., 73.83}], Point3DBox[{7.08, 7.08, 72.92}], 
      Point3DBox[{6.92, 6.92, 71.08}], Point3DBox[{6.5, 6.67, 71.}], 
      Point3DBox[{6.92, 7., 70.75}], 
      Point3DBox[{7.08, 6.83, 68.33}]}}, {}, {{}, {}}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{428.85155131327326`, 281.637946719494},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{Automatic, Automatic, Automatic},
  PlotRangePadding->{{0, 0}, {0, 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.065214329515435, -2.2823181803021995`, 1.4056719023392925`},
  ViewVertical->{0.07366777343688156, -0.04523420624831391, 
   0.9962564558094151}]], "Output",
 CellChangeTimes->{{3.859284523027933*^9, 3.859284614422849*^9}, {
   3.8592847934860687`*^9, 3.8592848707643957`*^9}, {3.859285386009862*^9, 
   3.859285395837636*^9}, 3.859287254304543*^9, {3.8592893001741247`*^9, 
   3.859289312987957*^9}, 3.8592908540487337`*^9, {3.8592909308321376`*^9, 
   3.8592909518164825`*^9}, 3.859291063286893*^9, 3.8592917653524294`*^9, 
   3.859291903806941*^9, {3.8592919681770725`*^9, 3.859291975013748*^9}, {
   3.859298611811986*^9, 3.8592987005406604`*^9}, 3.8592987473430347`*^9, {
   3.8592987781846457`*^9, 3.859298804401067*^9}, 3.859298901371765*^9, 
   3.8593018905907955`*^9, 3.8593040859065013`*^9, 3.859305132223028*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"cdfe087d-3ae1-41e4-87d0-b241145603d3"]
}, Open  ]],

Cell["\<\
As we can see,  each country\[CloseCurlyQuote]s scoring by CQI is quite \
similar, so the data will probably be hard to separate using Support Vectors. \
Let\[CloseCurlyQuote]s check. 
First, let\[CloseCurlyQuote]s reduce this to a 2D plot for ease of analysis. \
I used Principal Component Analysis to reduce it\[CloseCurlyQuote]s \
dimensions.\
\>", "Text",
 CellChangeTimes->{{3.8593078463237267`*^9, 3.8593078662159514`*^9}, {
  3.859309117951858*^9, 
  3.859309218721099*^9}},ExpressionUUID->"98d77cc0-06a9-40f4-8304-\
6bc4c1434073"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dGdataSA", " ", "=", " ", 
  RowBox[{"DimensionReduction", "[", 
   RowBox[{
    RowBox[{"CoffeeDataSA", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "2", ",", " ", 
    RowBox[{
    "Method", " ", "->", " ", "\"\<PrincipalComponentsAnalysis\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8592854304885483`*^9, 3.859285522092003*^9}, {
   3.8592855576320724`*^9, 3.8592855661222334`*^9}, {3.859287282291774*^9, 
   3.859287335409536*^9}, {3.8592875419379735`*^9, 3.8592875628508186`*^9}, {
   3.859287698766635*^9, 3.8592877615172157`*^9}, {3.8592878418586245`*^9, 
   3.8592878535891933`*^9}, {3.859288284506564*^9, 3.8592883022620487`*^9}, {
   3.8592885474377704`*^9, 3.859288557343974*^9}, {3.859288626850938*^9, 
   3.8592886269019985`*^9}, {3.859288964319964*^9, 3.859289003807029*^9}, {
   3.8592890366078844`*^9, 3.859289041420472*^9}, {3.859289339774214*^9, 
   3.859289396963455*^9}, {3.859289429941681*^9, 3.859289462624197*^9}, {
   3.8592910825980635`*^9, 3.859291116588653*^9}, {3.8592917871498547`*^9, 
   3.8592918446925297`*^9}, {3.859292023697687*^9, 3.8592921588372917`*^9}, {
   3.8592921894191055`*^9, 3.859292214663269*^9}, {3.859298912346802*^9, 
   3.859298961323673*^9}, {3.859304094785905*^9, 3.85930417495956*^9}, {
   3.8593042064948816`*^9, 3.859304214801503*^9}, {3.859304311313989*^9, 
   3.8593043771735773`*^9}, {3.85930442586952*^9, 3.859304467863225*^9}, {
   3.859304512676423*^9, 3.8593045127583046`*^9}, 3.8593047451789894`*^9, 
   3.8593049282212076`*^9, {3.8593051475983644`*^9, 3.859305210960806*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"0ec6edff-a019-4054-8e0e-2a72d00fa319"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DimensionReducerFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}}, {}, {{}, {}, {
                 GrayLevel[0.7], 
                 AbsoluteThickness[1.8], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAA3l5opg
ldw/ifaD+DItuD+MkCEodiHjP9qvjCs8v9E/bLbqGG2J5D+WRNoAzOrePxWI
hjT6cuM/qFFV1TM75j8YmI/Y7IHfP/eKfiNPOe0/quVYmD5o1D+ADmRmEGnx
P3eNjU0+TbI/IY3cLB+l8z/z/SDb3KDLv5a/pk3oyvQ/P80MS7g64L+H2H4K
a8b0P9+nsKVohOq/rTamnQZ68z/qrFzHBdfxv6YHIajkDPE/bw9qE5vX9b+Z
SUCP/i3rP/uMEvTgV/m/kzjs/r2F4T/bUNnDc5T7v9G7+cvEhMs/wYIqip+q
/L9jvEi/XoXHvxhoDlvsO/y/eOnDDXz84r8s6yb5EW/6v2qTREHJFe+/UEHO
hnD69r/GEyuZBq31v4JWinxOcPK/c9vQT8is+r8XVSwtro/ov0knBpVW9/6/
yZ09iVcE1b9l2NyAUeAAwDbV0T76Ar4/Y701SKBwAcCmV9X1r7fjP9Pdwu5B
LgHAhEmFnNot8T/aVnzNXBkAwIeJGWTe4Pc/Fl/LTVCK/L9n/YLkNTv+P27f
ThBa+/a/DjFFsd98AUAQoc+DuIDwv00y1JUAQgNAdLxOLvHB4L8FJ/Yfkw0E
QHdYowipHsa8z+n67g==
                  "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
                GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSOde+X6LwX2L+JEV934or//a9ba9rVPHto/qNs+
h/vZZfumRXKlmjWP7f94fAgTnPDcnk/kyM/O5Bf27XmKKav2f7HfXXOp8OzR
U/ZfddfwhpR8tH/Mf1NimfrD/bmrPms6/Ptsv6/iJO/vs5/3+3H82Z7G+Nqe
6/yMbVMP/dhfKsm+/u3U5/bzr9z7quHMeMBGKvy71POz+5PZdsQbTf23/7d6
VqJF6pf9/teV3u88/Hn/ux/vv2b//bTftGfJ25NKr/eXHb7jHVj0Y39nSUKD
+sIl9od7wyt357EeyI75vbEl+Jl9xCWXx0L8f/a7XHD6XCLA4HD6j8KD5/N+
7l/dca7ELo3ZwUXo+W6J9/f2j3T/AwAmeB/L
                 "], {{}, {
                   GrayLevel[0.5], 
                   PointSize[0.12], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 
                    32}]}, {}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}, 
             ImagePadding -> 0.2, PlotRange -> {{-3.1, 3.2}, {-3.5, 2.1}}, 
             PlotRangePadding -> Automatic, PlotRangeClipping -> True, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}}, {}, {{}, {}, {
                 GrayLevel[0.7], 
                 AbsoluteThickness[1.8], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAA3l5opg
ldw/ifaD+DItuD+MkCEodiHjP9qvjCs8v9E/bLbqGG2J5D+WRNoAzOrePxWI
hjT6cuM/qFFV1TM75j8YmI/Y7IHfP/eKfiNPOe0/quVYmD5o1D+ADmRmEGnx
P3eNjU0+TbI/IY3cLB+l8z/z/SDb3KDLv5a/pk3oyvQ/P80MS7g64L+H2H4K
a8b0P9+nsKVohOq/rTamnQZ68z/qrFzHBdfxv6YHIajkDPE/bw9qE5vX9b+Z
SUCP/i3rP/uMEvTgV/m/kzjs/r2F4T/bUNnDc5T7v9G7+cvEhMs/wYIqip+q
/L9jvEi/XoXHvxhoDlvsO/y/eOnDDXz84r8s6yb5EW/6v2qTREHJFe+/UEHO
hnD69r/GEyuZBq31v4JWinxOcPK/c9vQT8is+r8XVSwtro/ov0knBpVW9/6/
yZ09iVcE1b9l2NyAUeAAwDbV0T76Ar4/Y701SKBwAcCmV9X1r7fjP9Pdwu5B
LgHAhEmFnNot8T/aVnzNXBkAwIeJGWTe4Pc/Fl/LTVCK/L9n/YLkNTv+P27f
ThBa+/a/DjFFsd98AUAQoc+DuIDwv00y1JUAQgNAdLxOLvHB4L8FJ/Yfkw0E
QHdYowipHsa8z+n67g==
                  "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, 
                GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSOde+X6LwX2L+JEV934or//a9ba9rVPHto/qNs+
h/vZZfumRXKlmjWP7f94fAgTnPDcnk/kyM/O5Bf27XmKKav2f7HfXXOp8OzR
U/ZfddfwhpR8tH/Mf1NimfrD/bmrPms6/Ptsv6/iJO/vs5/3+3H82Z7G+Nqe
6/yMbVMP/dhfKsm+/u3U5/bzr9z7quHMeMBGKvy71POz+5PZdsQbTf23/7d6
VqJF6pf9/teV3u88/Hn/ux/vv2b//bTftGfJ25NKr/eXHb7jHVj0Y39nSUKD
+sIl9od7wyt357EeyI75vbEl+Jl9xCWXx0L8f/a7XHD6XCLA4HD6j8KD5/N+
7l/dca7ELo3ZwUXo+W6J9/f2j3T/AwAmeB/L
                 "], {{}, {
                   GrayLevel[0.5], 
                   PointSize[0.12], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 
                    32}]}, {}}], {}}, {}, {}, {{{}, {}, {}, {}}, {}}}}, 
             ImagePadding -> 0.2, PlotRange -> {{-3.1, 3.2}, {-3.5, 2.1}}, 
             PlotRangePadding -> Automatic, PlotRangeClipping -> True, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PrincipalComponentsAnalysis\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DimensionReducerFunction[<|
   "ExampleNumber" -> 3, "Imputer" -> 
    MachineLearning`MLProcessor[
     "ImputeMissing", <|
      "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
       "StructurePreserving" -> True, 
       "Input" -> <|
        "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
       "Fill" -> {8.39, 8.39, 88.58333333333333}, "Method" -> "Naive", 
       "VectorLength" -> 3, 
       "Output" -> <|
        "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
       "Type" -> "NumericalVector"|>], "RandomImputer" -> 
    MachineLearning`MLProcessor[
     "ImputeMissing", <|
      "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
       "StructurePreserving" -> True, 
       "Input" -> <|
        "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
       "Mean" -> {8.39, 8.39, 88.58333333333333}, 
       "StandardDeviation" -> {0.16872067646452027`, 0.10424330514063582`, 
        1.067624569885122}, "Method" -> "NaiveSampler", "VectorLength" -> 3, 
       "Output" -> <|
        "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
       "Type" -> "NumericalVector"|>], "Preprocessor" -> 
    MachineLearning`MLProcessor[
     "ToMLDataset", <|
      "Input" -> <|
        "Aroma" -> <|"Type" -> "Numerical"|>, 
         "Flavor" -> <|"Type" -> "Numerical"|>, 
         "Total.Cup.Points" -> <|"Type" -> "Numerical"|>|>, 
       "Output" -> <|
        "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
         "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
         "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, "Preprocessor" -> 
       MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
            MachineLearning`MLProcessor[
            "FromNamedFeatures", <|
             "FeatureNames" -> {"Aroma", "Flavor", "Total.Cup.Points"}|>], 
            MachineLearning`MLProcessor[
            "Transpose", <|"FeatureNumber" -> 3|>], 
            MachineLearning`MLProcessor[
            "WrapMLDataset", <|
             "FeatureTypes" -> {"Numerical", "Numerical", "Numerical"}, 
              "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
              Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
              Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
              False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
       "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
    "Processor" -> 
    MachineLearning`MLProcessor[
     "ToVector", <|
      "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
       "StructurePreserving" -> True, 
       "Input" -> <|
        "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
         "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
         "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
       "Output" -> <|
        "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
    "Model" -> <|
     "Matrix" -> {{-0.5336268501686392, 
       0.8446305589505104}, {-0.6007593716220624, -0.34285998832909537`}, \
{-0.5952567195650642, -0.41115234073263024`}}, "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
         "Output" -> <|
          "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>|>, 
             "Mean" -> {8.39, 8.39, 88.58333333333333}, 
             "StandardDeviation" -> {0.16872067646452027`, 
              0.10424330514063582`, 1.067624569885122}, 
             "Output" -> <|
              "(f1f2f3)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 3|>|>|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3|>, "Key" -> 
             "(f1f2f3)", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "FinalDimension" -> 2, "Padder" -> 
      MachineLearning`MLProcessor["Identity"], "Method" -> 
      "PrincipalComponentsAnalysis"|>, "PerformanceGoal" -> Automatic, 
    "Invertibility" -> "Approximate", 
    "Log" -> <|
     "TrainingTime" -> 0.0127025, "MaxTrainingMemory" -> 113272, "DataMemory" -> 
      1768, "FunctionMemory" -> 28728, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2022, 4, 18, 22, 13, 31.233924`9.24720145382209}, "Instant",
         "Gregorian", 1.], "ProcessorCount" -> 6, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.859288302646118*^9, {3.8592885480987597`*^9, 3.8592885577148447`*^9}, 
   3.859288627383393*^9, {3.8592889647368145`*^9, 3.8592890043770657`*^9}, {
   3.859289037201343*^9, 3.8592890417527695`*^9}, 3.859289078754943*^9, {
   3.8592893418167133`*^9, 3.859289397373578*^9}, {3.8592894341316323`*^9, 
   3.8592894629894915`*^9}, {3.8592910756235228`*^9, 
   3.8592911196525507`*^9}, {3.859291772502641*^9, 3.8592917961250105`*^9}, {
   3.85929183293198*^9, 3.8592918451017156`*^9}, {3.859292017516514*^9, 
   3.859292025418949*^9}, {3.859292057701563*^9, 3.8592921074642706`*^9}, {
   3.859292138233555*^9, 3.8592922166636457`*^9}, {3.8592989237167253`*^9, 
   3.8592989621525855`*^9}, 3.859301894013642*^9, {3.8593040977664385`*^9, 
   3.8593041754566174`*^9}, {3.859304208452129*^9, 3.8593042151983967`*^9}, 
   3.859304313337719*^9, {3.8593043444897385`*^9, 3.8593043776590815`*^9}, 
   3.859304430299829*^9, {3.8593044631869235`*^9, 3.8593044683926177`*^9}, 
   3.859304513347677*^9, 3.8593047459299903`*^9, 3.8593049284943666`*^9, 
   3.8593051519514065`*^9, {3.8593051840762577`*^9, 3.859305211265924*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"2fa59543-bd19-4693-83a1-81711ee89462"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dGdataSAByType", " ", "=", 
  RowBox[{"dGdataSA", "/@", "GdataSA"}]}]], "Input",
 CellChangeTimes->{{3.859288966907839*^9, 3.859288971551379*^9}, 
   3.859289279607995*^9, {3.8592894731521187`*^9, 3.859289484763363*^9}, 
   3.859292199197431*^9, 3.8592923303654685`*^9, {3.8593044824491215`*^9, 
   3.859304530768334*^9}, {3.859313892370365*^9, 3.8593138933359766`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"d9b93824-4a20-4d44-bce2-19da87e1ddc6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|Entity["Country", "Guatemala"] -> CompressedData["
1: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
Bf4HbVE/gw==
        "], Entity["Country", "Brazil"] -> CompressedData["
1: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
H4PQxlc=
        "], Entity["Country", "Mexico"] -> CompressedData["
1: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
FIJKeb8yPndNMFT6kPJPgCT8H80x0a8=
        "]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 5, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Country"]], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 2], TypeSystem`AnyLength], 3], "Meta" -> <||>,
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 5, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Country"]], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 2], TypeSystem`AnyLength], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Guatemala\""], 
                  Style[
                   RawBoxes["\"Guatemala\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-1.3792968604816112`, -0.6609057152381347}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-1.3792968604816112`, -0.6609057152381347}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{4.758001470048169, -0.30758529003645146`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{4.758001470048169, -0.30758529003645146`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 2}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{5.553875636667773, -0.4603504759613227}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{5.553875636667773, -0.4603504759613227}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]], 3}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 3}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{5.016202564050944, 0.3906844892273166}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{5.016202564050944, 0.3906844892273166}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]], 4}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 4}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{6.1799133671031035`, 1.076906745036827}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{6.1799133671031035`, 1.076906745036827}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]], 5}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]], 5}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["181 total \:203a ", ""], 
                  Style[
                   Superscript["181 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Guatemala"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Guatemala"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Brazil\""], 
                  Style[
                   RawBoxes["\"Brazil\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-0.9113498359935207, 0.7574919731484141}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-0.9113498359935207, 0.7574919731484141}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-0.05444598326560137, 0.8294411497426418}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-0.05444598326560137, 0.8294411497426418}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{2.126136727874291, 2.10737778441697}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{2.126136727874291, 2.10737778441697}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]], 3}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 3}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{4.750005644297705, 1.3739051157285394`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{4.750005644297705, 1.3739051157285394`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]], 4}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 4}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{3.9593099492729547`, 2.6254271233588917`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{3.9593099492729547`, 2.6254271233588917`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]], 5}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]], 5}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["132 total \:203a ", ""], 
                  Style[
                   Superscript["132 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Brazil"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Brazil"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Mexico\""], 
                  Style[
                   RawBoxes["\"Mexico\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{2.29064669647514, -0.09658625791028792}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{2.29064669647514, -0.09658625791028792}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{6.01664418956101, -0.14070960928025517`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{6.01664418956101, -0.14070960928025517`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{4.752275252510503, -0.24929781462627104`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{4.752275252510503, -0.24929781462627104`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]], 3}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 3}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{6.314271009838157, -0.5103878934876493}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{6.314271009838157, -0.5103878934876493}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]], 4}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 4}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{8.621117473262577, 1.3677716584306412`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{8.621117473262577, 1.3677716584306412`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]], 5}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]], 5}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["236 total \:203a ", ""], 
                  Style[
                   Superscript["236 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["Country", "Mexico"]]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["Country", "Mexico"]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{236., {238.13403309800196`, 243.86596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{236., {238.13403309800196`, 243.86596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.859292199508895*^9, 3.8592922185771947`*^9}, 
   3.859292330710661*^9, {3.8592989535140986`*^9, 3.859298963573208*^9}, {
   3.859304478189087*^9, 3.859304531369754*^9}, 3.8593049314738503`*^9, 
   3.859305219177117*^9, 3.859313893966784*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"4a1c2425-81ad-440b-bb12-738d0a378b2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "dGdataSAByType", "]"}]], "Input",
 CellChangeTimes->{{3.859289494555602*^9, 3.8592895012626295`*^9}, {
  3.859292268801459*^9, 3.85929235493221*^9}, {3.8592989706378007`*^9, 
  3.859298976750764*^9}, {3.8593052242129917`*^9, 3.8593052247677174`*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"b1413168-f5b8-4a23-82b9-d92a0ce169ad"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
Bf4HbVE/gw==
         "]]}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxlVWk01P8eHoaSmSlKlGsZzGrsI0vi+yFLdjUqlbhli4SUpW6yptJGpbIk
EpUlFAnVr2sn4t+fESl7lrJkHQZd9+29L57znOec5zzn+ZzPi0fhuP8+D0Ec
Dhezhv8yqS1JoY45jh2cO/vJ1XAE/X2GSHDqzcUqDKOV6+PGEPuIyCJHUABM
pXf3j3zFQZt1/XkB3BZwrjOciObPoetcblFO3iao6Y6d7MEJg+lKnK1azkZ4
uE9mzyXKH3QoWzQ1b0kCRlvP7p+/0Yem8Ne9Qsa2QmreE8Pl8h9IjW5OgCkp
MM9Vb/AXn0KWIQ/IlG2SUMmqHXApHUaXj5HYJl2SYHOljSo48hOdTOdMjsaK
wW4Js/O7cASII1RuvdYqC6HyTercM/3Id1HU/tMFGWhxvrSv7/U64PP0NHxM
tkLUiUCSlswK+mPpOLdyQgrKd6z4vl6eQPrskgT9LjLgiqQlC9IbEH7XNYfR
cDIUtxq76fn1YneCGe0BhWT4ZhoU05zbjS3Ye+7v01aEZGO9jOb3fRj1n84y
bo8UIeB2g8jYzwokZFOtu66TCgthwXGBHjOYdYR5/AH6mp+t9tpeaAANJxcy
5K4owpvBYhM7Qzy8iXyRYPpADrQCfD/0f/qJeGVNv1SMFKHqpb3zS9wger87
y2X4AhkMT/Pv2j34gPyWGSKvlhTApuisx/TdfMy0/R41EKcE/gZpxKg3nxDh
xl75m2v9tSlSX689nUGrIoNCnWOK4Mt9VWqZtoC5HjtlBb8VwOd4cu38YD+m
Eg1u2S5K8DV4oNfvYgfK6XoZ4WytCIdyVW4Fhs2g30aWOT41VNBP0ujUrVhC
ByT0v2kdV4RxH8P+TP4MqpHLfxHqpAj2ha9uLCrjQf9RQmzrQQq4Mj6kdI8v
o6FB/0a/q4oghUYeecC/UV5AT8q7BxRo0R9qP+cwjPBqTTw8hQolS7TWCe0x
zMz2kan5bQosOUzmSt7twLgkjRXxUgVgun48Wskvxayj3o5npFCh57d9oprz
FJINrKWRNanwvic1nsLjIlWsOjCeTgGpVTF54vZClCupG28uoQTrKxo0W4zG
EVfgy1arVCWQVV6QMKteRBZ4LD1PmwKUGpadeNcMikmV96V0M2BCCy1KaS1g
LCFu/VE7ChSnpn0UOTGLNkdxvvuvKoDUFWN/voEHsnkPK9fcaSCxR8zIYvkH
EiYHuDveokK/nubJfdI9/6fZGp4s7iIVGCJzhHL3aXQ+3XFX3k06lKW/sJXb
Vo6NkC9fF35OhQTrixrbnveiOw8Ss/IFGUBy4h2yLxhEkpphnMtbaFDW43W1
aHoaXdZy/z6aS4OLc3qX+GJjyHqpmhisSocmJ4HM4xFdiHdM9Xd+DA3qvnVP
SXSvIh7b2tvGlA4yB00n6ee6UYg3+8cJAhWeVksfzTVbxa5v13S7Z02BLhPS
r9eLQ8jFS3OObasMDSq4GZfEKjTO5zPHVKlgfM8oOqgWB0lbb5lVTNLBe6M4
YfLVQ9RCLIslWDEgRFghA189jKROCbid7qZBlRLQbJm/0Gylq97JdBnYjiu/
2OpOhK/axxNWjtLhYMmmIeGi78jtfbmRr4YsvLOgOUU8b0L7stK1hw7TwE9n
OY8QNotcmy1Rhx8VRDMK9ltbTKHV77SEitM0EJwn4gz5syhr4JapTjgVCOKV
We94z7A4F5Myt0AKgFpxOMdtFdnRMocnZ9b+ueGLx8TSAmJE1KA3IQyow7uP
178dRa2Fs8F7GpiQHVtFbGwS+JC7LX884QoN7pXIcvzOzSHqX2phtmU0yChX
kzyFb0P+xZUzDsksiLztlf+vyD7Un4W32q3BhMdDFlU+mxZRml5v514nGpRe
q5EO/tiJVfUTWjTf0sF4/eeeJO8B9L96J8cqcPta/hubDKX7l+YR5+lYW1Y9
E55HXFjWoc6gMFMDnaUfNDAoLX6xMNuBOLLPOWW/6BC7ozPiZ+QQelYC/pGJ
DHjc6bqJND+GBXPMtXl5KlBb3SfaOSUCcrTwzd636fAkZPZinEUWFhiVE5Q7
qwiZLpblD9fzkNqZMJfOtXtV1Uu/fE5ux2SVm13Fz6vA8s/p5vjov1BufAnR
U5oBf7NlmgvPDyMn7h0HIRsaMEk+gpNiE5iCePLgu+3KcJikq7sppxJFeysp
U8lM6Im1NRCLnEIvDRK02y3oQFlq8LFOXkQ+X/c4+ZcwYNVn57NsrwWUNST8
OHKGAWJyLG285Rfkne/ZSgpiwjrjg9pbriZiGvrcDOcYFggE7GmTcuxHczjd
1hFhFXiSAlE6pFq0xVNvuotEhwMdlEY7kSlUdLkiVH0LC0Id2sfxjaWY1F5O
tXoiE94544Wb18+g9UL7Q7E0ZWiO0fcyq15AAZXPbtXnMuClkdQRCzYORDFu
W9onFThcxwooaF3bi5amFLK+KqQ8NGKGrVtC93r5mXQ3CjSv7HQJfTuPqsnr
dnktsqDiH8VeCceGUdIOj9dup1mgweDxPMMyEJF/ePDKfVUoYKVGJ0kMoc3Z
OkRetQpsnN9Qi7x4yLFmg9NOtgooP1KILkr9g+JbajNsTqvAqYUB+/s3fyG5
s7qEM47KYJ1RIJPDWEAJBOsinZ2qUHXE0S3ycz8Snk8kd5moQ9NkrcZY7zQ6
EB5UF5SqBTVafP/RzCGktrdE+lsHG07Jq2npPRSCbKJ8pruHGjQ2yojOjYmC
LFfZoFCcDRDyeP5DOAHsOro2WgXqAMk5u8BUbxsUa7ct/HHXgbrFcyGqxM3w
H4PQxlc=
         "]]}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
FIJKeb8yPndNMFT6kPJPgCT8H80x0a8=
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.3792968604816112`, 
      28.758814658654305`}, {-2.22499475452135, 5.409198187381106}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Guatemala\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Brazil\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Mexico\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\""}, 
        "EntityTraditionalFramed"]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.859289501868687*^9, 3.859291171484376*^9, 3.859291799743809*^9, {
   3.859291839373582*^9, 3.8592918483243484`*^9}, {3.859292019816642*^9, 
   3.8592921094439754`*^9}, {3.859292140375265*^9, 3.859292221061866*^9}, {
   3.859292269668064*^9, 3.859292300117948*^9}, {3.8592923389706926`*^9, 
   3.8592923553798676`*^9}, 3.8592989776583576`*^9, 3.859304533960477*^9, 
   3.8593049342215576`*^9, 3.859305230143524*^9, 3.859313897672854*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"0e300176-5888-4371-98e4-8bbf060401aa"]
}, Open  ]],

Cell["\<\
Seems not dissimilar to that of our 3D plot, including the data being quite \
intertwined. Let\[CloseCurlyQuote]s try Linear Fitting SVMs:\
\>", "Text",
 CellChangeTimes->{{3.8593092310673323`*^9, 
  3.8593092733327928`*^9}},ExpressionUUID->"f6ac8d74-d77f-4c9d-b81a-\
5b3ae45a6d1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFitting", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"Normal", "[", "dGdataSAByType", "]"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
       RowBox[{"\"\<KernelType\>\"", "->", "\"\<Linear\>\""}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.859290254237414*^9, 3.8592903041838527`*^9}, {
  3.859292374483979*^9, 3.859292379117196*^9}, {3.859299740014368*^9, 
  3.859299742681879*^9}, {3.8593045519009175`*^9, 3.8593045530583134`*^9}, {
  3.859304635516102*^9, 3.859304644832672*^9}, {3.8593050199594407`*^9, 
  3.8593050518431273`*^9}, {3.8593052437187996`*^9, 3.8593052522692733`*^9}, {
  3.859305678531719*^9, 3.8593056800613594`*^9}, {3.8593057131108294`*^9, 
  3.8593057230168257`*^9}, {3.859305759836006*^9, 3.8593057858560038`*^9}, {
  3.8593058968353653`*^9, 3.8593059014879155`*^9}, {3.8593059361998644`*^9, 
  3.8593059445135164`*^9}, {3.859306051055646*^9, 3.859306190603963*^9}, {
  3.8593066645200896`*^9, 3.859306691108983*^9}, {3.859306784743312*^9, 
  3.859306794789556*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"8bc79214-d77a-4407-8224-da058d989573"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Guatemala\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Mexico\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                    "\"country\""}, "Entity"]}, "RowWithSeparators"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Guatemala\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Mexico\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                    "\"country\""}, "Entity"]}, "RowWithSeparators"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["549", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 549, "ClassNumber" -> 3, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Length" -> 2|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 549, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 2|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> MachineLearning`MLProcessor["Identity"], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{-0.9810015921630049, 
                   0.19399968085965902`}, {-0.19399968085965902`, \
-0.9810015921630049}}, 
                  "Precisions" -> {0.05727573320108471, 0.8396014343132339}, 
                  "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {12.043517106219792`, 1.3442456354164372`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 1644352530978073028|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 2, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {12.043517106219793`, 1.344245635416437}, 
                    "StandardDeviation" -> {4.104525202538504, 
                    1.3428757552479051`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 2, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {12.043517106219793`, 1.344245635416437}, 
                   "StandardDeviation" -> {4.104525202538504, 
                    1.3428757552479051`}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                   4747808072524423015|>], "InputDimension" -> 0, 
                "OutputDimension" -> 2, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> {{11.8414168433829, 1.1085047013157079`}}, 
                    "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.0556909, "MaxTrainingMemory" -> 203224, 
                  "DataMemory" -> 11680, "FunctionMemory" -> 29504, 
                  "LanguageVersion" -> {13., 1}, "Date" -> 
                  DateObject[{
                    2022, 4, 19, 0, 38, 22.9789974`9.113906005153803}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.8396461258311305`, -3.8396461258311305`, \
-3.3024767386380964`, -2.951794962930273, -2.6382522737111236`, \
-2.402244922552804, -2.374505735777525, -2.062286937641291, \
-2.024040133657473, -1.9837106284362171`, -1.7048387644785408`}, 
                   "LeftBoundary" -> -3.3024767386380964`, "LeftScale" -> 
                   0.26858469359651704`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[5.056759444730894, 0.4214298645918625], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
             "ID" -> 895810465636885430|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {12.043517106219793`, 1.344245635416437}, 
             "StandardDeviation" -> {4.104525202538504, 1.3428757552479051`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 8168166951674565608|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 2243861272990366060|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               Entity["Country", "Brazil"] -> 1, 
                Entity["Country", "Guatemala"] -> 2, 
                Entity["Country", "Mexico"] -> 3|>}, "MissingCode" -> 0, 
             "Version" -> {13., 1}, "ID" -> 2652975377468253999, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {3}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 1174657711523402568|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       Entity["Country", "Brazil"] -> 0.24094202898550726`, 
        Entity["Country", "Guatemala"] -> 0.32971014492753625`, 
        Entity["Country", "Mexico"] -> 0.42934782608695654`|>|>, 
    "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["AssociationSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "SVMParameters" -> <|
       "KernelType" -> "Linear", "GammaScalingParameter" -> 
        0.038835662322811215`, "SoftMarginParameter" -> 1., 
        "PolynomialDegree" -> 3, "BiasParameter" -> 1, "MulticlassStrategy" -> 
        Automatic, "Shrinking" -> True, "KernelCacheSize" -> 100|>, 
      "TrainedModel" -> {<|"supportVectors" -> CompressedData["
1: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
1Sz8H9/BRas=
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGDgBRFg8MF+lB6lR+lRGge9f6TQq531Z/Ox3xhwd1CLvml3
pJqb4/WAu4Pa9ByW9wKX7h/ef22HlGJk5Ru622+zPLhZ7ugTDPFlDq9qW0Oe
wfkKj+uFzvhdwmnOCnthy1tt2+jufoffEa/7/XroZh8A2/mcCg==
          "], "rho" -> 0.9985839991421955|>, <|
        "supportVectors" -> CompressedData["
1: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
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGDgBxFg8MF+lB6lR+lRGge9n1TahOv+gmXmb0nWR4he9u+T
46Vl56hu7mClV2pqaU6U30t1czmtC+Mvh1ym2ByWRp/YNwEviVb//vfZLr89
p3DKH+AQivObtHXAwrtnKtvXUuY7VDe34MkuZRPbq2TrX+w6tf5w+N0BT48w
ul3DqEVF5CTJ+uI1zjjs73m7HwAkXadP
          "], "rho" -> 1.0026966662509817`|>, <|
        "supportVectors" -> CompressedData["
1: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
oZM=
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGAoARFg8MF+lB6lR+lRepQe1PT+G95yV5k5n+6H8Umlp2Q9
vnpu2u39zjIbWd5KI8yp2qZ/XfH4FZLNa0y4furRrlc45ddZfRF4XvwCp3xl
07ottir9+9f8tXXP7D+DU903V13O/Ob3ZPtb+v6ptwb7HsL5BzJ/HUxOfEO2
eQNFP2k9vP/A/iMD7o6pDQbrVO/gjldc9J/aRVdKRI6Sbe/notBtiUKPBtz/
NzV2Byg73BpwdzydbqDGf5v88gCdvvNo/caqrbvo7g+ZP/NNnwbfGPDwJETH
Capd4tlKv3gHAOfaVw0=
          "], "rho" -> 1.000078761269944|>}, 
      "ProbabilityCoefficients" -> {{0.3917318880558014, 
       0.766183614730835}, {-1.0896885395050049`, 0.19392094016075134`}, {
       0.1838226318359375, 0.6326447129249573}}, "MulticlassStrategy" -> 
      "OneVersusOne", "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "SupportVectorMachine", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "KernelType" -> <|"Value" -> "Linear", "Options" -> <||>|>, 
        "GammaScalingParameter" -> <|
         "Value" -> 0.038835662322811215`, "Options" -> <||>|>, 
        "SoftMarginParameter" -> <|"Value" -> 1., "Options" -> <||>|>, 
        "PolynomialDegree" -> <|"Value" -> 3, "Options" -> <||>|>, 
        "BiasParameter" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "MulticlassStrategy" -> <|
         "Value" -> "OneVersusOne", "Options" -> <||>|>, 
        "Shrinking" -> <|"Value" -> True, "Options" -> <||>|>, 
        "KernelCacheSize" -> <|"Value" -> 100, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "PanelCell" -> CellObject[4124193], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1573775`6.648487635595723, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[1.1544201277314137`, 0.037397988872020095`], "Accuracy" -> 
         Around[0.4108188148859787, 0.03147646832868331], "EvaluationTime" -> 
         0.000014384412214303344`, "TestSize" -> 479, "ModelMemory" -> 34024, 
         "ModelUtility" -> -0.843221591063072, "TrainingSize" -> 70, 
         "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 141856, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.1544201277314137`, 0.02644437153414445]}, 
         "AccuracyHistory" -> {
           Around[0.4108188148859787, 0.022257224203015562`]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "Linear", 
           "GammaScalingParameter" -> 0.038835662322811215`, 
           "SoftMarginParameter" -> 1., "PolynomialDegree" -> 3, 
           "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
           "Shrinking" -> True, "KernelCacheSize" -> 100}, 
         "FinalTrainingSize" -> 549|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.1364704906308407|>, 
             "SoftMarginParameter" -> <|"Value" -> 3|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[2.010940412732184, 0.12665557094155855`], "Accuracy" -> 
              Around[0.3188337167717892, 0.028001036448020416`], 
              "EvaluationTime" -> 0.000012107288460413018`, "TestSize" -> 539,
               "ModelMemory" -> 15848, "ModelUtility" -> -1.4042814496192628`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 110312, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.010940412732184, 0.08955901308782988]}, 
              "AccuracyHistory" -> {
                Around[0.3188337167717892, 0.019799722752646912`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2005816047384208`, 0.048844568455571225`], "Accuracy" -> 
              Around[0.37310003933249014`, 0.03942696879875162], 
              "EvaluationTime" -> 0.00008706288105031932, "TestSize" -> 300, 
              "ModelMemory" -> 34024, "ModelUtility" -> -0.8840753060915112, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.1, "TrainingMemory" -> 
              186928, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.2005816047384208`, 0.034538325579064943`]}, 
              "AccuracyHistory" -> {
                Around[0.37310003933249014`, 0.027879076999227696`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2261743520545914`, 0.07505954889426071], "Accuracy" -> 
              Around[0.3708606996560791, 0.06468488850488636], 
              "EvaluationTime" -> 0.000020144095790375505`, "TestSize" -> 110,
               "ModelMemory" -> 149544, "ModelUtility" -> -0.9092597185336829,
               "TrainingSize" -> 439, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 680608, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2261743520545914`, 0.05307511601593497]}, 
              "AccuracyHistory" -> {
                Around[0.3708606996560791, 0.0457391233021009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000020144095790375505`, "MeanCrossEntropy" -> 
             Around[1.2261743520545914`, 0.07505954889426071], "ModelMemory" -> 
             149544, "TrainingMemory" -> 680608, "TrainingTime" -> 
             0.14200133401968806`|>, "Index" -> 1|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.038835662322811215`|>, 
             "SoftMarginParameter" -> <|"Value" -> 1.|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.6841157861858222`, 0.0898732523815203], "Accuracy" -> 
              Around[0.31272777401526947`, 0.027823846859185708`], 
              "EvaluationTime" -> 0.000012998323310619032`, "TestSize" -> 539,
               "ModelMemory" -> 16104, "ModelUtility" -> -1.2250182216548628`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 114672, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.6841157861858222`, 0.06354998620626304]}, 
              "AccuracyHistory" -> {
                Around[0.31272777401526947`, 0.019674430792826235`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1544201277314137`, 0.037397988872020095`], "Accuracy" -> 
              Around[0.4108188148859787, 0.03147646832868331], 
              "EvaluationTime" -> 0.000014384412214303344`, "TestSize" -> 479,
               "ModelMemory" -> 34024, "ModelUtility" -> -0.843221591063072, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 141856, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1544201277314137`, 0.02644437153414445]}, 
              "AccuracyHistory" -> {
                Around[0.4108188148859787, 0.022257224203015562`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2215966926712967`, 0.07382601159699027], "Accuracy" -> 
              Around[0.3708606996560791, 0.06468488850488636], 
              "EvaluationTime" -> 0.000014826884949819936`, "TestSize" -> 110,
               "ModelMemory" -> 145320, "ModelUtility" -> -0.9053642561434059,
               "TrainingSize" -> 439, "TrainingTime" -> 0.15848931924611134`, 
              "TrainingMemory" -> 679168, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2215966926712967`, 0.052202873428188516`]}, 
              "AccuracyHistory" -> {
                Around[0.3708606996560791, 0.0457391233021009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000014826884949819936`, "MeanCrossEntropy" -> 
             Around[1.2215966926712967`, 0.07382601159699027], "ModelMemory" -> 
             145320, "TrainingMemory" -> 679168, "TrainingTime" -> 
             0.23801262198955273`|>, "Index" -> 2|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.9199784106546636|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.1|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.3958153693624844`, 0.058541705090969925`], "Accuracy" -> 
              Around[0.3626515385336169, 0.028794015763473308`], 
              "EvaluationTime" -> 0.000013759676042544387`, "TestSize" -> 539,
               "ModelMemory" -> 16104, "ModelUtility" -> -1.034992984783489, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 115528, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3958153693624844`, 0.04139523665204786]}, 
              "AccuracyHistory" -> {
                Around[0.3626515385336169, 0.02036044380394432]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1639215509786291`, 0.038413511437669634`], "Accuracy" -> 
              Around[0.4155085367382057, 0.031619855598224056`], 
              "EvaluationTime" -> 0.000014928722527050509`, "TestSize" -> 479,
               "ModelMemory" -> 34024, "ModelUtility" -> -0.8515391979172481, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 143040, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1639215509786291`, 0.0271624544267632]}, 
              "AccuracyHistory" -> {
                Around[0.4155085367382057, 0.022358614313643648`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2166811389689978`, 0.07262035649163526], "Accuracy" -> 
              Around[0.3708606996560791, 0.06468488850488636], 
              "EvaluationTime" -> 0.0000688045350599645, "TestSize" -> 110, 
              "ModelMemory" -> 143080, "ModelUtility" -> -0.9011842124958072, 
              "TrainingSize" -> 439, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 692912, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2166811389689978`, 0.05135034652741981]}, 
              "AccuracyHistory" -> {
                Around[0.3708606996560791, 0.0457391233021009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0000688045350599645, "MeanCrossEntropy" -> 
             Around[1.2166811389689978`, 0.07262035649163526], "ModelMemory" -> 
             143080, "TrainingMemory" -> 692912, "TrainingTime" -> 
             0.129024322934396|>, "Index" -> 3|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.21546514991338261`|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.1|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           4|>, <|"Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.5576165314425816|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.4|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           5|>, <|"Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.14634164834301067`|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.4|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.160557461199426, 0.03811393954327864], "Accuracy" -> 
              Around[0.41080964861015684`, 0.031511983415080005`], 
              "EvaluationTime" -> 8.024673495313733*^-6, "TestSize" -> 479, 
              "ModelMemory" -> 34024, "ModelUtility" -> -0.8486124201086382, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 142056, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.160557461199426, 0.026950625108786427`]}, 
              "AccuracyHistory" -> {
                Around[0.41080964861015684`, 0.02228233716144109]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2248205160547176`, 0.0746292457080196], "Accuracy" -> 
              Around[0.3708606996560791, 0.06468488850488636], 
              "EvaluationTime" -> 0.000013647156669338835`, "TestSize" -> 110,
               "ModelMemory" -> 145128, "ModelUtility" -> -0.9080979132793723,
               "TrainingSize" -> 439, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 681888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2248205160547176`, 0.052770845714977706`]}, 
              "AccuracyHistory" -> {
                Around[0.3708606996560791, 0.0457391233021009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000013647156669338835`, "MeanCrossEntropy" -> 
             Around[1.2248205160547176`, 0.0746292457080196], "ModelMemory" -> 
             145128, "TrainingMemory" -> 681888, "TrainingTime" -> 
             0.14200133401968806`|>, "Index" -> 6|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.826168274352574|>, 
             "SoftMarginParameter" -> <|"Value" -> 3|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.1545177557592878`, 0.03759580420793429], "Accuracy" -> 
              Around[0.41327986984199827`, 0.03158307555635314], 
              "EvaluationTime" -> 8.881394001592996*^-6, "TestSize" -> 479, 
              "ModelMemory" -> 34024, "ModelUtility" -> -0.843339653404702, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 185432, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1545177557592878`, 0.026584248099592075`]}, 
              "AccuracyHistory" -> {
                Around[0.41327986984199827`, 0.022332606896624394`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2261743520545914`, 0.07505954889426071], "Accuracy" -> 
              Around[0.3708606996560791, 0.06468488850488636], 
              "EvaluationTime" -> 0.000014826884949819936`, "TestSize" -> 110,
               "ModelMemory" -> 149544, "ModelUtility" -> -0.9092597132164721,
               "TrainingSize" -> 439, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 680680, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2261743520545914`, 0.05307511601593497]}, 
              "AccuracyHistory" -> {
                Around[0.3708606996560791, 0.0457391233021009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000014826884949819936`, "MeanCrossEntropy" -> 
             Around[1.2261743520545914`, 0.07505954889426071], "ModelMemory" -> 
             149544, "TrainingMemory" -> 680680, "TrainingTime" -> 
             0.1583384230440969|>, "Index" -> 7|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.12507571093315706`|>, 
             "SoftMarginParameter" -> <|"Value" -> 1.|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           8|>, <|"Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.43356388732141626`|>, 
             "SoftMarginParameter" -> <|"Value" -> 1.|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.6841157861858222`, 0.0898732523815203], "Accuracy" -> 
              Around[0.31272777401526947`, 0.027823846859185708`], 
              "EvaluationTime" -> 7.697232222761643*^-6, "TestSize" -> 539, 
              "ModelMemory" -> 16104, "ModelUtility" -> -1.2250182163537717`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 114736, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.6841157861858222`, 0.06354998620626304]}, 
              "AccuracyHistory" -> {
                Around[0.31272777401526947`, 0.019674430792826235`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1557469950086976`, 0.03771999975892368], "Accuracy" -> 
              Around[0.41107994901099576`, 0.03154736107756202], 
              "EvaluationTime" -> 0.00001185830581160065, "TestSize" -> 479, 
              "ModelMemory" -> 34024, "ModelUtility" -> -0.844418281443446, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 142024, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1557469950086976`, 0.02667206761588987]}, 
              "AccuracyHistory" -> {
                Around[0.41107994901099576`, 0.022307352946484654`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2215966926712967`, 0.07382601159699027], "Accuracy" -> 
              Around[0.3708606996560791, 0.06468488850488636], 
              "EvaluationTime" -> 0.0000171807523297669, "TestSize" -> 110, 
              "ModelMemory" -> 145320, "ModelUtility" -> -0.9053642584972732, 
              "TrainingSize" -> 439, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 679232, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2215966926712967`, 0.052202873428188516`]}, 
              "AccuracyHistory" -> {
                Around[0.3708606996560791, 0.0457391233021009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0000171807523297669, "MeanCrossEntropy" -> 
             Around[1.2215966926712967`, 0.07382601159699027], "ModelMemory" -> 
             145320, "TrainingMemory" -> 679232, "TrainingTime" -> 
             0.13914698148897853`|>, "Index" -> 9|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Linear"|>, 
             "GammaScalingParameter" -> <|"Value" -> 0.2294584652672489|>, 
             "SoftMarginParameter" -> <|"Value" -> 3|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["Linear"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 549, 
      "PreprocessorEvaluationTime" -> 7.615625*^-6, "PreprocessorMemory" -> 
      43408, "InputDimension" -> 2, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.0717438713667762`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8593175054696768`17.339085498542744*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.3472259560000003, 
          "ElapsedTimes" -> 0.4939692, "ExperimentCounts" -> 4|>, <|
         "TrainingSizes" -> 70, "TimeBudgets" -> 0.4960370800000006, 
          "ElapsedTimes" -> 0.721646, "ExperimentCounts" -> 6|>, <|
         "TrainingSizes" -> 439, "TimeBudgets" -> 0.7086244000000003, 
          "ElapsedTimes" -> 0.8320048, "ExperimentCounts" -> 6|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{11.8414168433829, 1.1085047013157079`}}, "ID" -> 
           6515543852639189880|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 2.6622748, 
      "MaxTrainingMemory" -> 1371712, "DataMemory" -> 10688, "FunctionMemory" -> 
      378224, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2022, 4, 19, 0, 38, 25.5766775`9.160419048403876}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8592903132375555`*^9, 3.859291205848959*^9, {3.85929236910312*^9, 
   3.8592923834213705`*^9}, 3.8592990989047704`*^9, 3.8592999135165553`*^9, 
   3.8593045585238075`*^9, {3.8593046376806607`*^9, 3.8593046475324383`*^9}, {
   3.859305025325097*^9, 3.859305052394723*^9}, {3.8593052335800943`*^9, 
   3.8593052632014513`*^9}, 3.8593056804701366`*^9, {3.859305715248501*^9, 
   3.8593057261325507`*^9}, {3.8593057710924597`*^9, 3.8593057885452676`*^9}, 
   3.859305901905929*^9, {3.8593059384484653`*^9, 3.8593059470934315`*^9}, {
   3.859306052929533*^9, 3.859306118997388*^9}, {3.8593061514698415`*^9, 
   3.8593061681094055`*^9}, 3.8593062763668375`*^9, {3.859306669441397*^9, 
   3.8593066851243005`*^9}, {3.859306787307677*^9, 3.8593067973899946`*^9}, 
   3.8593139057696767`*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"bb0b0f74-8bae-4529-a69a-9809326a063e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"LinearFitting", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<Brazil\>\""}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "25"}], "}"}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "False"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightOrange", ",", "LightGreen"}], "}"}]}], 
     ",", 
     RowBox[{"Contours", "\[Rule]", "3"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "dGdataSAByType", "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvevFNhnmg28cLS42KYDorZk5piA6qMvNHkTHHd3T
CZbfxtEFos+lrZFhAdJLlFPkQXRIeEc2O5DeEbGrHER7eMWfAdEXRDvAdLHn
Cz4ukLl5hsIgOiwoSApEr0iJkAPRdg1pDiD6bcRUVxAdoJWcBqL1N+hkguhX
mc+KQHRzYEcxiI55q1YPovdODgfTJ86GLQDRdwLqwPR/t8BVINpietxaED3v
s+IzEO1mswRM1yXNegOi1/00egui1U7k/QbRFQ/D/4PN0/3Lyg2kmbaVsINo
Nt9P2iBapZLTEkSH2as6gOgia2V/EC13c/NCPiB9a7fkIhAtofRsKYie9OPu
ChANACnIq7c=
  "],
 CellLabel->
  "In[222]:=",ExpressionUUID->"0a54ebe0-29a6-46e9-80b3-a3c1601d7724"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
dNzOFhxNyJ03r3DaM/038b84tGvN0XOX/0wfMzqbv7Lm+BzvLCHdXTsqbKtf
JV9xfamFd3uO9APaOIytrODDxbsj2npyFBQx0yN5giXNWdnWp88HIfnn7upz
v38LEn463vidkqPFl+677r7aghr+/bVTVx1HZYOtYpetaUU3bUUZ62qFFPbs
3MIHhvMrDlHEPwrgKOD8WNdDq9rQio0W/db2MejvVE3KnvINnezgF1c+jKPw
YeGOHw+50tNgSaJtMEfuu7Kmf9wlpOCPVp97TeOM1o36XywoTp3F0dEudi0C
4t0pyOrVsZuLOaP1pJrH+SN/WcaRhYfDnvAoKZ1v6fM6dXAFn7lrT9SCZh0o
J+XXd9m7K/hXq292m5jvTeebOF3+KZEz2g704tK1Q+vXc9S+k3bg1KneZJ1T
2zjRqpK3+FJLiUKO3l88HmM1oJL/61jSKZtpCir94aPjpL2cyQYv6/Tk8m+G
eLqOt2vXQUFpk0+vKDxZyUfFjHo7Y4uS9o+7EhtdVcm/3jQ3b9hYX7qz5XBy
5FmO8voN/6tLtpLGfW56RXiOo7uNqrfOFPlSxRuvyrthVfys7Yk2B/aqyHqL
Vech+6r4ASf5tNVD1dRGfWBoxh2Omm/+e/+4PBX9uKfliH13OfruwA+D/2ir
pm75K776C6v548GZ8ZZHNdRz38YPkUOr+bj5ft+mBPpRhr3So/NLjnJXbbTb
/klDnXr7LhrxiqPxT0K/vW/tR83np/lIHlXzQVefjJ9zTktDdr7OK7f6wlfv
iY4+zPtT58okqzflHG2PCrQortZSQsc5ztoKjk7n9pjzytLgV+u6dz9gfh/r
GfprrxeNzf1ESmnEueZO5v7hcUuReJK3uV9YV1AxoaCruT/I8hw7a3eQuR9Y
PuC8evVEc/1v+nrV9u0LzPVecczJrVBirven9f5bXqw21/stq2932XvfXO/D
v/vecfB2c72f7tmEuxVdaar37ZvPtCw+Yq731snTQkOUVaZ6/+B668ALl831
/piu9+CQ3CpTvZ97/13WuSxzvb9hdWzSzaRqU71367d159sCc70Przpp/Wuv
L1DvFaRpdPzQiKv+dEgmSb180vz7TNfhDeLprJBsupaurPap0q+n8ut304R0
wOrsgJg3pfq/1NdvFl43/z7zl0T69O5tIXk/tlrhfDaLdwrzij/wp5CGB0+1
9mz4kp/zdklkj2zz7x7Ob23jEl8IadrO7xSBMZYUfeDLoJO5Qvra2/q4ZL4V
7Tlz49StIvPvMx/zateuKBXS8z9r3Zrnt6JnG5xr3hs44O41S5mDHf2a4jMj
2orlZ0d68XrUnj6GfMyre52YUvAN+VzWxk10ZH4hidqO0GS6iOj52703PF8K
qWnYstr53ub3hHu9HoQmKEQ08u8Om2b+6U4raw+cOEHML6U4t9PieQEimve0
Z/bPqVJqdid0q9tQ5vemAo/aoGXDRWT/WHAwap83lcYG79JPZX4F5aSfyD4X
LqKE9h6tdvVW0I8NBh1dtZj5fSk7qfigW7SIEjUx0hm8L6W4NDsX/Qvzq2kU
V3jw+DoRDX4bm+KhUVPT4sBD+1KY34/suz+6Mmu/iCLGJG29KvOjtMvlEdXn
mN+fXAuscobpRTR71VebIUJ/oo9Hm7fvXmx6H7fs4y2nTMtino/d9Nl+caP0
VN57l62mmM9uv35g7OYG6Y36nu2vW17MG61+s6ZVVenQYj70RmHDZvu/6Ktk
cz6tPiykNkO0HR90aZge1yonL6vG/H6uT6TFuB5VcnpoVxb5po1VekCGpPlC
A9tYb/F+9c4yPb9Rfth0Q31KubYvJelVuX5w8z2bbfJM8Qn29mzRLyKlmD8x
K2+S/aG3+lu5FxVn7hfzY9u0jbm+7Y5+aY5KkeBWwn/punHH89N5/MVweeMR
1cW8Xehc3bXHf/L3ls+KtbgkpOyj5T880r/U16xOFhbYsvNiONEnvRMUhvqX
PP6mRdOMHH1qzgWHHEP9O9DctW+D4Bd8w6A+/easLjG9n+vbc6fz9v4lPLMB
vWo05+eW8GmnGtz4Nq6aL3T8psN3l0r4VXPnhj3b1pCmdL2wqHtyCa/ekXNe
HGRBPcriY39/JCSfoz8FjD5Xxp/eFD6YczPFQ7ntT59ycOXok4DvNtKmnPfc
0GjIcilHm0c7DWyVbEUXRW8SenClpvdzaTVZwgFlJXxwbXiCZ2QzkobHVbi2
LuU/XD+zbNZ8axKUjF0ZFGrQZ3hun7bXjo7M01acDSzlvbOtzx8c1IrazrZ/
vSJfSKMv9Utqe7A5DdOvnb5Tw+KxpS4W4/t7KDhqUb7gShjfnC6ElDqP7MRR
tP699niEHdUc+XTv54csHkdSF0vKY3eU8rfTrnfJndya4qP3pz8+VcpvDXk4
oGliG7rQNnbN2aZlvG3VttFrFznRxpKvtmdKSnnJIj5AvugbWhjBr11r6Ac+
f1gsdqttTbuDZo6mXiweR+q8Y1nn8d04ir1QEdMpsjVVL78VMq6/oT9oukl/
casTJQyn6G8XlZnezxUrGur6BJbxXfp+eycxsR1tCXV+VDSqjB8h0d2wnOpK
gybExyw6WMavt5cPUMhEtDtt03h+Zxm/Tjv4Q+MHQqqOOL2ghb2ImtnF2+Zl
taOkItHk2waWvvjuzmZPV5JOnmxtM4rFJ6SYWavDbg4x1HfXfNnU79uR/cE7
dpvHcUYroiOC200nS8pNzzmOVxtHrysr419WCA/feyam4xtdV4xtUM6/8x79
8X57N7IbVpW6aUg573piybXw1h70ecOOlf36lfM1n4sP//bOnXpsGP7koERE
Z6fscw/KEhO/b1BYR6nIaN3o+qX301vMMD93xLQuSB87maMf39vxOzaKKb4P
L7WazxmtB7lca/2k+i6LT0rJa29Nnby7nFcn6griSiTU4shiB6+Ucv6Z16zs
qmaepLAtWNDySzlfNcZCuVjgRZlDnji9rC7nt4SNmhBVKyU15T+I6iiiW3qH
DssuS2jkVD4ps7PIaD0pdejcaf7RLD4pBXTtLBX/yFHahYxH2SskNOt+yC87
Yjmj9aKTP++YUBtlfu/d+Hmwrs/ACr69+4ONZaUyKv2twL3s9wqeP7Ht0uLW
PtQjbky/iP6Gv8/c5KOrjsioppFv5r4gkdF2oEf3FhcnJpnfq+1ytFtls4aj
kLyCiKI5MlpaG9UzfCtntD4U0XCM3WwZq+8KqpEHjr1i6IOFZ8tUV3PklNlN
Hx0/ppL3KXGuyFynoIBxZ322jBdR2vbu9yZuk9MBj2VeKaEiozXMM2ZTsXMK
G19BkQXCW9KdHK2we656FCKn3w690IYd5ujhoyJnTaaCjr4J/n5gFhvfl8Z4
R/TYuLuS77htY+TJSUqSBH5qdMi2ik92mFnUbJcvxcvtQvIjRHT6bcTA1QFK
ami7PDIrUkQWTS6e+3BOSdvTg0bcT2Xj+9LBCbLH049x5HXnvV1viZLiHz0c
tukSR1fz3//eN9eXav8I3rF1FetP1NTYJU6bPrCKp64rvxSPVFHFwMUDhlyu
4m1flwcM/UNNYp9VN0J/FtHMqamb+3ZU0aVFay50Wiui3PNXcrZdU9GmpJ52
Z/5k46tpzdOKLc+ucHRmreXRBBcVjQ1K2VyZydFh6ZDbUR/U1MDu7uihnVj/
40dHwot/6lJTxWuuC6QuAw390h8TyxZHVvNXA0M/njrlR0NEQSOsd4ro+5nD
BldyGjqpLSy8s1dET5wXLJh8X0OD/uPS4vZLNr4fDWs0verHx4a/d9T1pRft
NPSp5ljxakN/tbA2a+HlMj8K7tWsdmEhG9+fpuzwDLc5UM03i+nSlOuuNezr
wvVy1Rd+/ZsZ73wz/CnB/XDJs+OGv3/BvhUJHlqy6NqiPDFNRA3ax0T2fqal
gylL1TYVbHx/Wv3DkmfdCjlKzdAnPGuiJenssIyydaweFukjYy6/T/Zn9aiI
TyibVpz+lHET6mOdFjhwKcvHDnQ2fETwQC+WD13oRkqXrel/MRZT8Jttc3ZG
svNuft+V98rhxde2XpSanNHO2fD8231M59xXNf70X6PwrlY=
     "], {{
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVjtPlFEQ/e58jUFjVrTSAtFOE8C3DfAHgMIWbGw0QMREE5WlxAgkUvKo
sJK1hIRFsUAFjA/QICwYVFBRVojiggYxNs7JOSQWk5n7+ObOnDkzu4XnGs5c
tCiK0i6xyycXrHe5HPSNlRBF13xj0NfZwHtjsp+43ud3Prp9xbj3VfsJXy8H
fresfdi9Lhm3UxH3VnQfkgv0Db3mknH7qPsvcf3C/eW7rOt+t/x0uV4IjAH+
1/Ut7kzLF/xg76fsI+6z0PVj91fidr7b99w+HPNOk/H8ltv7XX8IfAMxLyl/
+E753l2Xs26/9W/KXR9zH6N436XN13UufW7Xuy5zKXIplsA/coN0BO7luZ+X
+nbC9avAXHHeGfjGqvHNE/7WptH3yZh7eKvGdavLiPxUKdZK15+N6+Mxz0d1
Z0x20u1txjXsIdcPZMcx87pgXOP7xojvpYTD9pgx1/udZtc3ArGccf1GGCKO
UuGB+rUoXrwzJKwuG3HfGxOHccWJeiTET+DRIQwb/P6s2/l+vz0QW7x723WP
cEMN5xVDE3IK5DxqiPirVNsB9QP4mf2Pt52KF7lkVJc61SvPHZ0XbhYzn+sR
8YHUigvAA7iAcw+NGhy8acT9lNtJ8fyQuIn7yDdtjPe0MY8FxYZY52XvFG4p
9ceM7FnZiHmHsOoWns3CKiU/vZoFwGdrFiQV81X19YGYfC2QD3CgQrVFntXa
6w/kJLgBfo2IS7tj8uGS0XeT/DeKc0nldUfYP1NPonfhr188SQobU+xp3c8Y
+TFp9JFWXcGXMvXfuJErT418aReXisTNUvVosXLsUQ9tnVUqZ8yELPJzWYw4
Q8HR78Y4fxjnT05zqVlzBXGvo5/13byRr3NGXIsVy6ZLzmXK5ZvsJelf2h/T
3qj2NxUTehH1Rq2BN/iBOmNeJjTX0dOYO+gvzL89xjmJ2YyZi5jvG2s0YOyD
XtVmVTkE5bCq/DdkB8WYU+w4W1G95pTvO+PdDZ0tGnvyi2Yb+ABOjRj7Z9jo
C/liDv82zo4/xlqijs+Nsxh9P22cd+jv98a5CT4uGXkK3+hP9PGE5kxCNS9Q
7Fm9VyuOorfHdR/YtmndKn50aOYMK+ZHRuyA4aCROz2aOdC3ZXfJD3yW6wz+
Xhu5id/DVeEELPuETY34PSYO/BUmwCahu+DbpPpiytiLrcono77H+/gtAe45
Y56406K4urSu0JvVOsM+eJHS7w/yA9+nFdOaegE9MaTfDcSdVa0X9f8Bd9Gr
/wC9eT4A
           "]], PolygonBox[CompressedData["
1:eJwtkjlLQ1EQRm/mWmgMIS6NWj2too2dpf/Awt7GRsFgBAWFpBURUQkWtra2
Fi7YuIM7uIM7uBeujUvjGeYWH+87d+bdN8uL2rOt3eKcS6Mi9AC08ZyOOfeI
70O3+GtU5Z0rwOXoBa6Dj/DN5E/Cx/hOtIFfQzHiefgL/4HS8DucIX9Gz/A9
6Ax/gsqIX8ItxKfgK/wWGsNHnG2K5WjuKcrCIyiB9uFSYtXoBp/kbFSsZq1d
z3rhCH7CP6N+7cXbXYlwVxzeg+P4YSTwOlyMH0L3YrPRGu/wh2K9N8IHYj1q
r58oB1+I9aIzOsf/oMWYzeAb/yY2C535K34CVYaZNXBXrbdaU5yNo3mtmdw8
Zwv4gbAL7Ul705rjYQcebvJWe453fsMdqbDTGmKZMLtdVOItR3O1xj/8tlhv
uoMdsZ3qbnUmHfCK2G4G4VX8nFhtpLlZ/LJYTGteEvuGfktn3AXXe5uV/lOF
sLNk+CcqiP0Dt2Razw==
           "]]}]}, 
       {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVn1olXUUfn/nvS6uTlrODW+a4e5WOFtsbjjuWrQPCteW25QgCKYI4cDc
igSjurf/kphjRVja1ocSkTMiymq7WGQFc31AaE2jL4g+Cfr0jzbn6Hk6z2X9
cd5zft/n4znnvOt2Dm4dsCiKloUoisHL8PkC8krwDBauhfwU+A2gDZCfBj8E
WsDe28ErwVfyHCgNKtW4GWvXY/8z4Kt4DnPHQCWQc+CDoF1YW4FxwFurg69P
gC6D3AveBprUuXHQ99g/jrUfwPdgnAU9BBqI/M6s9vGtUdBx8TFQn/bx3EXp
WwRaIpk6J8RpQzPeeRt0OeiiuTwH3gT+TnA7LpnL8+Brg+s+BXoX40cwPgW+
Xbby7eXB5R2gL7F2BOOvwC/pzQpQB89g/ij4raCdkF8Az8s22tQC6gF1gxqw
/jJoKagO41atXwWffoe5NeCl4C2gYczfEjQPWoa1NvAh3D8MuhnylZgbgbwZ
cgXkGHQT5EcxVxZcHor8vcbgtuRkH21bwNxjoBr56EbFuyi4XtS5HHJ78Lgk
cO9xyJuCx71BsT8POg2ajhwjjAdjXYT9JyBnZDPf5/5fzP3ws7kPeuWjRHAc
1YM2ClOt0mO7cNGjmHD8k/T50VwnyknhgG/uURybFMv7zLGbgp8eh9wJuTp2
++mHiD7AfB348+DFspXvfqKcYm5Ng0Ygf2iLWCQ2d8vvydixdQ40A1qP8Tr6
RDlE3wzJZ+e1bzn2fIq1YvCK4PP0J7HA+XJhIqsYHlO+EcfER154I+7yWvsc
7x3G2mfmsZ0Kjq8DykXeVRt8TyysjConS/VeTnsPSOdyYYFrtJP23o37vwEd
hfw1eCq4Ltz3G8avY/y7LeZ5Ie/HZceY7i/YN6zxFbHXo3vMY8OcY96USVfe
UR/83SLZNSYbRqUv51KqWXvNccV7WP9GMQ6Yv8N8bqPuT/8Pg51Yuwt7XgTv
AvVDfknnuIc19aB5ndoGvgU0wDw3r1XEBWvXbRjvxvy4eVwnFSfGfkpY6Mba
vdjzijlepoSfNzHOYvwW+BnWdMhnzc9M6K454ZC16U/l3R/gvaB9kF8z1zct
nSf0Jt+4OrhOBdxMa21OtbQR/vsH8knIs9Qt9hp6P+QlseMqEfvbafmX9eaN
4Pm3FfseAD8B3gPaC/lV8L/N9/ylHkW9CvW9Uncxj2kLc5F7mINcYx9iLvXj
7AfqfRnV4wbVp2rQ/uA1u1/1rURYr1EN5lpVcN0ZQ95DHd43P/ueOcaIL9ah
QfVIYrNO77BORXqPtrNX1OoM+2pCWGEeJFSrGGfW95RqE+vZjsjj3hkW49Kl
2KS0n/nTEXyN8SKu2Qv+67vgJn2LVbdYA7m+SntYW7pVXzbAhi2QnzDvCX3S
o116MZeeFLYPqp/Xq8aWxn7vsOxJ6r2Tqr2swdcEP0v8x/J3S+T1uER2s2cS
K+wPWelLXT42r8kfqT9XKY6MfxAGqjVHn7cpX+nnVuUxxyOKS6SYR9KDvlwj
fxKPHRpTb+rAmjcLOae3GbtN8mujcM14NesM97NONGkto728q1aYo+3s1YwZ
849xXqtY84055S9zvVLjZ83xc6fyvkZ3Nchn7J3s9+z1S2P3P/tuRndv1ls8
u6DzSWGZ8WJ/KfSWvHnMHjb/12CdZY1l3rAfsBfs0/8TawDrWYvWiCNid0YY
4v3s1WOqlay1z8kW2rQ6dt1GFN9Z+Zk4bdO7rKPt0q9H2GFsTb2GWJzRvyv/
YeeD52y1MMJ54oFvMleJkaTOUb8j5vnbZ56rtYoRfcnawv4RqYdy7Vv9G/Af
oVe68E7mKPNqWvVjQXWMmPo1eK4yloxpQvnF/3bm2JB8vQL+OKw6eEj/F/Oy
5UH1A/5HTJpjcsIcf/QLdanB2gXMXxd7ve/Su6xFtIH6V8WuTyV4Onb88T9o
vzmOLfYcoN55YTIn3Vm/u2Un774g+V+tKztg
           "]], PolygonBox[CompressedData["
1:eJwtlHloz2Ecx7/P5/szGYtcYY7mLFeOMcnNxmyMSSlFKVlNG1Hk+tP+5C9M
xFxjczNXbspd7nKXW3IrZiyvd5/fH6+e9/v7PN/n+3yO55sxp7SwxKIomgkJ
mI6pZ+wRougyunccRT/R+ZCDPwKdgz/rw9w0fB3ru+NPaY5nE9AdYQl+I/QK
vmc5ehY0xPeHF+idkIaugR/oe7ABHcMd9HfzuSwYiX4KFegUeIyeASH4N26h
B/H9hM6J/8z4HvaiM2EEujnzY9BtoBS/1PysedCFuZ6x6wxYztxiSA8eUzpz
8/Gtgu/RGL/AfK9saIEv0jd0VsWAT41d651i5iqhGfos/EN/giboo/ANPRMS
6L7wEN0u9r11hkX4r+ZrUxgHM/fXfK+hMAo9kGdRMkdPkmu09jT+N6PhhwU/
4zz8CvNYJyuHzG01r43OsAW92fwsyvEm9DaYHbyGFeixAl2iPdDPtAZtjJns
94axCt8IXpnXTLXTmufobMhFL4Yp6APQHv0SOsTec+q9JTAVPR4K0MugUGtj
X5sD4/C7YG7wnlJv7YO26EeqQexrtHYhFCjXPLuCHg6jVQv8beVSNVauzb+l
nlfvH4eV6D+kuQZdDa2Dv5PGuwfNY1EMiqUrzz4Gj1GxHjaPpRMcQreM/WzK
oXJZBcXqJdiD3g6pwXv4AzqL9WeC17BMvW2ee51BZ9kBc4K/o3cVg2LRnpPM
a6BaVMM71Vo9hF4D1/AD8PXB7+Bd/JfkXVKPqleHKKbgOThmfkd1V8vhAXq9
+b9D/4R16Ovme0dwFf0LmgaPoQ59AVbrLrDkHPqt+dkSybt833zvKNnbuxmL
gt+hymSPWbLHXjP2w9cG3/M8vjbZ+/qmvr3fvPbqCfWGaq7aa89885wr9+qJ
BrH/c/TvUU4nmt8x3TX1WJ75P0X/Ft2JXPMYFEsZ/hL6BqwNnlPlVj2j3lmF
P2meE+VGa26iL5q/q5qoNifM1yomxaaeUe+op7rh/wMdrKhP
           "]]}]}, 
       {RGBColor[0.88, 1, 0.88], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
           "]], PolygonBox[CompressedData["
1:eJwtlFlsTVEUhs/Zp1VUXY3xwZgoHgwvXgRPnszVKi1VWkVIWlNIKqFqitA0
phpKzUqkqUYkZkEMUTEEQYMYgpglhhIU35+1H/7cb+197h7W+tfuljc7rdAF
QZCN4lAVQX4YBHPg4XBCFAR1xM3g1egwmkVcxvxI+B+6QJzA7yoU4/u7xInw
GvQdnSCO53cl2okmEmejXfAUdBA+gJ7BY9FyuASdhg+hGXAx+42AM3QO4gy0
Fd6C0uF2zA+A/zg7u/7TCA9GQ4j3ET+Fi9EvrYdOwW9QGvO5xG/hHGff5qA9
8AoU+TO+0N3RdfgaasJda7QfXM0ao+FaNF9nJ06F+/HND+LW8AafQ+XyImMB
cwPhFHA98Q24GhXAlYyNghei18QvUWe+74k+wcmMr0NfUG5gNfvqc57oz9iU
b9ujx3ASY6WoC/Er4hhc5sc0d4+xVpHVSLWqJf7AbwlqhEvRVXivs9woZ0Ph
/c5ypzMMg5fJE8Tl6DY8STWHd6AH3iPyykniBmdjmquUJ+By1SO0mm52VmPV
ehzaBm9CqfBPtAQ+horgevZPg3c785Zqrtq/QzXER3RGuAd3/BhaDouIv6Hj
oXl0Ktwmstyrpm3h6b5W59FfuGNktVaNO8FHVSO4jrEx8Htne0XeO/PQE+JH
8ijf5/u7a0/tfUt3Ci3HyvVZZ95vznpn1CuoIrSeUe+oR9QrVWgy/NwZh+ob
dFkeIF6rnMHbUSacpRrAN9HG0PbMgh86y71qptopp8ptA+rLeVtE1uvyZFJk
Y5qTpxd7T8vbn4l7MTfemVd0Bp1lKfodWk+f855N9p7uGpkHYz5HHYgrnNVa
PaHeWOTXVs1UO90x9J6qd9bz6n29CZfgCc68pzvqrpnOeks5UC7SnfW+PCav
9Y6sdvJQHzjPe1+ekXfUc+o99cwC4ivOcqs76W6VznLbnzUGOZNYNbvv7I3Q
W6E3dCZxXGRvmd7QeLgluhPam1ngzCPyinp2LnH3yN4SeSwlMg/Ki3pzp8GF
vne1htb6D2suwoc=
           "]]}]}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNll1In2UYxh/fPyvBpQ2cyt+PjKBmuoSBmzoJgsB0dBLhVIpq5VdQUcxl
QbH8WkRE6LZzdTtfq7O+dLE6U7eT6mCbxgZb9oG0FYHMrov7J3lwcd/v89zP
/f3cz/vgkTeeeT1LKf0h5IQioVLIGwUpPSnMiK/QZrv4TyRcITwtfjHFocfF
f6i1T4VO8Y9o7f5cnP1Ya6UFITOW4tvr5drfkws9U1orF33CfAobtvWA9gtz
sf6R1iaEZvF3RCeFg+I3RWtzYdf2a8RXiz8mfla6zgufCWW5iOctrc/p+3P2
zghf8N2o/UxoFr9PdIfQnsK2fSiRjtqCsPVtCjv285z4w8KA0J8iF473Xsmf
0vdZ7IxrvUnra6JD5OUeyfxNLI5pV0HwRyU/nIUNxzRFzhvJazl12RD2FETd
7Esef2ynUOgS/04Wfj+ci/wVCX0p9NVSR8dXSv7Hsoh/VfTNLHQ6f8fF14n/
XvS5LPLzo+hoFrn7SbQnixwuir6QhQ8ron3Edlf0pSx8+FX0ZaFY/G3RD4QG
8Uui7wkPiX9Mdt+HPyn6Gr1SrPUu8Zvy92IWuXCdz4H5FDXy2gLffwp/CSXC
unBHWE1h03rqhH/ZW0XWZ9ZYuyXcBOZX2LPM9RS52eDu/MN6CXZ8/newjo5l
dFwTRguijhuc8/kbwmVkLwn7FeeBLOpVBr87i/0VZNbwpdj9CV8DvQG/Tpy3
yEtTFrmyfvNLKfTuh2+Ct90l/L0qvC2cECaFY9CJFH3mvno3Cz+t64rWp1Pc
vVnu23fCBeEk92MOW4vUbp4c2eZ5ZF1L19494MHl/nBvuEcWyMEyspf5HhRG
8HcAan/v0pP9ouP4MU0Mp/geY20K2Hf3mu+t78ur3PVdzDfn4DTnfYfH0dGP
zWEwwd5t+v+VLO7kMOd6hCF89zwoZiZ49lQzfzqFVu+nuEu+U0e4f+5lz7GW
FPyjKWaU59lTKfw9im/drHWksNOHDyPYH+K8+7pyWx4H8bdvW3z97DUIVfTg
XmgN/lpXPTkY5tw4Noe39ZPt1BKre8L3wj18nbg68LuQOd3F91bcB7FjX3Yw
1y3XxtpedLTg1yHOtBGza9BLnN18D5BHf99HXFXE1IquevS0bou/AbSxV8V3
PT70oNP59SzfmWK22u/ns6h1L3KL1Lg3Cz078eUi8/BwFjmy7WLq30JeNtCf
p1ZdxFPEW9GHnU7ysYlsHbY72Fthtr8o+lUW8+vrLGI7hEw7uruIs5K48+Sr
jnp1I1eJnPd8lz27fe89Jzwv/E57PsynmAk/8F743VjmDRrlHjQRj/PUwH34
jf+HCfLaSE/8zHvnd6+LvPTh1yA1v4Av9uMX3vFx/jE8FzwjfHeauT/NxOYc
lPHP5B4+wCz1TPyG9/Q4b3sF75xnpfevkn/L5OmnTmpQzmy9gs6ybe9COXq+
zKLez2YxXz3PPJdct33cmTz/EX4zq/l38H07i+xp+quK+swj69pcJi+uTwU+
2O5u3g37v8yZBep3Bt2XWPP5a9Rz6z1cZt+5nuNMNT1ejF+eHZPUZBY5v603
8aucf5kZYrDsCfye4UwpM3uKPc+bEXRNp//fA8tsvQ/j2P4PKww80A==
           "]], PolygonBox[CompressedData["
1:eJwtkM0rhFEUh+97LplSPmrqlZpBFkYpNTU1UUqp0ZSNJhMRxkdRaNQoajb+
Bv+NjyVLliws2LJlpcZz+s3i6X1+3Xvue86ZaJytnloIIQ89cEgYTkJYgBBD
aJD78TJ84xeQw6swznmd3OHqDPkJ98dSfAmGON8nD+Dz8ItvgOGz8ILX4I/6
afID/mo664VN/BxG8QqM8N4xOYsvQobcMb3tPR/gz6Ze/B/reJk7Kd93/rHM
dzCq1ns8IfdFzepvHpG/oJRo5l38xzS7z7CHT8Xu7HBJ3oFMoppPfCyqV99R
y3cRtQufoUm+MtWuQIGzOXIBv4Y7/NG0C9/pmu8i6u4ktMlbpt0U4Q2/N9X6
Dm/xD9OZ97SN35hq0+4u/gETECvd
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNxk0vAnAAwOE/NpziVE7okk66mk/Q2VrGMips2WTa2LTVvM/Mmlnfxsut
usktbjjiiGM8h2e/X7yws1AeCCFkmR8M4Y57bsnwwCFtsrRYpMMRXZZ4ZJkn
jnkmR48VXjjhjVVeWeOdUz7J80GBL874ocg36/xyzh8b9NkkDIVwoSNa0mHd
0lG91DHd1oiWdVyvNKa7GtWKTmhDp3RPJ3Vfp/VaZ/RAE1rVpN5oSms6q3Vt
MufT+g9/nywU
           "]]},
         "0.16590000000000002`"],
        Annotation[#, 0.16590000000000002`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNyDlOQlEAQNEHSgeddlCYaCcLIOKAY3BCPyExMbFwAbIEV+EsToio4Exl
bWtLa6uttpp4ipPc3IHNarQVCyFUmIuHENHhhWxPCMPM6lWeeWLIG2RGr/DI
AxkvzbQucc8d/V4fU3qZNi1SXpJJvcQtNyS8Xgp6kWua/PHLBAtc0eCHb8aZ
55I6X3wyRpELztngg1HOOOWEdbrkqXHMEWu8M8IhB+xT4Y0ce+yyQ5lXtvkH
7+wq6Q==
           "]]},
         "0.1652`"],
        Annotation[#, 0.1652, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNyLsug2EAgOHvbydM1alMZcKiKK7D4AIsJKSVkGjS7o00jYhroTU5LVpd
FItiaTE5TQ5dPMObJ3nTK/mlXBRCWNZiLIQj1XSoY9U1HQ/hlGc60YXOlfEb
bOpSLV1pxm/zRte6061m/Q4fdK8nPWrO7/FZXb3qRVn/nR9605c+Ne//8Fff
6utPC36ZMa4y4hrj3OUg1znADQ6xwmHmmeAmk6xyhFtMcZuj3OMYd5hmgePc
5ySLnGCJUzzgP/xoMRM=
           "]]},
         "0.16450000000000004`"],
        Annotation[#, 0.16450000000000004`, 
         "Tooltip"]& ], {}, {}}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
/wGNjT+F
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
xM3wD50oxlk=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[{
              Offset[{0, 3.75}], Offset[{3.75, 0}], Offset[{0, -3.75}], 
               Offset[{-3.75, 0}]}]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             LineBox[{
              Offset[{0, 3.75}], Offset[{3.75, 0}], Offset[{0, -3.75}], 
               Offset[{-3.75, 0}], Offset[{0, 3.75}]}]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
UgCqZf0qeNw1wECxPPWfAAn4P/Up0bE=
       "]]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 25}, {-3, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8593053696875696`*^9, 3.8593053736177125`*^9}, 
   3.8593054680501504`*^9, 3.8593057332189507`*^9, 3.8593058363011923`*^9, 
   3.859305955788808*^9, {3.859306283112007*^9, 3.8593062954443727`*^9}, 
   3.8593063478223886`*^9, 3.859306467945699*^9, 3.8593064991728144`*^9, {
   3.859306551506078*^9, 3.859306557820262*^9}, {3.859306853974328*^9, 
   3.8593069538132524`*^9}, {3.859307013574737*^9, 3.859307131138328*^9}, {
   3.8593139085379734`*^9, 3.8593139379321537`*^9}, {3.8593139708371305`*^9, 
   3.859313993094406*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"8d0b6188-1b86-443b-b3f3-1934823a915e"]
}, Open  ]],

Cell["\<\
All things considered, not a terrible attempt! The Mexican coffee, \
represented by the green points, have their majority in the green section, so \
the SVMs are not incorrect to say that if it\[CloseCurlyQuote]s in the green \
half it\[CloseCurlyQuote]s probably Mexican. However, this doesn\
\[CloseCurlyQuote]t tell us much at all given that nearly all the points are \
in the green half, Guatemalan and Brazilian included. Let\[CloseCurlyQuote]s \
try a Polynomial Fit:\
\>", "Text",
 CellChangeTimes->{{3.8593092839461637`*^9, 3.859309430714164*^9}, {
  3.859314012854533*^9, 
  3.8593140354636374`*^9}},ExpressionUUID->"2b25d8a4-fea0-4a2b-a68d-\
8c2d16d289e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialFit", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"Normal", "[", "dGdataSAByType", "]"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
       RowBox[{"\"\<KernelType\>\"", "\[Rule]", "\"\<Polynomial\>\""}], ",", 
       RowBox[{"\"\<GammaScalingParameter\>\"", "\[Rule]", "3"}]}], "}"}]}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8592904028809843`*^9, 3.8592904166306477`*^9}, {
  3.859292422995921*^9, 3.8592924277439547`*^9}, {3.8592993891785517`*^9, 
  3.8592994188470664`*^9}, {3.8592999573838434`*^9, 3.8592999583665304`*^9}, {
  3.859300114840728*^9, 3.8593001150829973`*^9}, {3.8593002303250065`*^9, 
  3.8593002315280447`*^9}, {3.859307150580008*^9, 3.859307165755334*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"7643ce36-c2ed-47ce-afbb-63cec18a60fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Guatemala\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Mexico\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                    "\"country\""}, "Entity"]}, "RowWithSeparators"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Guatemala\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Mexico\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                    "\"country\""}, "Entity"]}, "RowWithSeparators"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["549", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 549, "ClassNumber" -> 3, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Length" -> 2|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 549, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 2|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> MachineLearning`MLProcessor["Identity"], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{-0.9810015921630049, 
                   0.19399968085965902`}, {-0.19399968085965902`, \
-0.9810015921630049}}, 
                  "Precisions" -> {0.05727573320108471, 0.8396014343132339}, 
                  "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {12.043517106219792`, 1.3442456354164372`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 1644352530978073028|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 2, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {12.043517106219793`, 1.344245635416437}, 
                    "StandardDeviation" -> {4.104525202538504, 
                    1.3428757552479051`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 2, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {12.043517106219793`, 1.344245635416437}, 
                   "StandardDeviation" -> {4.104525202538504, 
                    1.3428757552479051`}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                   4747808072524423015|>], "InputDimension" -> 0, 
                "OutputDimension" -> 2, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> {{11.8414168433829, 1.1085047013157079`}}, 
                    "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.0479915, "MaxTrainingMemory" -> 203088, 
                  "DataMemory" -> 11680, "FunctionMemory" -> 29504, 
                  "LanguageVersion" -> {13., 1}, "Date" -> 
                  DateObject[{
                    2022, 4, 19, 0, 39, 5.4802369`8.491374308119626}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.8396461258311305`, -3.8396461258311305`, \
-3.3024767386380964`, -2.951794962930273, -2.6382522737111236`, \
-2.402244922552804, -2.374505735777525, -2.062286937641291, \
-2.024040133657473, -1.9837106284362171`, -1.7048387644785408`}, 
                   "LeftBoundary" -> -3.3024767386380964`, "LeftScale" -> 
                   0.26858469359651704`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[5.056759444730894, 0.4214298645918625], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
             "ID" -> 895810465636885430|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {12.043517106219793`, 1.344245635416437}, 
             "StandardDeviation" -> {4.104525202538504, 1.3428757552479051`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 8168166951674565608|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 2243861272990366060|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               Entity["Country", "Brazil"] -> 1, 
                Entity["Country", "Guatemala"] -> 2, 
                Entity["Country", "Mexico"] -> 3|>}, "MissingCode" -> 0, 
             "Version" -> {13., 1}, "ID" -> 2652975377468253999, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {3}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 1174657711523402568|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       Entity["Country", "Brazil"] -> 0.24094202898550726`, 
        Entity["Country", "Guatemala"] -> 0.32971014492753625`, 
        Entity["Country", "Mexico"] -> 0.42934782608695654`|>|>, 
    "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["AssociationSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "SVMParameters" -> <|
       "KernelType" -> "Polynomial", "GammaScalingParameter" -> 3, 
        "SoftMarginParameter" -> 0.4, "PolynomialDegree" -> 3, 
        "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, "Shrinking" -> 
        True, "KernelCacheSize" -> 100|>, 
      "TrainedModel" -> {<|"supportVectors" -> CompressedData["
1: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
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGB4D8SzZoLATfvBQt9kObDFXa56wN0xUujkqTwFSev3Drg7
Rmmi6P246B1vjDaWLmrAKY+LnuNvx5nx7QbJ+gaaXumUu21V53yi1bd0LPhS
E7qDbPseVhp8ZRLZT3N/1RZ8PZGV6ku2/rC/r5t+zT5Fc3cKve5q1L91ff+j
q9udwz4tG/D0QC69IfHoxiiDazQzv8TqvvvnVbswxAGgrZhb
          "], "rho" -> 0.8318078730596172|>, <|
        "supportVectors" -> CompressedData["
1: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
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGD4CsSzZoLATfvBThvpTIs3uDZpwN0xSo/Sg5DeT4j+ZGj2
n4P/5v7gT4wcYvt3E1RPLP3R66tWYsUqqplHa9rJgC0wyPIC/ewTaj1eYbeJ
oDpOReU/7VvSBjx8aEUvaeC3q1O/Srb+Nf1lahwOmOKOn3tkV2w5S7Q5Ru+e
v33ddpGgOucvYrE5G2ifTt4/mWy31mcFQXUAGBOvJQ==
          "], "rho" -> 0.9190978376668644|>, <|
        "supportVectors" -> CompressedData["
1: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
XShwff+mG54h8D/pTrbS
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGCIAhKzZoLATftRmjxaYMVnmSjZK1Q310GmQvBuwpQB9x8u
ekagzIHFQtT39yg9uOiCf/knr9ceI1p95t2ZdaHTpw+4uwcpvZ9adPTHzTms
0RcoNifoSYzbuqmXCKpLVzmwwUyaeu6nFt0QH8xzoOjwgLtjqND39RmjSg+e
HXB3UIvmKkwvEVl5je72Cm94xVO4bMmA+3+k0J/uTOUKEr9KUB0AHUWgwA==

          "], "rho" -> 0.803280566160226|>}, 
      "ProbabilityCoefficients" -> {{0.004682391416281462, 
       0.6278854012489319}, {-1.1361498832702637`, 
       0.442909300327301}, {-0.032708216458559036`, 0.5100430250167847}}, 
      "MulticlassStrategy" -> "OneVersusOne", "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "SupportVectorMachine", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "KernelType" -> <|"Value" -> "Polynomial", "Options" -> <||>|>, 
        "GammaScalingParameter" -> <|"Value" -> 3, "Options" -> <||>|>, 
        "SoftMarginParameter" -> <|"Value" -> 0.4, "Options" -> <||>|>, 
        "PolynomialDegree" -> <|"Value" -> 3, "Options" -> <||>|>, 
        "BiasParameter" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "MulticlassStrategy" -> <|
         "Value" -> "OneVersusOne", "Options" -> <||>|>, 
        "Shrinking" -> <|"Value" -> True, "Options" -> <||>|>, 
        "KernelCacheSize" -> <|"Value" -> 100, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "PanelCell" -> CellObject[4141057], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1529998`6.6362358566079935, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[1.1715700438984051`, 0.05284435518695854], "Accuracy" -> 
         Around[0.3286536259312319, 0.030116902288463556`], "EvaluationTime" -> 
         0.00002180579527136055, "TestSize" -> 479, "ModelMemory" -> 33000, 
         "ModelUtility" -> -0.8604904351200816, "TrainingSize" -> 70, 
         "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 137240, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.1715700438984051`, 0.03736660190012889]}, 
         "AccuracyHistory" -> {
           Around[0.3286536259312319, 0.02129586583650523]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "Polynomial", 
           "GammaScalingParameter" -> 3, "SoftMarginParameter" -> 0.4, 
           "PolynomialDegree" -> 3, "BiasParameter" -> 1, 
           "MulticlassStrategy" -> Automatic, "Shrinking" -> True, 
           "KernelCacheSize" -> 100}, "FinalTrainingSize" -> 549|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Polynomial"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.1|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.574055266569448, 1.666001226675956], "Accuracy" -> 
              Around[0.29924411097042797`, 0.0275457285668926], 
              "EvaluationTime" -> 0.000013912657753475514`, "TestSize" -> 539,
               "ModelMemory" -> 15080, "ModelUtility" -> -2.469342160668726, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 110744, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[5.574055266569448, 1.178040764847675]}, 
              "AccuracyHistory" -> {
                Around[0.29924411097042797`, 0.019477771462373755`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2465928963270305`, 0.053202141679926096`], "Accuracy" -> 
              Around[0.33008683534922745`, 0.030048993728915226`], 
              "EvaluationTime" -> 0.000019109377972979558`, "TestSize" -> 479,
               "ModelMemory" -> 33000, "ModelUtility" -> -0.9220785276587004, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 142808, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2465928963270305`, 0.0376195951555232]}, 
              "AccuracyHistory" -> {
                Around[0.33008683534922745`, 0.021247847233547997`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000019109377972979558`, "MeanCrossEntropy" -> 
             Around[1.2465928963270305`, 0.053202141679926096`], 
             "ModelMemory" -> 33000, "TrainingMemory" -> 142808, 
             "TrainingTime" -> 0.4991819353116498|>, "Index" -> 1|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Polynomial"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.4|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.8336238310356965`, 1.7089822374825487`], "Accuracy" -> 
              Around[0.2940790184959489, 0.027450577523048542`], 
              "EvaluationTime" -> 0.000010065464896483254`, "TestSize" -> 539,
               "ModelMemory" -> 15080, "ModelUtility" -> -2.5137377551486155`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 114600, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[5.8336238310356965`, 1.208432929051269]}, 
              "AccuracyHistory" -> {
                Around[0.2940790184959489, 0.019410489514034644`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1715700438984051`, 0.05284435518695854], "Accuracy" -> 
              Around[0.3286536259312319, 0.030116902288463556`], 
              "EvaluationTime" -> 0.00002180579527136055, "TestSize" -> 479, 
              "ModelMemory" -> 33000, "ModelUtility" -> -0.8604904351200816, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 137240, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1715700438984051`, 0.03736660190012889]}, 
              "AccuracyHistory" -> {
                Around[0.3286536259312319, 0.02129586583650523]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1891901308139532`, 0.07400138543894856], "Accuracy" -> 
              Around[0.36301606624413896`, 0.06455626119177413], 
              "EvaluationTime" -> 0.00037632372952555294`, "TestSize" -> 110, 
              "ModelMemory" -> 134632, "ModelUtility" -> -0.8788303952731285, 
              "TrainingSize" -> 439, "TrainingTime" -> 0.3981071705534972, 
              "TrainingMemory" -> 632424, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1891901308139532`, 0.052326881461079965`]}, 
              "AccuracyHistory" -> {
                Around[0.36301606624413896`, 0.04564817005675344]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00037632372952555294`, "MeanCrossEntropy" -> 
             Around[1.1891901308139532`, 0.07400138543894856], "ModelMemory" -> 
             134632, "TrainingMemory" -> 632424, "TrainingTime" -> 
             0.5479793990663034|>, "Index" -> 2|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Polynomial"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3|>, 
             "SoftMarginParameter" -> <|"Value" -> 3|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[30.42932272643945, 8.306884883815533], "Accuracy" -> 
              Around[0.27678925119663333`, 0.027042435168845483`], 
              "EvaluationTime" -> 9.063348926239772*^-6, "TestSize" -> 539, 
              "ModelMemory" -> 15080, "ModelUtility" -> -4.1617270719320185`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 114544, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[30.42932272643945, 5.873854631881989]}, 
              "AccuracyHistory" -> {
                Around[0.27678925119663333`, 0.01912188928768822]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 9.063348926239772*^-6, "MeanCrossEntropy" -> 
             Around[30.42932272643945, 8.306884883815533], "ModelMemory" -> 
             15080, "TrainingMemory" -> 114544, "TrainingTime" -> 
             0.32527051462409967`|>, "Index" -> 3|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "Polynomial"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3|>, 
             "SoftMarginParameter" -> <|"Value" -> 1.|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.875709866700799, 1.7306104534344633`], "Accuracy" -> 
              Around[0.2893992409844923, 0.02728914053150472], 
              "EvaluationTime" -> 9.782685455375144*^-6, "TestSize" -> 539, 
              "ModelMemory" -> 15080, "ModelUtility" -> -2.5212252036648546`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 114528, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[5.875709866700799, 1.2237263872158348`]}, 
              "AccuracyHistory" -> {
                Around[0.2893992409844923, 0.01929633632257965]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2717220726337213`, 0.07630336912968233], "Accuracy" -> 
              Around[0.39204392690188167`, 0.031492321101930155`], 
              "EvaluationTime" -> 0.00001424820523964561, "TestSize" -> 479, 
              "ModelMemory" -> 33000, "ModelUtility" -> -0.9454655126676283, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.1, "TrainingMemory" -> 
              151824, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.2717220726337213`, 0.053954629738978646`]}, 
              "AccuracyHistory" -> {
                Around[0.39204392690188167`, 0.022268433806479016`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00001424820523964561, "MeanCrossEntropy" -> 
             Around[1.2717220726337213`, 0.07630336912968233], "ModelMemory" -> 
             33000, "TrainingMemory" -> 151824, "TrainingTime" -> 
             0.5991187233627273|>, "Index" -> 4|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["Polynomial"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 4], <||>], "MaxTrainingSize" -> 549, 
      "PreprocessorEvaluationTime" -> 5.22578125*^-6, "PreprocessorMemory" -> 
      43408, "InputDimension" -> 2, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.0717438713667762`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8593175472787986`17.339085503247585*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.189697701483038, 
          "ElapsedTimes" -> 0.3149689, "ExperimentCounts" -> 4|>, <|
         "TrainingSizes" -> 70, "TimeBudgets" -> 0.31616283580506327`, 
          "ElapsedTimes" -> 0.2970003, "ExperimentCounts" -> 3|>, <|
         "TrainingSizes" -> 439, "TimeBudgets" -> 0.5269380596751054, 
          "ElapsedTimes" -> 0.7555605, "ExperimentCounts" -> 1|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{11.8414168433829, 1.1085047013157079`}}, "ID" -> 
           6515543852639189880|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 2.4198665, 
      "MaxTrainingMemory" -> 1223264, "DataMemory" -> 10688, "FunctionMemory" -> 
      310816, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2022, 4, 19, 0, 39, 7.8477425`8.6473197146094}, "Instant", 
        "Gregorian", 1.], "ProcessorCount" -> 6, "ProcessorType" -> "x86-64", 
      "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8592904385167007`*^9, 3.8592912549761887`*^9, {3.8592924196012044`*^9, 
   3.8592924317670546`*^9}, 3.85929937275097*^9, 3.8592994089844723`*^9, 
   3.859299503833411*^9, 3.859300054930189*^9, 3.859300224916343*^9, 
   3.8593002844693904`*^9, 3.8593071682922153`*^9, 3.859313948011777*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"f23e08f4-c685-4f2c-87be-b97550cb693e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"PolynomialFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<Mexico\>\""}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "25"}], "}"}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "False"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightOrange"}], "}"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "/", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", 
      RowBox[{"Normal", "[", "dGdataSAByType", "]"}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8592904598899837`*^9, 3.859290473949274*^9}, {
  3.8592905250863266`*^9, 3.859290533421213*^9}, {3.8592906366020584`*^9, 
  3.859290644728792*^9}, {3.859291260179682*^9, 3.8592912609105444`*^9}, {
  3.859292437001234*^9, 3.8592924483839607`*^9}, {3.859299547194921*^9, 
  3.8592995530071063`*^9}, {3.859300312489611*^9, 3.859300317534028*^9}, {
  3.8593071779365463`*^9, 3.8593072023884706`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"a17a389a-854d-490a-8962-c061fd9663d4"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJyFmXlYVPUaxwcjRL162RSQRRgQYRgGhpEZh4zzYhYuSG6ZiivmVgiaWCBl
eCN3RUAtrdxTckm9KAioZ1C87qlErqiIpoI3BVQEF7zep/MenvnO5bnnj3mf
z/md89ve9XfGOy5x8MRWCoVi1+uf/8q/LluTuawRgQV4jszZCdgdWAnsB6wC
1gBrgXXAYcAGYCMwrtNCCubM62V2AnYHVgL7AauANcBaYB1wGLAB2AiMerRY
J0h5vRI7AbsDK4H9gFXAGmAtsA44DNgAbARGO7XQI6wTpROwO7AS2A9YBawB
1gLrgMOADcBGYPRDCzsFPeI6UboDK4H9gFXAGmAtsA44DNgAbATGOGPhh2Cn
qEdcJ0olsB+wClgDrAXWAYcBG4CNwBhHLeIM+CHaKeoR14nSD1gFrAHWAuuA
w4ANwEZgzBMWcRTiDPoh2inqUQmMUgWsAdYC64DDgA3ARmDMgxZ5AuIoxhn0
Q7RTJTCuE6UGWAusAw4DNgAbgTHPW+RByBMYRzHOoB8qgVGPuE6UWmAdcBiw
AdgIjHWMRZ6HPIh5AuMoxhklMNop6hHXiVIHHAZsADYCY51mUcdAnsc8iHkC
46gSGP0Q7RT1iOtEGQZsADYCYx1qUadBHYN5HvMg5gklMMYZ9EO0U9QjrhOl
AdgIjHW2RR0KdRrWMZjnMQ8qgTGOYpxBP0Q7RT3iOlEagfEcYVFnQx2KdRrW
MZjnlcCYJzCOYpxBP0Q7RT3iOlEqTObSFrgHPNfSe/ycLXBLEvvB93AeOG9+
ztpkJtP+z32U8jj4PtzH8S3GQbuB+xbj8nN2kpT3Ey8yRztgL2BfYH9gNXBI
S/2R+fs8rl6SLpLsARxK5v3oW2B5nibz8RVw3xbYpSWWLjW0h7TA+B2AL/Zv
vuTxpcsJ2B1Yno8kldDuB6wC1gDL/UvStwVm/fgBq1tgnmdIC8z6MkA76w/j
GrdzfOL3u7fAPG/uTynJMGhnvbGeGiRZIUn2M77P+4LnZLQX7k8Nz2taeh7O
Xbj/WKfjfmMdi/uNdQ/uF4/L67XwG4lle5a4Afatpftyv9LF+9HSPuP3Jul+
GuuzsySDyayfNNavD6+HpdRPJzIfh/vheXB7haSPIHifx+P3mWugvwbhf8+j
qyT/JslASTqQ+Xg8D+5f6jeN9ekpMevTW2LWJ47L+xgE/EKa92OoM/l9tj+2
T7Y7fp/XwfvjAMxXDfiVLAVzZruX/RHaeT3MPE/upyswjsvrvAff8Xi+vL+8
vmBo1wDXwPzYH3lc3m9u1wCzH3I/kl7ldbsDy/mZzJnf94d2f2hXQ7sa2nk+
3C8z7xP35wLM8YfzNcZ3iWX/lexVtp8KGJ/jiLw/0n7x/vD+eQN3g/4Cgfl9
tiN+nu2W528HLK0vjdcj+adcb7G/cn2C9YqkxzTOX+y/ocB6c5bnxfN3AvYD
DgBWAQcB8zgW9iSaj8/xzgmY21lfwcByfpSkHH+l8V2AWZ+sH2ULzPNk/2c7
8gXm/eB5qlpgngfbC89TDSzXS6a/hBzvRfPxuV2OnxivID7wxf7E/sb2yeth
+5HmK+cDngfbD9bTbL/MvB62X56nwZzl53nesj2AvnC/uX9FCxL/X+GL4yrG
U44DzKwH9h9fYKUkdebtcr5EPWDdx/q6BzIQ3lMDy/W3JDkf8X4x43dYfj4A
nmf9cPxg/WAcY39mu6sA/6yA+bO9MLP9B5m3y/HJG5j3j+enhPlxu3w+kqQG
mMfj9dpCuzW083rwOy/bB/fH+8PrsgPmcXzhPjPHLfk8J40v13+w33iu5Od5
n7H+w7jK+mO75vny++xfbF88X+5P9je+eN5QV8l1OZxDsY5pEFRbjFf8PnkM
/mBrOjhl4FcVTfVy/bRrWkZcbbC1advi6J371a4wbo0Y8ajk+ZK4B/L/ak35
XXqu63Nb/t/JZNgUs65kv+w/durNV0entKeg/MUfZaXg+cVAdZf73K3zdKba
/m83bJ5oeV48Y1SvF5M6Sqwlo6F4QomLBxVf/2Lc6W+bz4N9rtG2lIsOJFTb
DD5TdEew6lr267ljAWTVL+fHDRmOpB/b3xCwSU/xh1YlDH7Pm3omv5i1fP/f
qWT+G4sSoxSm9aOrbxva2pFQVHYi0Ulh8oq5Hmcf/0KwymhflbTutBhzzC1o
dLQV3Us6cL70aIlYNyDml+k/tqeZy5cune30m6CfsuxxY7YX/WpzJjPiq1Jx
yBHlLK8zPjR22NqEo4kFQsrR9/1Gdu9G9wa21hclXRYi9tUnPMvvQukrHZTt
lisoertx8tYN3WjKz0u0ew7Y0Tz/z7ffqtCS88byncu+7kLZKdOe3G0bSnmu
/VTjyrpQt7YFNtGf6ynuotsfZ5We1Nh7dMa46jCqXVjoWVzmQ1+nH3qeq9JT
Y/0/bL/bxv5rS8mFxrsZUfsEvVtFYm4m27FCcfn63nd/8fSRmfX3QtNxylft
y4QRn2yIij/ZnN9K7fw6dbjR/P3g1Z6BH+o3q6nVD2MGZed3otjqysqb9sHU
NzA8vGe5K+24+86Bfbvwe5Cetlzdrz1+XB7XVPTPy1lZqx6Jx3cM+GHaDWvT
9C0fHfONrBfHN27wuebcynS47p2owuDHYn5cavraGsvzO9ldvuy+lv3ChdYO
KD2ZHlkrhh2PKito23xeHxX7kXNGG/Yz9hcXmkalKftaPRLcVzssCv6ged/+
kr40aNgit8mpbUhXZe2TEWT5/3Zg0kHF+EQXapOwOjF0Be9X8/l9/qzluUPy
OQ7o6K61wn1xhRd9FN1B+75H8/cwijky8tFt/F+jOyUETn9xwIO5QbTWntrx
KKhWjH4YX5j9hZ6CD+ZWxdS50tzYojWFqXp6kemwsqN9Z4ps9+HS4ikaqumf
obo7s0r0/Ne4bZtHhNHRmRHb86J9qJfT7nGuPd5kaVJMrDZGxL32uxU/321Y
8EQ8Ytp9fLPgTPUvel6Lt3okRoy7qN/j7Ea1VkV5Cw/eE4ODfs7LznWiBavy
+sVNqBbu7AmbOnRREK05dmHzoAAb083L5bqMPhpqffbO2pTedWKW/we9guw0
lFg07M+Vc16Jm9+dl95zTPP/flfDx4Z7RHSmFU5fd1rc+qngWLI259ZiV4qx
S924LLheGDZfmTp0gZJyKmc5/nL9TXLNTL8lvI6fa4r+nKF41Y6OHA+NHvjK
lzr4nAqJfNmOjna+81aOg4o+O6lbsOuKIz31yXs0+YSGHkbF3z2b5Uo/ufko
hp0PofjMma+2FrqTr1//qbc+1FF+7tQg40Bv8otzb7zyU3fa+9ax9v32KmlX
U9++3dTdaczL7KyY4awPaypuow297mpj2vd9h+Lqac3n87NlF/62Jf2lqA0M
eDQitU5csGtu6GlVoyRr5fO65snJM74+PjTKI7oo8yqe/31pZYc2KZd7HpbP
j03XQwfFuypMc5xDZ1d91pb+kq0kf1AoTj2w2X9PWS3u8ChdtGrYcXFlcv/R
I6urxIqvbvcsbFspSFKcl/i2urjgivB2n5tTu2yqlPPMsvvT+zuGnxP7nrpV
+K5nveATlHG/U8ol8XurB9duRPnSiUlpqU+fFguvarLbVCR1peCKuWeaJpwX
XI8Nma06WCP+OmN4u+3fPBCX28y7/1ZC8/l83xTfBaNaa+i3jZlen3pwntXQ
7XGH3rNOVZginD0jrQ/j95oaQTPj6Ke1oeXisNw6TS/xjpznbO3WOI67F0Q5
Tx9O/Pe6rXI9kbB3U+WM0sNi/dloj3N9ms/rU59Upw3y9qBRqqEvCmY/l/P1
jLwl3T7XPBPSxv6+cGQGfv+xo++mvBO436ZMPp8Pf3/h+bPdOd+racsXXr3+
1XBNPv/2Wl57yrWg+fx+4fwHT7q2s6eYFzOitic3f+9eUbnmScRKPV0KP+n0
j9+9aPLalU7CqjaUdGdE39oJJ+T+Botbc/e/+k3cPbe8zuY7D/qyzm3qceGW
aDcvYJG1xpPSQ6IH+U6/KT53mFyYleNNwyLfmjTo6lFxbmqv2MpCP7Kf/v6U
/qMuCkeGtwo/3qSi0zOvjP3CsUI4VPd9TJRVIN0OFKuSnHg9Pch61POmOaaO
tKWDKnL0HAN9G55jPauxI2WUfXp4z1wDHd7Zvb7Ha/59ZPLgn9b3oJ0rPPM+
/rIjDTQmb4gb0YMi/6j4ZtFEzt+htOfI1fWagi50YH7ukqHTtGR3U3tmZz9P
Sk17d1HIZ3r606pTwOFLHjS+zYHaiXn29Hhvl0/PRVfK5+XHAcGHrPtWCUnP
h3pfafCnOQnrVL3dbghn9r5t32ATQB9P6nvppdcNuR53i60Z4D+iQrANWbM6
5cfm8/SxIZ8MKS1S093kj6f1m31RuF+Z9vDZb3h+9qROme3y8js2CTcbIl0e
fe9A39xqPf504jNxzKF3TiR80nx+3jRGMXiBP/4/40Dv+W9L7vrwufhDjNbZ
Y4kzLTsavmnx2VrBtTjV//4qL4qzfrhhR2wr8ioU4wrU3jTX2WpW5wFvSP0o
ad6RPQ8yvN6kmknLR44Z33ye1kZn3dh+yofCz+bNHXjeloZE5uh1V/wp9std
Wav7N5+HG7c1zS8+5UgXs7fGl8YF0uBLu/1iw1kfarq6fveqncGd6OFQt5P7
y5rPyxN2BHhf6O1CS/dsSR/uWCu2/66X1XqNktbbRG9QDMyXz7tHym1CrHaX
Co4Xssv7xvpR7tbdSy9ldaCb7QrqY0NCKPWcW9flEW5Ucutl/uYyPdlnPL2R
NdiZlpZ3+SNmg57uvGcKizuopKGDFq6a/7OecjY6BP19iA/d0eyzT6jXkW7j
ynIfR6Xst/ZVfS5oVffFEveNyUeD/5Rl2YmEN5tSbotqfeYzq3n3xYXKVhvf
mNCaKn4pEhevyxVGziq5tu1KEA3o+Hnvbf1cXteVujc+2xtKk5asbnT81ov+
A6IQinw=
     "], {{
       {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
V3zoGXzKsc65YwN+WQ6f2Mha/n0LY/4HogCrTw==
           "]], PolygonBox[CompressedData["
1:eJwtlOdvj2EUht/3hBZRI7VqVVsjpaK0ZqxIqolNaVVjVTW0qK1WFUXtWaLE
KjGLhK/+AonPvvCPEFx3bh+u9Drv6PM+59zPL6+2ac2eSJKkEnpAA0V2miR1
0IhnQRnXW6kf4jmQiU+AC/hEKMIH8Ewh3hNyqStgGd4n/GwVrMJHQm98EizA
j8Ng3j1PfQLfBfvxA7Ab36t38NWwT+/CePwGtOF9oYD3m6kv4kPhsr5Vz+hZ
GIuXw1x8GFxJ/Y0F+HZoxMvgD5ymzuDvdTiLN8MZfAdr9NO3hddqg2x8GrzG
X8ED/B68wFvgEH4z/C3aQxN+LvztGf/XalFP8QSGhP+H/lcpl6bijyGPuhue
4PfD97RGJ/4GtuHf4B2+EirxdTxTihfDc+ouuIt3wBO8GG6Fr+meejgF74bv
1L+pc/HRkJ/4mu69hx+pv2k63guqud9B3Y4rTJpdDtfm4xW6T10Ic/CT0K69
Km94K1yiTuEgfjTcW62ptdfChtTZXIhvCWfzF/VG/AP8TJ3JWZpVeHaaeaZm
A1/xep6fjT8K91KZLsGfwsfUGUzxZ/CJ+i/1GHxEeG/KwBH8bbjXDRDhPWlv
WkNr5cPn1BlWlqvC2dIZqcTnhbOonql3M/Q/Us9sHF4Dm/GtOlP44fDZU2aV
XWVK2VLGlfVj4bOjng7Cl4TPimau2Q8Mz1JnulZZCe9NmavTWQlnb7jWCGdG
2dGMNevl4bOsjCvr68NnVzOtDvdAvdAZ0lnSTDQbZXJTeA/aizJ3B38ZPktf
dGbUG1iB1yizml04C+phFz4ZslLPSLNSZpQdzUiz0m+KflvUwwx8ESxN/Y7e
1RpaS785o/CicPb1zG28vzKVuufqfRLOmq7Vh3ui3nTCNfxq2JXZU9oLlKTe
w058cTj7ulaOzwxnTxlVVv8BKwqFcA==
           "]]}]}, 
       {RGBColor[1, 0.9, 0.8], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
           "]], PolygonBox[CompressedData["
1:eJwllGdPVVEQRe8dsMQaEI01ioo9EqIgBAt2ELCgIhJsqGAFKypiidiNqIAF
u7ElavxoTEz8B/4hE9G13R9W3pp325k5Mye3sbWmJZIkqYdMGE/QmyZJKRTj
pVCGZ3Gtn98i4qn8fof3+Av4jG+B9Xg2NOM5MBkfDQfwsTAFnwED8B/wAX8C
hXJ4imdBE74f9uB94Ws1UIm3QSb+CZ7jw8OuNWgt5+EGPgYy8AkwGM+Dm/hj
yEj9TX17GzSkzlG51mj95LqDeDteF/YKWIafgD9cf0R8C58Hr/CX0I3Xw87U
OSv35ZCT+J4erRV+4Y2wE58Pb/ANsBZ/CcX4V3itWisH/Bm8xUfCb943jLgh
XCPVSjVX7XNVU/wg7MN3h7+VzTO78Jkwh/gnTMKvwDqudRF34kOglriH+Ab+
MXyvnhmKn4R25a4aa+/DvaGcvuDjws92w3X8tmqOV8Mq/B18S72H09QL2v/E
/+laM7Skrolqoz3X3hdBAX4IjqXukUb8rnLi+T7irnCOylX3HFbvQWvqd+rd
5bARL4el+MVwLqqZarcmvBf/78HvhN+tnJW7ekq9VQUrwzkqV82MZudauJaV
rOEqvgIKUveAemGL6k2cD3OVa3gt2uOj+IXwrPRzf47uhYXE04krtDYoST2D
eXh1uDaqYRW+JNzrmrHF+LnwLKpnR+GbYXHqHlevDwv3svZIe6Vv6FttxMdV
67CfhlY8gSOpcyjDV6tnEtf4IP6X3zXaO5hNPEszkHrGavFF4bOlDjbh98K9
3QGn1JvhZ/WMnn0VnoWtqkG4B9WLnTAiPAOaBa2pKbwn2hvVPMUfhNeumb+P
7w3PhmZUs6p36t2qaSF+ObwW9dQl/Gz4WzpDzoTPOJ11mtEF4RyUi2paEj4T
dTZqhgbiD8Nng2a2NzwDmgXtaX74DNRZqBkchE8MnzXKUbPaHu4FnWkd+D91
FoXv
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[
         {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNyTcvhgEAhdGXRC8JBp2IbtE7sVh0PokyqImFREt8GPUyseht0Os/xBlO
npvcgtml0GJEEARh/ozyyCCooIwRRmnl1zenkXzwyTuTTDDNFAvMM0sKM6SS
zxd5bJLGKkckckwnlZxRRTddrLDMEqeckM4a51xwxSU9VHNNDX30EsUjhWQQ
5oYkbumnljseuKeIer6pY4BiGngimkHiOSCTfbJo4odGhmjmjRaGCTHOGB3k
UEour7yQQDIbrJPNIbG000YJz8SwzQ5b7LFLHP9Doiyz
           "]], 
          LineBox[{555, 596, 576, 512, 614, 604, 527, 603, 528, 660, 661, 658,
            556, 659, 577, 578, 557, 673, 513, 579, 515, 635, 636, 634, 532, 
           637, 516, 674, 544, 533, 602, 611, 612, 545, 638, 534, 627, 651, 
           652, 654, 653, 639, 640, 628, 655, 675, 546, 620, 621, 622, 574, 
           584, 582, 583, 558, 615, 616, 617, 581, 597}]},
         FractionBox["1", "2"]],
        Annotation[#, 
         Rational[1, 2], "Tooltip"]& ], {}, {}}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1:eJxllGk4FHobxs1YyhayJMLMmDGYsUz2Jf8HlaU4tqJ0dCZbSSmllJAWjiJb
ilRkCU0RcSIySZbi4GQd9CLb2Ped6fW9D/eH+/pdz3LdH278KT8HT24uLq7i
LWG2hN2S98i7xGSxJaYaR7JCUWmIuaM4NpK2XRwy1l11r+e3MHWUa6gUPSlQ
nyjvoF/5waR1vPJ+LCoBbtY776xysVCtZb6OUYk0OHlR47BGs6i5onBqdZcc
XLgn9kWloh+51c/FdGjtghUVyaw6sQlknnfZuPzkTnAtkEdxzhy0I2vVdFpf
Cib3luzz6GQxJY6ec64tk4OOCvvZvbGfUXhArI5svAwIqK7ZmrksoWdD6kW9
FfJQXVg7df1YM7PbOSVbZVoOHILYPVO/apCvWJmcW6E03Gfp+lSqzKH05Pxr
jxqk4Uyt/jouDAtL+0t83mnLApfSKasfKyPMoxD9dpBBAN67kkLRlT3MOloj
X4cpDjSvyDkmGP9E32zGP/gn7QFsC4c3cHs4whPVaq7lyMHNh8adPS+GETd5
vduEJQ+4xEOJY0/a0OWzTu5vXHDgsmiyuqg/gAiVy5cUavaAWfZjd0vLLMRt
fN9uNBQHRc2m7vrn+5gGWsVxBl044CqQkcpP+4oG70Zjau/Jg51lQou94TK6
y5fR0lBCgJ1z1mQWdRMRVlYXRLfy8dn/0ydPk4O6JFbP5dzFg1G34AghpZ7Z
nriOeyePgwMf8xfeb3iggLYPayt0HHRfdl83vLGBFJ/qDNkYKgBj9lhHdD0L
JfQ98C0vxcFPexuj5DMjiFBQfWylDweObC8z1aBO5kig0t93TuHB7OO408kd
o0y2b2NauYUi9GLLcRnXJlHQwRPvTLQJEPvPO0LhNB9kzjtYcR8hwAjtIlZy
cxDJeMRNjNnjQejnTJHTH8uo9Yl666+mnfCiw8BU1GgFTbuyd7ko7obg3Q3Q
lD7NjAhhzKVZE8HraJlh1YV51ORUaCODwYPdr4BbNiFjCI4md95IxkOpT8Vo
veMPtKlbE2VIIYBB0qzzvrBQFKUSISMaqAh2KUEK3S+5IInefsz/AQmSQ6n/
Od3oRpMxCjqOb/HAfwajG3e4F+nMeIuVmuGg7bsCLl5w8DdeNdfYwokjwp43
f7jJrS8gA1b94mohHuxFV4689F5F/ZvpBz6PEmHgziFseWMzmrV+Ebe3TxGy
uk5rU3e/YLZXO/L91UKA+WUTQbt0Dqrzq7skFEqEwnu/uu5pDyNlHnOpgmU8
zNFVfm58+IlevW5eWRPYmve/8ZiO+Y/ZepaxxrbFg+XTpBMfG7jAIHjbsO5e
RSgOVXg4Lb7E1KFO4DIE8eB4Hue98rwVGaTGhTc7E+Gk8qeUnskNVOL7mfDk
NB5EtzvIlopjoMSk74m+MgH0YjVv27YMomHbdvqHeAKIYCsLG7YtInxEgJa6
GAFSlJ410C6sI4aUXuxBCUXYVvaV1mQyidSYX/xjyUTYxRFVENr9FgWIF3ur
pxJBItSJqRvIQRfTRLAYRzyQv15c/KuuC/EMjjv51Gzlt3UUWY2iLnbmkyUj
PNTY0evSS5bRm9fujGw6CSyNGd9rlbsRexAbLNtHBOMRYTl1zzFkZN8q0bhf
EQ6PNn/HOU//5o8Nj24LCSRBkuGUfDT+B8o8G0E6NakIllJVnFR2PzqjxXac
Ok+ESm0K1fnkF3S4AjbveyiBhKWoicXGMJLPs9YVWCOBmflkWfUvBnooH8ma
XSKCh5dGVSx9HK2QcvurykjQdCR+XuQHBhK+9P173V8RGuYjReazZ1Bjs/ZV
fBgZEuw6a4Q+zSA2LiKKN5cEcYdCNKVz+1DEXo//jTKUIGRR/+666Bjy+372
YWIYCS4kWMf7tfNCkl/54mgqAba1VosP3+EgtoRG1r4HZJi4FZl7sAEDtmPy
nbwUIkR2KJxY7dxAfpmRQtqmStDrFqkhMT2PmOO87qeriBDn75RYPbX0Gyfv
N9VszCNDadOqr1/5LNL2HTP89FkJXl4+TnETHkcCB1xcQuvIYJntO+ZlPYf8
ZCzvW3gSYXl2bjhLcuQ3nvjl0k3yVxLc6RX3CS5cR9o/c0pbhonAtA/weh/Z
ikw5qz2bvSSQTiV+zNPcQFUvI5gW80ownk5vyCdNIuWb1ajkqjLUcntM1pWP
ov7Jww8sP5KAq+jPOorcHNPDNo4aba4Kixo5neSBYZSiI2lwLoUM7HHB4y33
+GA4qrlxukkJDgkVXqnjXkYMJ9pmkD0ZmCNtJ9xTZtB80TVW/wAJRq54Kmxv
nEOOcrmOpRNkCNdh3RwPG0LfokeW0kaVoHuAuMCMW0Zp8WnGaicVt/aVJvY7
YMAopjGM+xYZBkKOqUVlz6LU00LYy3wqkOpWHEQbnkYxsjv+4RZVhZMdori4
/AXEY7KhbZxBgm3Ypmh+75/o9hlFVRJOBXrDbYxEw2bQpT2k/xWpqMJ03u1n
f+9bRNjbwvf5v5GgXTixeSN5A/l0W7r4FSsDx8cw56X38m9+lRF6gNGjDEwF
9sg+u3ZUH0N7THdWBSn1LPNxgyU0wsOarKIrA/Tvl/CMGfuNk1dWZXdt/bub
XTzqmDOMErHnJ0/wqcKXUR71a3mbaLWbce7fexTQkAmv4F1bR39LWc05lVHA
voA/Rp1vE32xZVfVGVBgesy/1eo9BnTmOhcFvUhQ65C03WerH+p0ii0DWMpw
gEPOCyzggu99y558W/ftn6nnWAnxg/B4Ub50oiok1z/68IjOBRZfGQGSMcpA
4QQ/dxPjBTmqq0TlBQo8zh5Scs0SBAteafWUNjW4oBvu6UHtZnpcZ97Z7KUA
7lFdVsb1aWbpq1Sm/3cKmN24WjOMr0YVveWnG7up8KJYZvfFoRWkIRIeFF9E
BeeoN4p3TvCCV2voSOewMlzURL22rqvouBn3igWOCvT39vGsskW0QTNHjTs1
QZJqQnrV3YzeFYsULNhQIVL3kr5xydJvvhr7Il8sRQ001mo0bbfyEeI3vcmV
qwqbHpnNO6QxoLfQz8tDo8Ch+28eBL/ig2ABZUF3UwpgPIO7Rg9soIuaTUTc
Yw2YaDhyEjyEYAeJlhZIpUFCwfHLnoVbfXjrtOdgiTpw8GFfDff/QJSurltP
stSAKOUUOTS1gDL+cz2ywNaCSIZDmRhdGApbUsJ66FRwOPPAg0paQSxpq8lN
Lxr4R4iaEAzWkA2HYStRrQHpj8NcPw1yUCBGck2QVxn29WE+e8X9QrsusjNF
LmvAy9wZQjaVGwgNfM9CTmkC/2ibp6gdHwwo5AosjmtAQtrGU/ZVHpD9kL7r
7VVtCHq9DzNgKAqtYhaZOima8NW2TYWeu4lW3r4scxrQhRjN75f8KiXhaORc
aJm4Bkz1cfZoV26DCYuyP+OttIDCf/C5+QYGrOs/qu9M1gXsnsJoLm1J0B7i
x7XTtaCsNYLP5RYWMlNmgv5t3wujH3VqX6fwwMpVlpB2Bg0kOt86DH8TAuoj
i3lijx6MrWaF3FSYQRpRrB/WOTSg/JOLNXcWh6SzwhUtFfqwg19LOLG1hvmq
YlxftUkVTkmLFDw/KAkMldYQgUQ9yDd3bbvG5oFl0afe5d/0oEVP0/QwQwAi
6qfjJ5t0QZZ1flBjLx/MD6Uus+sNwO1hokKULx9YZZ1/Y/rZGIIV+xw/RSnD
/wGNjT+F
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
xM3wD50oxlk=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[{
              Offset[{0, 3.75}], Offset[{3.75, 0}], Offset[{0, -3.75}], 
               Offset[{-3.75, 0}]}]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             LineBox[{
              Offset[{0, 3.75}], Offset[{3.75, 0}], Offset[{0, -3.75}], 
               Offset[{-3.75, 0}], Offset[{0, 3.75}]}]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
UgCqZf0qeNw1wECxPPWfAAn4P/Up0bE=
       "]]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 25}, {-3, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8592904633990755`*^9, 3.859290474608111*^9}, {
   3.8592905269784045`*^9, 3.8592905338982134`*^9}, 3.8592906460576134`*^9, 
   3.8592912628683767`*^9, {3.8592924472629547`*^9, 3.859292450335955*^9}, {
   3.859299542481125*^9, 3.859299569173095*^9}, 3.8593003086167045`*^9, 
   3.8593003391503596`*^9, {3.8593071834330378`*^9, 3.859307204449623*^9}, 
   3.8593139517780523`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"0f9920e9-51d7-49c5-84e8-1c003de84bf9"]
}, Open  ]],

Cell["\<\
This does a better job and largely excludes the outlying Brazilian and \
Guatemalan points. However, it\[CloseCurlyQuote]s very overtrained, as we can \
see from the messy curve.  Let\[CloseCurlyQuote]s try a Gaussian function:\
\>", "Text",
 CellChangeTimes->{{3.8593094443914194`*^9, 3.859309483854926*^9}, {
  3.85930957392362*^9, 3.8593096046307487`*^9}, {3.85930964537123*^9, 
  3.859309662080577*^9}},ExpressionUUID->"ab6aa75a-38ef-4930-910e-\
e0c4b47e2636"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fR", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"Normal", "[", "dGdataSAByType", "]"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SupportVectorMachine\>\"", ",", 
       RowBox[{
       "\"\<KernelType\>\"", "\[Rule]", "\"\<RadialBasisFunction\>\""}], ",", 
       RowBox[{"\"\<GammaScalingParameter\>\"", "\[Rule]", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox["0.4", "2"]}]]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8592912887203784`*^9, 3.8592912959145937`*^9}, {
  3.8592924570870275`*^9, 3.8592924611979833`*^9}, {3.8593003512797055`*^9, 
  3.8593003563525486`*^9}, {3.859307214616561*^9, 3.8593072244302006`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"3edce36f-87f7-431a-bf43-f9ab68a2afe1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Guatemala\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Mexico\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                    "\"country\""}, "Entity"]}, "RowWithSeparators"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    TemplateBox[{"\"Brazil\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Guatemala\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
                    "\"country\""}, "Entity"], 
                    TemplateBox[{"\"Mexico\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", 
                    "\"country\""}, "Entity"]}, "RowWithSeparators"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["549", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 549, "ClassNumber" -> 3, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Length" -> 2|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 549, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 2|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> MachineLearning`MLProcessor["Identity"], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{-0.9810015921630049, 
                   0.19399968085965902`}, {-0.19399968085965902`, \
-0.9810015921630049}}, 
                  "Precisions" -> {0.05727573320108471, 0.8396014343132339}, 
                  "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {12.043517106219792`, 1.3442456354164372`}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13., 1}, "ID" -> 1644352530978073028|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 2, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {12.043517106219793`, 1.344245635416437}, 
                    "StandardDeviation" -> {4.104525202538504, 
                    1.3428757552479051`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 2, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                    4747808072524423015|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {12.043517106219793`, 1.344245635416437}, 
                   "StandardDeviation" -> {4.104525202538504, 
                    1.3428757552479051`}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13., 1}, "ID" -> 
                   4747808072524423015|>], "InputDimension" -> 0, 
                "OutputDimension" -> 2, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> {{11.8414168433829, 1.1085047013157079`}}, 
                    "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.0456716, "MaxTrainingMemory" -> 203024, 
                  "DataMemory" -> 11680, "FunctionMemory" -> 29504, 
                  "LanguageVersion" -> {13., 1}, "Date" -> 
                  DateObject[{
                    2022, 4, 19, 0, 40, 40.6566744`9.361706731763721}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-3.8396461258311305`, -3.8396461258311305`, \
-3.3024767386380964`, -2.951794962930273, -2.6382522737111236`, \
-2.402244922552804, -2.374505735777525, -2.062286937641291, \
-2.024040133657473, -1.9837106284362171`, -1.7048387644785408`}, 
                   "LeftBoundary" -> -3.3024767386380964`, "LeftScale" -> 
                   0.26858469359651704`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[5.056759444730894, 0.4214298645918625], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13., 1}, 
             "ID" -> 895810465636885430|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {12.043517106219793`, 1.344245635416437}, 
             "StandardDeviation" -> {4.104525202538504, 1.3428757552479051`}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 8168166951674565608|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 2243861272990366060|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               Entity["Country", "Brazil"] -> 1, 
                Entity["Country", "Guatemala"] -> 2, 
                Entity["Country", "Mexico"] -> 3|>}, "MissingCode" -> 0, 
             "Version" -> {13., 1}, "ID" -> 2652975377468253999, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {3}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13., 1}, "ID" -> 1174657711523402568|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       Entity["Country", "Brazil"] -> 0.24094202898550726`, 
        Entity["Country", "Guatemala"] -> 0.32971014492753625`, 
        Entity["Country", "Mexico"] -> 0.42934782608695654`|>|>, 
    "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["AssociationSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "SVMParameters" -> <|
       "KernelType" -> "RadialBasisFunction", "GammaScalingParameter" -> 
        3.1249999999999996`, "SoftMarginParameter" -> 0.1, "PolynomialDegree" -> 
        3, "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
        "Shrinking" -> True, "KernelCacheSize" -> 100|>, 
      "TrainedModel" -> {<|"supportVectors" -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAdhddSfJUBEDdaBmDShEMQOj6/8O0
nNE/QNe0CVvNtT/yoLEArS8EQCSbrumdzwJA9N/m3nQrsb8XLkr74HDwv7A3
2j2AiuI/+F7jaOHL0b/GXXqnQQzzv9ICfVpY7vE/MZE6YyRMz7/AkYT7Rb++
v9DEj4A3nua/+iIlFBKUur+FtA8qasHfP9s9V0d34N0/1qhQMZud+T82dS0Y
Ojzfv0meiMBFxve/lDfeoVxNz79ifxP0wH3+Pyk6/mjMie0/SGI9NE7w1r8Z
awnw0K7nv6ABpRwJ7cq/2cwYOhDd9L95fXdLY3Llv5Ds25ZU8J2/g2hNk3ON
0D/HHEu7G5Pev0Xiv4DbFN4/JixqhGja+7/RywJmKPP8v58C55QTgNo/1oBu
ElNv2D9/zCS/cKfxP6Wm1gV2NdE/drmPETyBnT9zOJ+NlA7Vv6Tn2ZXeAua/
kCwuM4AI9T99LEwOFUfMP/ie42S1a+q/V3Hd6+pZ+b+eXeDEuc/ovzicDbym
FOS/hMPCiiluBkDw1sCMT03uPws7dMIhitw/EJLItKZi1j8g69vU17DLvxBk
Sibgv7G/xDaz6/uy4j/kSK6xQ/nCP9ke9AWcxPa/cu3GtDL35j+P/u6/1PjK
v273+YuhU92/fvEJBg==
          "], 
         "supportVectorCoefficients" -> {0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
          0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
          0.1, -0.1, -0.1, -0.1, -0.03446971520829957, -0.06505785115263577, \
-0.1, -0.1, -0.1, -0.1, -0.06553028479170044, -0.1, -0.1, -0.1, -0.1, -0.1, \
-0.03494214884736424}, "rho" -> 0.9476228720379507|>, <|
        "supportVectors" -> CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAdhddSfJUBEDdaBmDShEMQOj6/8O0
nNE/QNe0CVvNtT/yoLEArS8EQCSbrumdzwJA9N/m3nQrsb8XLkr74HDwv7A3
2j2AiuI/+F7jaOHL0b/GXXqnQQzzv9ICfVpY7vE/MZE6YyRMz7/AkYT7Rb++
v9DEj4A3nua/+iIlFBKUur+FtA8qasHfP9s9V0d34N0/1qhQMZud+T82dS0Y
Ojzfv0meiMBFxve/lDfeoVxNz79ifxP0wH3+Pyk6/mjMie0/SGI9NE7w1r8Z
awnw0K7nv6ABpRwJ7cq/2cwYOhDd9L9YH0DSl7n4PyULdwa1tPQ/HqWSXYQz
1L9jq59kda3kv039C17XCua/ZMyFqUcrs78QSL3RpO3zv2fjE2qABua/6s1k
cuSKy791DRjZA/frv/tHPRt5Nt6/GbRk9vm97r8f0pnfplTwP3dFh/3zWfK/
Jia/Ac2g4D9VmKBldYvsP7EjtvFbh7y/Zb0WDKgw+L/XhQIsn7Xcv7xjLsgL
Z1Y/5L7twIPj7D9E5NxVKd6kvwnFujJCbJk/0poEiI3umb8ZHu+R9OXfP+B6
x6V8olE/j8l4r8afBEC5NHdJCFkAQJCI8ZQ=
          "], 
         "supportVectorCoefficients" -> {0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
          0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
          0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, \
-0.1, -0.1, -0.1, -0.1}, "rho" -> 0.9577716425321073|>, <|
        "supportVectors" -> CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAeX13S2Ny5b+Q7NuWVPCdv4NoTZNz
jdA/xxxLuxuT3r+jQbPoPjDPPybKtKM4ZKG/vmRXWP3WsL+eRZsBua/xP0Xi
v4DbFN4/JixqhGja+7/RywJmKPP8v58C55QTgNo/1oBuElNv2D9/zCS/cKfx
P2f7q6jFOwrAmb7yKyzb97+Z3km7Lb7Rv7neY4sKGdU/cRoMzcG1tj+T+pSE
urXhP6Wm1gV2NdE/drmPETyBnT9zOJ+NlA7Vv6Tn2ZXeAua/kCwuM4AI9T99
LEwOFUfMP2aSEpQjb6y/vY7+cQMi5T/4nuNktWvqv1dx3evqWfm/nl3gxLnP
6L84nA28phTkv6bop2pissW/M41tj5xI2L+Ew8KKKW4GQPDWwIxPTe4/4jNt
/NeY1T8g5BK9ELQHQLnox5zQddM/alLIAOOs4D8LO3TCIYrcPxCSyLSmYtY/
pZrez+7T8r9juxW7EhTvvyDr29TXsMu/EGRKJuC/sb/B9enuPwvzv7EEMZ0F
pe+/xDaz6/uy4j/kSK6xQ/nCP9ke9AWcxPa/cu3GtDL35j+P/u6/1PjKv273
+YuhU92/cgn2BxTWwL8M8qSlACTUv53e5jPaOPk/SuWWt7OsD0CgXHAbLKP3
v4c3V/BcyfG/2ChtaJGV6D/WdMnmxcT2PytE+YDvMdQ/sL1MM1Lw7j9EZdH9
kTPRv4bnn1KCQ+K/WB9A0pe5+D8lC3cGtbT0Px6lkl2EM9S/Y6ufZHWt5L9N
/Qte1wrmv2TMhalHK7O/EEi90aTt879n4xNqgAbmv+rNZHLkisu/dQ0Y2QP3
67+/UTZnJXz/Pw6gkndPR/g/dcvds4Nb8D/YYJAlk4rCP4CGkD+QOfA/copf
MfC1/T/7Rz0beTbevxm0ZPb5ve6/H9KZ36ZU8D93RYf981nyv5/m2r/A4Pk/
1/RWuKyW+j98ZPplS2oAQGBD7EUXIf0/i7Ur4HQr6r/2nWW1EErSvyYmvwHN
oOA/VZigZXWL7D+xI7bxW4e8v2W9FgyoMPi//3qIvG296r8/TTlLYiSUPyn7
Ac2+geq/q0AIlhin1L/XhQIsn7Xcv7xjLsgLZ1Y/5L7twIPj7D9E5NxVKd6k
vwnFujJCbJk/0poEiI3umb8ZHu+R9OXfP+B6x6V8olE/kZnq2bCL0r+1YA6K
Jabjv4/JeK/GnwRAuTR3SQhZAEDwXvEc
          "], "supportVectorCoefficients" -> CompressedData["
1:eJxTTMoPSmVkYGCwAOJZM0Fgp/0wp/cPVxoAdncPOg==
          "], "rho" -> 0.04985117283266888|>}, 
      "ProbabilityCoefficients" -> {{-0.6719715595245361, 
       0.7009477615356445}, {-0.05647755414247513, 1.264374017715454}, {
       0.28251808881759644`, 0.008188219740986824}}, "MulticlassStrategy" -> 
      "OneVersusOne", "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "SupportVectorMachine", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "KernelType" -> <|
         "Value" -> "RadialBasisFunction", "Options" -> <||>|>, 
        "GammaScalingParameter" -> <|
         "Value" -> 3.1249999999999996`, "Options" -> <||>|>, 
        "SoftMarginParameter" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
        "PolynomialDegree" -> <|"Value" -> 3, "Options" -> <||>|>, 
        "BiasParameter" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "MulticlassStrategy" -> <|
         "Value" -> "OneVersusOne", "Options" -> <||>|>, 
        "Shrinking" -> <|"Value" -> True, "Options" -> <||>|>, 
        "KernelCacheSize" -> <|"Value" -> 100, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "PanelCell" -> CellObject[4160081], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1597881`6.655089426191258, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[1.1550862020040378`, 0.037527078017410294`], "Accuracy" -> 
         Around[0.37955922364978295`, 0.03112207642082144], "EvaluationTime" -> 
         0.00004470786267552238, "TestSize" -> 479, "ModelMemory" -> 35112, 
         "ModelUtility" -> -0.8438171779772139, "TrainingSize" -> 70, 
         "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 142016, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.1550862020040378`, 0.02653565134422744]}, 
         "AccuracyHistory" -> {
           Around[0.37955922364978295`, 0.022006631281768795`]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "RadialBasisFunction", 
           "GammaScalingParameter" -> 3.1249999999999996`, 
           "SoftMarginParameter" -> 0.1, "PolynomialDegree" -> 3, 
           "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
           "Shrinking" -> True, "KernelCacheSize" -> 100}|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "RadialBasisFunction"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3.1249999999999996`|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.1|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.162242609375047, 0.038626522247516774`], "Accuracy" -> 
              Around[0.36586999759028144`, 0.03389769294230645], 
              "EvaluationTime" -> 0.00003571674682851674, "TestSize" -> 400, 
              "ModelMemory" -> 15912, "ModelUtility" -> -0.8501373567706356, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 109224, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.162242609375047, 0.02731307581487215]}, 
              "AccuracyHistory" -> {
                Around[0.36586999759028144`, 0.02396928854608426]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1550862020040378`, 0.037527078017410294`], "Accuracy" -> 
              Around[0.37955922364978295`, 0.03112207642082144], 
              "EvaluationTime" -> 0.00004470786267552238, "TestSize" -> 479, 
              "ModelMemory" -> 35112, "ModelUtility" -> -0.8438171779772139, 
              "TrainingSize" -> 70, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 142016, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1550862020040378`, 0.02653565134422744]}, 
              "AccuracyHistory" -> {
                Around[0.37955922364978295`, 0.022006631281768795`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1749603506482633`, 0.06760067472183194], "Accuracy" -> 
              Around[0.372037132466339, 0.06489595971309858], 
              "EvaluationTime" -> 0.00007431045451310089, "TestSize" -> 110, 
              "ModelMemory" -> 145320, "ModelUtility" -> -0.8658667894852268, 
              "TrainingSize" -> 439, "TrainingTime" -> 0.1, "TrainingMemory" -> 
              1066704, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.1749603506482633`, 0.047800895508593386`]}, 
              "AccuracyHistory" -> {
                Around[0.372037132466339, 0.045888373184741]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00007431045451310089, "MeanCrossEntropy" -> 
             Around[1.1749603506482633`, 0.06760067472183194], "ModelMemory" -> 
             145320, "TrainingMemory" -> 1066704, "TrainingTime" -> 
             0.17517567097092768`|>, "Index" -> 1|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "RadialBasisFunction"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3.1249999999999996`|>, 
             "SoftMarginParameter" -> <|"Value" -> 0.4|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.3781608249822979`, 0.05866783587764623], "Accuracy" -> 
              Around[0.34872252753062416`, 0.038749660903423515`], 
              "EvaluationTime" -> 0.00005714449788567783, "TestSize" -> 300, 
              "ModelMemory" -> 16680, "ModelUtility" -> -1.0223890000516236`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 113392, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3781608249822979`, 0.04148442458662307]}, 
              "AccuracyHistory" -> {
                Around[0.34872252753062416`, 0.027400147993490005`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2143813505989551`, 0.09510401195116014], "Accuracy" -> 
              Around[0.3989878772427103, 0.06575459671338856], 
              "EvaluationTime" -> 0.00009355131954851727, "TestSize" -> 110, 
              "ModelMemory" -> 147496, "ModelUtility" -> -0.902968056186871, 
              "TrainingSize" -> 439, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 1004288, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2143813505989551`, 0.06724869176871179]}, 
              "AccuracyHistory" -> {
                Around[0.3989878772427103, 0.04649552123022371]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00009355131954851727, "MeanCrossEntropy" -> 
             Around[1.2143813505989551`, 0.09510401195116014], "ModelMemory" -> 
             147496, "TrainingMemory" -> 1004288, "TrainingTime" -> 
             0.19724808632072507`|>, "Index" -> 2|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "RadialBasisFunction"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3.1249999999999996`|>, 
             "SoftMarginParameter" -> <|"Value" -> 3|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.7658270983654871`, 0.07943694917646807], "Accuracy" -> 
              Around[0.36082680193501704`, 0.030249686160325712`], 
              "EvaluationTime" -> 0.000034897952783150155`, "TestSize" -> 500,
               "ModelMemory" -> 16680, "ModelUtility" -> -1.2707373067609011`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 113792, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.7658270983654871`, 0.0561704054394517]}, 
              "AccuracyHistory" -> {
                Around[0.36082680193501704`, 0.021389758212731168`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.1864381681188336`, 0.08932388075910379], "Accuracy" -> 
              Around[0.3981031081468979, 0.0655849361607258], 
              "EvaluationTime" -> 0.00008175403674370625, "TestSize" -> 110, 
              "ModelMemory" -> 141096, "ModelUtility" -> -0.8790911552068437, 
              "TrainingSize" -> 439, "TrainingTime" -> 0.12589254117941673`, 
              "TrainingMemory" -> 918040, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1864381681188336`, 0.06316152180666086]}, 
              "AccuracyHistory" -> {
                Around[0.3981031081468979, 0.04637555310293603]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00008175403674370625, "MeanCrossEntropy" -> 
             Around[1.1864381681188336`, 0.08932388075910379], "ModelMemory" -> 
             141096, "TrainingMemory" -> 918040, "TrainingTime" -> 
             0.20755609262810257`|>, "Index" -> 3|>, <|
          "Value" -> "SupportVectorMachine", 
           "Options" -> <|
            "KernelType" -> <|"Value" -> "RadialBasisFunction"|>, 
             "GammaScalingParameter" -> <|"Value" -> 3.1249999999999996`|>, 
             "SoftMarginParameter" -> <|"Value" -> 1.|>, 
             "PolynomialDegree" -> <|"Value" -> 3|>, 
             "BiasParameter" -> <|"Value" -> 1|>, 
             "MulticlassStrategy" -> <|"Value" -> Automatic|>, 
             "Shrinking" -> <|"Value" -> True|>, 
             "KernelCacheSize" -> <|"Value" -> 100|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           4|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["RadialBasisFunction"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 4], <||>], "MaxTrainingSize" -> 549, 
      "PreprocessorEvaluationTime" -> 4.628125*^-6, "PreprocessorMemory" -> 
      43408, "InputDimension" -> 2, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.0717438713667762`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.8593176415285174`17.33908551385364*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.11583296609846944`, 
          "ElapsedTimes" -> 0.2029277, "ExperimentCounts" -> 3|>, <|
         "TrainingSizes" -> 70, "TimeBudgets" -> 0.19305494349744906`, 
          "ElapsedTimes" -> 0.3090361, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 439, "TimeBudgets" -> 0.3217582391624152, 
          "ElapsedTimes" -> 0.3809207, "ExperimentCounts" -> 3|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{11.8414168433829, 1.1085047013157079`}}, "ID" -> 
           6515543852639189880|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 1.8616772, 
      "MaxTrainingMemory" -> 1362032, "DataMemory" -> 10688, "FunctionMemory" -> 
      176648, "LanguageVersion" -> {13., 1}, "Date" -> 
      DateObject[{2022, 4, 19, 0, 40, 42.4692738`9.380649709473618}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8592913110384374`*^9, 3.85929246661215*^9, 
  3.859300454515438*^9, 3.859307227447961*^9, 3.859314042640277*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"a383178d-e4b3-4186-9302-3beb7ec5e402"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"fR", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{"\"\<Probability\>\"", "\[Rule]", "\"\<Brazil\>\""}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "25"}], "}"}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "False"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightOrange"}], "}"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "/", "2"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Values", "[", "dGdataSAByType", "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8592913304838715`*^9, 3.859291354688684*^9}, {
  3.859292470309029*^9, 3.859292479780201*^9}, {3.859300510374657*^9, 
  3.859300520891221*^9}, {3.8593072328483105`*^9, 3.8593072470939693`*^9}, {
  3.8593072850329475`*^9, 3.8593072983903913`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"44539c8c-3f17-40be-b20f-61d5e8dfeaa6"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
t0H6P6sVNi4=
     "], 
     {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNltlXl1UUhs/X5NDMoKiYoGQFKqhpoojIbAJOiROSYYiWaKQoiQZaqSiC
mpGamQ1Eic2ptVZr1V11179TV73vOs9vycW7zrfP2WfPZ+8vt2X/+n33hRDy
kxDu17pUeFFYBYrZqxWWQDcJdUK9sFpYJpRALxdKkbGUszrOfbZWKBNWCuuF
cqFC2IwO69zCahkbOK8UtqHP8rZybnod8ixrjbACHQ3YYno79nnvgLBTeFWo
FhYLLwivo8P+7cEO62nBVtvSKbQKu4QO4RXO32S13DeEHZw1o9N2vczqGGwS
avB5P2e+046tvrcXW0zvY898G4UqbH+J2FSRn1rk/iY8IExRXn/X+qAwVd9n
tXYLR4UzwhHoPuEt6LvCd8JFYZTvYeGO8K0wQbjJ9+fCLeF7YUS4LXwjSFU4
LXQh92d4zHtSOCQcFj6D/1PhJ3SNErt1xP0UvF1gN/kpCLG+XGdzQ6wv19ki
4lFJbquhr+Cn/c4TnhcWCrNYFwgzWecLc5BnHc+FWPuOcT46TT8hZAoZwmz0
Wf/TrNbxtzBOeEpBeSbEWltMvtfi52sh1prrzzW0gdymbJo1Ru5s5OZB245V
5N5xaiNGKd/y8CcXWdZvO54V5tkuYUaIb2g+OivRsYj87cHGYmLhGBQJOcgt
REYOvs1GRznyFsLjt1iKHusr417hGFvmkc90YbqQTYxncJ7B6rMnhWnCVCEN
XtNZ+GrbphCHmfDl44P5Csb4UoZ9udhXhLw58OWwV4juuZxN5k4O9wvhK8WX
VGzswyT4JnFvGj6kYV8W9uZynjXG50z0pkNnc890BTF2ztybGkPsMe5xrqON
3Hk8xJp1fbjnuscd4o7rxu9kETlsQ8ZmYlNEXKzvMWS5p7i3/EE8pmPvcmj7
X0KcTC8jlqaXEvsUnc39AuJi2j3mixD7TKF0Paz1H3y1z+X4XAnteDyKffnk
27IWwLsSm0qx8U/hIeGvEPvQDyH2rl9C7Fc3hF8Fz8jJSZw5W4mbZ882aM+k
JmjPme3QtcTPcUzNNtN+S+61flvu8+7H3ej8KsReanwinA+xZ10NsYelZonn
Qb9wTfhIGBCuCx8L51h9dpZz33cv/VAYCnEuNWOr8+4aca24H7n/7gix/7ZA
uyftDPfmnOdoau557SDG65FRwR3TZSH2ujXkYB10JTo3kJMG4ldDzBrJUz0x
Xotd9n8F8nynhPPV2GpbPIc9gy7j8yDxdIwOE4uT8PUKPSHOYq9vhzhzvR4L
cS59GeIc7ELuKfLXB91LrqznuHABupscnCHP/dAd8PWi4xxnPchwPo9wrw9b
BuAzfQXfDgrvCu+E+Jbt03vsDbNvW0awZxhfvN+Obtvl+v86xFk8Ct/7Ib49
v8GJjncSzycl8a34jmd45xidxiXuui5O4KfPP+DsKn45DjfRMR7bh+DbQW6c
k1Z02Nc28mdf05M4a+qSezkzf2YS51tDci+vljUhiT21WmsG87he67gk9uRK
rWlJnKurk2h3B36cJ1fe+zfE/rdEPP+F2FOLk5i3Hvh60en7E5PY12uSGO92
bB0grz3k2n3B/6HuA/5nukGMb5Mb98M75MM1eZdcev/HEP/NvO9/qYvUyjF0
9JPnY+TY8tzXxidx1lQlsVatfy81c5z8HWWvnfweHJPzTnJxgjgdwH73UPey
R0Lsx+7Lfn+DxNJ9cDf53Irv/s9oJjbWtYU9823DNvN5jvitux83YZvPRtBp
Pe4rnn/uVZvQswscwm7L9hv2m27krBV93nOdudfsx6bt2JXS103ebqH7Anlw
PlzX7jvuE6eJgWenZ1SqRzv/rqMMzq6zN0i8zOv/A/fvs+Qw9Q/hf4pL5CP1
trz6DV2D1zouo989Y4hz2zTMXb/T/wFPwERq
         "]], PolygonBox[CompressedData["
1:eJwt0/lTT1EYx/FzVEJpsTcqogXZCoUWKURZmv4EfwB/k/or7BPVTFRmKqTF
kpG0Ka1GqfdnnueH1/c+99x7z/fe83xO3v2HzQ+2hBBuIBEXYwjpHNOwqnHO
D3Dcj23U16PV+5BMfQkZwZ75i2vRru3FVt0LzZ+Ap2jgPJ/jUWREozoLO6lT
kYKbuBXtHfQuqfiJfN2PQepPOEKdhw/UH/Ve1I+C/edjxKifEGpwFVWoxH+G
N4KN6dof6gWsYFnPM5aAK6j2OTRXBS5jmqEZzGMOa1jHO/TiEPccRn20b9Ma
bqd+wfE5BvAe4/iBMq6VY4p6EmepSzBMPYRZ/MYvTKAP/WjinlaOO9CDk5wX
4w31W5ygPo4x6u9YwiLOM3YB51CKr4x9C/bN+vZa1CkLSPOeqDej3DOC12hH
JzpQwLVCHEMRPjP2BdnUB9FG/SrYnJo7EUnRMqKsKEP//B30LkU+l3qq3qrn
6v0T6pZgPb4XLQODvkbDvqZaW2VC2ej3ter13mRFy3kSXqov0bKpsWfI5TxZ
WUc3GjkvCJbZTOq7ei+9H/ZQ34lWF2I39e1otZ7ZRZ2jbww2Z5dnTtmr9mxp
Tdp8DTv9P/Xfrd5branWVms+6j1UL9Vj9fo0TkXL0LjvEe2VFJzxDClLE56d
du+deqLeKMPTnrkpz9isZ3re94T2RqlnRRlVVhc9S8qQsrTse2fd90Kl7zVl
QFlQBpXFTdWcf5g=
         "]], 
        PolygonBox[{{187, 3, 280, 189, 190}, {203, 202, 200, 6, 285}, {288, 
         287, 208, 11, 209}, {329, 328, 269, 25, 266}, {273, 36, 330, 270, 
         271}, {205, 10, 228, 301, 302}, {251, 16, 250, 314, 
         315}}]}]}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
/wGNjT+F
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
xM3wD50oxlk=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[{
              Offset[{0, 3.75}], Offset[{3.75, 0}], Offset[{0, -3.75}], 
               Offset[{-3.75, 0}]}]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             LineBox[{
              Offset[{0, 3.75}], Offset[{3.75, 0}], Offset[{0, -3.75}], 
               Offset[{-3.75, 0}], Offset[{0, 3.75}]}]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], CompressedData["
1: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
UgCqZf0qeNw1wECxPPWfAAn4P/Up0bE=
       "]]}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 25}, {-3, 25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8592913465842476`*^9, 3.8592913591388874`*^9}, {
   3.859292479409999*^9, 3.8592924847227654`*^9}, 3.8593005168772435`*^9, 
   3.8593006408455315`*^9, {3.859307241706369*^9, 3.8593072506479807`*^9}, {
   3.859307288181117*^9, 3.8593073001637497`*^9}, 3.8593140459082007`*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"a87aae66-cd8b-477f-9acd-e6898b0d3e52"]
}, Open  ]],

Cell["\<\
This has failed entirely! Extremely overtrained and not quite making sense. I \
would say overall, if one was to use SVMs for this, that the polynomial case \
would be best. However given how entagled the points are, it may be hard to \
determine this with SVMs.\
\>", "Text",
 CellChangeTimes->{{3.8593096722606134`*^9, 
  3.8593097456432133`*^9}},ExpressionUUID->"835ec751-dad3-4a28-9444-\
66cd1c17505a"]
}, Open  ]]
},
Evaluator->"Kernel 1",
WindowSize->{1420.5, 645.},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0f8ec850-07c7-469e-aa60-c1145438ceb4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 236, 4, 98, "Title",ExpressionUUID->"d7a1a54d-d6ce-48f0-a9cb-6e0bac01d545"],
Cell[819, 28, 348, 7, 35, "Text",ExpressionUUID->"c3cc6317-327e-4201-9ac3-88dc46e07339"],
Cell[CellGroupData[{
Cell[1192, 39, 899, 14, 28, "Input",ExpressionUUID->"6d1ea80c-02c4-49c0-a03b-1c7e87801e39"],
Cell[2094, 55, 195119, 3620, 650, "Output",ExpressionUUID->"51cd36db-43da-459a-b308-14102aefa84e"]
}, Open  ]],
Cell[197228, 3678, 324, 7, 35, "Text",ExpressionUUID->"084cbf5e-8c44-4ff9-b880-9ce7d439b9d0"],
Cell[CellGroupData[{
Cell[197577, 3689, 900, 16, 28, "Input",ExpressionUUID->"f3321ad3-b710-4ab3-b7a0-ce74a8e0f904"],
Cell[198480, 3707, 89721, 1682, 630, "Output",ExpressionUUID->"b0ab5855-18cf-4f55-b922-7de5596031a5"]
}, Open  ]],
Cell[288216, 5392, 320, 7, 35, "Text",ExpressionUUID->"56b9e81b-e09a-4963-8f3f-c4c12bd416e4"],
Cell[CellGroupData[{
Cell[288561, 5403, 843, 19, 28, "Input",ExpressionUUID->"d0492792-cf10-4780-b9ef-3778e24dfa40"],
Cell[289407, 5424, 272303, 4461, 997, "Output",ExpressionUUID->"7fa44a49-9d7c-4c41-80cf-2831c3548062"]
}, Open  ]],
Cell[561725, 9888, 179, 3, 35, "Text",ExpressionUUID->"95de23fc-9159-4b25-845c-58d0e2ce8cae"],
Cell[CellGroupData[{
Cell[561929, 9895, 328, 7, 28, "Input",ExpressionUUID->"cb2b8942-e34c-47ef-a4d7-2dcdcaf46d2f"],
Cell[562260, 9904, 117648, 2004, 528, "Output",ExpressionUUID->"620c2c4d-885b-4eb8-98b9-140d7605e60f"]
}, Open  ]],
Cell[679923, 11911, 290, 6, 35, "Text",ExpressionUUID->"9691006a-ef6d-4a6c-a1b2-c6088eb68a16"],
Cell[680216, 11919, 251, 6, 28, "Input",ExpressionUUID->"cbcfd91e-9c08-4206-bd95-d13c9b4f97f1"],
Cell[680470, 11927, 563, 10, 28, "Input",ExpressionUUID->"1ac51717-cc9a-4fde-9d79-2987b9dfad55"],
Cell[681036, 11939, 380, 7, 28, "Input",ExpressionUUID->"3e2c1268-ed34-4c29-b572-e63d3ff71df7"],
Cell[CellGroupData[{
Cell[681441, 11950, 985, 15, 28, "Input",ExpressionUUID->"c7b525c1-024a-46db-9a40-9a0269e27d21"],
Cell[682429, 11967, 21626, 321, 298, "Output",ExpressionUUID->"cdfe087d-3ae1-41e4-87d0-b241145603d3"]
}, Open  ]],
Cell[704070, 12291, 548, 11, 58, "Text",ExpressionUUID->"98d77cc0-06a9-40f4-8304-6bc4c1434073"],
Cell[CellGroupData[{
Cell[704643, 12306, 1689, 28, 28, "Input",ExpressionUUID->"0ec6edff-a019-4054-8e0e-2a72d00fa319"],
Cell[706335, 12336, 15654, 310, 65, "Output",ExpressionUUID->"2fa59543-bd19-4693-83a1-81711ee89462"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722026, 12651, 477, 8, 28, "Input",ExpressionUUID->"d9b93824-4a20-4d44-bce2-19da87e1ddc6"],
Cell[722506, 12661, 81007, 1465, 501, "Output",ExpressionUUID->"4a1c2425-81ad-440b-bb12-738d0a378b2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[803550, 14131, 374, 6, 28, "Input",ExpressionUUID->"b1413168-f5b8-4a23-82b9-d92a0ce169ad"],
Cell[803927, 14139, 22170, 438, 244, "Output",ExpressionUUID->"0e300176-5888-4371-98e4-8bbf060401aa"]
}, Open  ]],
Cell[826112, 14580, 292, 6, 35, "Text",ExpressionUUID->"f6ac8d74-d77f-4c9d-b81a-5b3ae45a6d1a"],
Cell[CellGroupData[{
Cell[826429, 14590, 1217, 22, 28, InheritFromParent,ExpressionUUID->"8bc79214-d77a-4407-8224-da058d989573"],
Cell[827649, 14614, 74008, 1318, 75, "Output",ExpressionUUID->"bb0b0f74-8bae-4529-a69a-9809326a063e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901694, 15937, 1460, 38, 48, "Input",ExpressionUUID->"0a54ebe0-29a6-46e9-80b3-a3c1601d7724"],
Cell[903157, 15977, 35210, 626, 377, "Output",ExpressionUUID->"8d0b6188-1b86-443b-b3f3-1934823a915e"]
}, Open  ]],
Cell[938382, 16606, 676, 12, 58, "Text",ExpressionUUID->"2b25d8a4-fea0-4a2b-a68d-8c2d16d289e2"],
Cell[CellGroupData[{
Cell[939083, 16622, 885, 17, 28, "Input",ExpressionUUID->"7643ce36-c2ed-47ce-afbb-63cec18a60fd"],
Cell[939971, 16641, 61110, 1103, 75, "Output",ExpressionUUID->"f23e08f4-c685-4f2c-87be-b97550cb693e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001118, 17749, 1524, 37, 48, "Input",ExpressionUUID->"a17a389a-854d-490a-8962-c061fd9663d4"],
Cell[1002645, 17788, 30501, 538, 377, "Output",ExpressionUUID->"0f9920e9-51d7-49c5-84e8-1c003de84bf9"]
}, Open  ]],
Cell[1033161, 18329, 474, 8, 35, "Text",ExpressionUUID->"ab6aa75a-38ef-4930-910e-e0c4b47e2636"],
Cell[CellGroupData[{
Cell[1033660, 18341, 828, 18, 46, "Input",ExpressionUUID->"3edce36f-87f7-431a-bf43-f9ab68a2afe1"],
Cell[1034491, 18361, 45113, 841, 75, "Output",ExpressionUUID->"a383178d-e4b3-4186-9302-3beb7ec5e402"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1079641, 19207, 1326, 34, 48, "Input",ExpressionUUID->"44539c8c-3f17-40be-b20f-61d5e8dfeaa6"],
Cell[1080970, 19243, 21790, 391, 400, "Output",ExpressionUUID->"a87aae66-cd8b-477f-9acd-e6898b0d3e52"]
}, Open  ]],
Cell[1102775, 19637, 416, 8, 58, "Text",ExpressionUUID->"835ec751-dad3-4a28-9444-66cd1c17505a"]
}, Open  ]]
}
]
*)

